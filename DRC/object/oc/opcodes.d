
/*************************** Define opcode maps ******************************

Each line in the tables defines an instruction. 
Name is the name of the instruction, possibly without suffix for operand size etc.
Instset defines which instruction set is required.
Prefix defines which prefixes are allowed or required and what they do.
Format defines which scheme the instruction code is modeled after.
Dest is the type of the destination operand.
Source1-4 defines the types of up to 4 source operands.
Link indicates branching into a subpage.
Options is used for various types of additional information.

A line can branch into a subpage if more than one instruction or variant
begins with the same code bytes. Each subpage can branch further to form
a tree structure many levels deep. The first page, КартаОпКодов0, is indexed
by the first code byte after any prefixes. The subpages can be indexed by
several different criteria, such as subsequent bytes, various bit-fields,
or by the values of any prefixes that come before the code byte. The
interpretation of an instruction may start at the root, КартаОпКодов0, and
follow any branches until the final leaf is found.

Instructions with VEX prefix can use the VEX.mm bits as shortcuts to the
subpages КартаОпКодов1, КартаОпКодов2 and КартаОпКодов4.

The values in the tables do not use names for the constants because each
value would need the combination of several names so that the lines would
be extremely long and very difficult to align in a readable way. The meaning
of the values in each field in the map entries is defined in disasm.h.

ТаблицыОпКодов[] is an array of pointers to all the maps.

OpcodeTableLength[] indicates the size of each map.

If a map is incomplete, then the last entry should indicate a default for
the missing entries, i.e. how to display the illegal or unknown instruction
codes.

New entries can be added whenever a new extension to the instruction set is
introduced.

*****************************************************************************/

module opcodes;

import maindef;

// Структура для дефинирования x86 карт опкодов
struct ДефОпКода {
   ткст Name;                  // название опкода
   uint32 InstructionSet;              // mmx, sse, 3dnow, x64, etc.
   uint32 AllowedPrefixes;             // префиксы, допустимые для данного опкода
   uint16 InstructionFormat;           // тип опкода, число операндов
   uint16 Destination;                 // тип и размер операнда-приемника
   uint16 Source1;                     // Тип и размер исходного операнда 1
   uint16 Source2;                     // Тип и размер исходного операнда 2
   uint16 Source3;                     // Тип и размер исходного операнда 3
   uint16 Source4;                     // Тип и размер исходного операнда 4 (not used, for future use)
   uint16 TableLink;                   // эта запись является линком с другой картой
   uint16 Options;                     // различные опции
};

// Primary opcode map. This is the root of the opcode lookup tree
ДефОпКода[256] КартаОпКодов0 = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"add",       0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 00
   {"add",       0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 01
   {"add",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 02
   {"add",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 03
   {"add",       0x0   , 0x0    , 0x41  , 0xA1  , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 04
   {"add",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 05
   {"push es",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 06
   {"pop  es",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 07
   {"or",        0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 08
   {"or",        0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 09
   {"or",        0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0A
   {"or",        0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0B
   {"or",        0x0   , 0x0    , 0x41  , 0xA1  , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0C
   {"or",        0x0   , 0x1100 , 0x81  , 0xA9  , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 0D
   {"push cs",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0E
   {null,           0x1   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F link to КартаОпКодов1
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"adc",       0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 10
   {"adc",       0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 11
   {"adc",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 12
   {"adc",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 13
   {"adc",       0x0   , 0x0    , 0x41  , 0xA1  , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 14
   {"adc",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 15
   {"push ss",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 16
   {"pop  ss",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 17
   {"sbb",       0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 18
   {"sbb",       0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 19
   {"sbb",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 1A
   {"sbb",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 1B
   {"sbb",       0x0   , 0x0    , 0x41  , 0xA1  , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 1C
   {"sbb",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 1D
   {"push ds",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 1E
   {"pop  ds",   0x8000, 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 1F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"and",       0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 20
   {"and",       0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 21
   {"and",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 22
   {"and",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 23
   {"and",       0x0   , 0x0    , 0x41  , 0xA1  , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 24
   {"and",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 25
   {"es:",       0x0   , 0x0    , 0x8001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 26
   {"daa",       0x8000, 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 27
   {"sub",       0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 28
   {"sub",       0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 29
   {"sub",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 2A
   {"sub",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 2B
   {"sub",       0x0   , 0x0    , 0x41  , 0xA1  , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 2C
   {"sub",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 2D
   {"cs:",       0x0   , 0x0    , 0x8001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 2E
   {"das",       0x8000, 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 2F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"xor",       0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 30
   {"xor",       0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 31
   {"xor",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 32
   {"xor",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 33
   {"xor",       0x0   , 0x0    , 0x41  , 0xA1  , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 34
   {"xor",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 35
   {"ss:",       0x0   , 0x0    , 0x8001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 36
   {"aaa",       0x8000, 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 37
   {"cmp",       0x0   , 0x0    , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 38
   {"cmp",       0x0   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 39
   {"cmp",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 3A
   {"cmp",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 3B
   {"cmp",       0x0   , 0x0    , 0x41  , 0xA1  , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 3C
   {"cmp",       0x0   , 0x1100 , 0x81  , 0xA9  , 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x84  },    // 3D
   {"ds:",       0x0   , 0x0    , 0x8001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 3E
   {"aas",       0x8000, 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 3F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 40
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 41
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 42
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 43
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 44
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 45
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 46
   {"inc",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 47
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 48
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 49
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 4A
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 4B
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 4C
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 4D
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 4E
   {"dec",       0x8000, 0x100  , 0x3   , 0x1008, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 4F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 50
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 51
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 52
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 53
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 54
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 55
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 56
   {"push",      0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 57
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 58
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 59
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 5A
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 5B
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 5C
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 5D
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 5E
   {"pop",       0x0   , 0x2102 , 0x3   , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 5F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pusha",     0x8001, 0x102  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   },    // 60
   {"popa",      0x8001, 0x102  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   },    // 61
   {"bound",     0x8001, 0x106  , 0x12  , 0x1008, 0x2009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 62
   {null,           0x3B  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x7   , 0x0   },    // 63 Link to arpl/movsxd
   {"fs:",       0x0   , 0x0    , 0x8001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 64
   {"gs:",       0x0   , 0x0    , 0x8001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 65
   {"operand size:",0x0, 0x0    , 0x8000, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 66
   {"address size:",0x0, 0x0    , 0x8000, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 67
   {"push",      0x0   , 0x2102 , 0x82  , 0x0   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 68 push imm word
   {"imul",      0x1   , 0x1100 , 0x92  , 0x1009, 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x80  },    // 69 imul r,m,iv
   {"push",      0x0   , 0x2102 , 0x42  , 0x0   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 6A push imm byte
   {"imul",      0x1   , 0x1100 , 0x52  , 0x1009, 0x9   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // 6B imul r,m,ib
   {"insb",      0x0   , 0x21   , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 6C insb
   {"ins",       0x0   , 0x121  , 0x1   , 0x20C2, 0xB2  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 6D insw
   {"outsb",     0x0   , 0x21   , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 6E outsb
   {"outs",      0x0   , 0x121  , 0x1   , 0xB2  , 0x20C2, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 6F outs
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"jo",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 70 conditional short jumps
   {"jno",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 71
   {"jc",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 72
   {"jnc",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 73
   {"jz",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 74
   {"jnz",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 75
   {"jbe",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 76
   {"ja",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 77
   {"js",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 78
   {"jns",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 79
   {"jpe",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 7A
   {"jpo",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 7B
   {"jl",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 7C
   {"jge",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 7D
   {"jle",       0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 7E
   {"jg",        0x0   , 0x88   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 7F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"grp1",      0x1A  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 80 link to immediate grp 1
   {"grp1",      0x1B  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 81 link to immediate grp 1
   {"grp1",      0x1C  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 82 link to immediate grp 1
   {"grp1",      0x1D  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 83 link to immediate grp 1
   {"test",      0x0   , 0x0    , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 84
   {"test",      0x0   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 85
   {"xchg",      0x0   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x48  },    // 86
   {"xchg",      0x0   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x48  },    // 87
   {"mov",       0x0   , 0x0    , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 88
   {"mov",       0x0   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 89
   {"mov",       0x0   , 0x0    , 0x12  , 0x1001, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 8A
   {"mov",       0x0   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 8B
   {"mov",       0x0   , 0x1100 , 0x13  , 0x9   , 0x91  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 8C mov r16,segreg
   {"lea",       0x0   , 0x1101 , 0x12  , 0x1009, 0x2009, 0x0   , 0x0   , 0x0   , 0x0   , 0xC0  },    // 8D
   {"mov",       0x0   , 0x1100 , 0x12  , 0x91  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 8E mov segreg,r16
   {"pop",       0x28  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 8F Link to group 1A
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"nop",       0x3C  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 90 NOP/Pause. Link to map
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 91 xchg cx,ax
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 92 xchg dx,ax
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 93 xchg bx,ax
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 94 xchg sp,ax
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 95 xchg bp,ax
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 96 xchg si,ax
   {"xchg",      0x0   , 0x1100 , 0x3   , 0x1009, 0xA9  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 97 xchg di,ax
   {"cbw",       0x39  , 0x1100 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 98 Link to map
   {"cwd",       0x3A  , 0x1100 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 99 Link to map
   {"call",      0x8000, 0x182  , 0x200 , 0x85  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x28  },    // 9A call far
   {"fwait",     0x100 , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 9B
   {"pushf",     0x3E  , 0x2100 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 9C Link to map: pushf/d/q
   {"popf",      0x3F  , 0x2100 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 9D Link to map: popf/d/q
   {"sahf",      0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 9E
   {"lahf",      0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 9F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"mov",       0x0   , 0x5    , 0x401 , 0x10A1, 0x2001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // A0 mov al,mem
   {"mov",       0x0   , 0x1105 , 0x401 , 0x10A9, 0x2009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // A1 mov ax,mem
   {"mov",       0x0   , 0x5    , 0x401 , 0x2001, 0x10A1, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // A2 mov mem,al
   {"mov",       0x0   , 0x1105 , 0x401 , 0x2009, 0x10A9, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // A3 mov mem,ax
   {"movs",      0x0   , 0x25   , 0x1   , 0x20C2, 0x20C1, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // A4 movsb
   {"movs",      0x0   , 0x1125 , 0x1   , 0x20C2, 0x20C1, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // A5 movsw
   {"cmps",      0x0   , 0x45   , 0x1   , 0x20C2, 0x20C1, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // A6 cmpsb
   {"cmps",      0x0   , 0x1145 , 0x1   , 0x20C2, 0x20C1, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // A7 cmpsw
   {"test",      0x0   , 0x0    , 0x41  , 0x10A1, 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // A8 test al,ib
   {"test",      0x0   , 0x1100 , 0x81  , 0x10A9, 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // A9 test ax,iw
   {"stos",      0x0   , 0x21   , 0x1   , 0x20C2, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // AA stosb
   {"stos",      0x0   , 0x1121 , 0x1   , 0x20C2, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // AB stosw
   {"lods",      0x0   , 0x25   , 0x1   , 0x0   , 0x20C1, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // AC lodsb
   {"lods",      0x0   , 0x1125 , 0x1   , 0x0   , 0x20C1, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // AD lodsw
   {"scas",      0x0   , 0x41   , 0x1   , 0x20C2, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // AE scasb
   {"scas",      0x0   , 0x1141 , 0x1   , 0x20C2, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // AF scasw
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B0 mov al,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B1 mov cl,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B2 mov dl,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B3 mov bl,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B4 mov ah,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B5 mov ch,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B6 mov dh,ib
   {"mov",       0x0   , 0x0    , 0x43  , 0x1001, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // B7 mov bh,ib
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // B8 mov ax,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // B9 mov cx,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // BA mov dx,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // BB mov bx,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // BC mov sp,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // BD mov bp,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // BE mov si,iw
   {"mov",       0x0   , 0x1100 , 0x103 , 0x1009, 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x400 },    // BF mov di,iw
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"grp2",      0x1E  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // C0 link to grp 2
   {"grp2",      0x1F  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // C1 link to grp 2
   {"ret",       0x0   , 0x2182 , 0x22  , 0x0   , 0x12  , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // C2 retn iw
   {"ret",       0x0   , 0x2182 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // C3 retn
   {"les",       0x8000, 0x100  , 0x812 , 0x1009, 0x200C, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C4 les
   {"lds",       0x8000, 0x100  , 0x812 , 0x1009, 0x200C, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C5 lds
   {"mov",       0x2F  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // C6 link to grp 11
   {"mov",       0x30  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // C7 link to grp 11
   {"enter",     0x0   , 0x0    , 0x62  , 0x0   , 0x12  , 0x11  , 0x0   , 0x0   , 0x0   , 0x8   },    // C8
   {"leave",     0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // C9
   {"retf",      0x0   , 0x2182 , 0x22  , 0x0   , 0x12  , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // CA retf iw
   {"retf",      0x0   , 0x2182 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // CB retf
   {"int 3;breakpoint or filler",0,0,2  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x48  },    // CC
   {"int",       0x0   , 0x0    , 0x42  , 0x0   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // CD
   {"into",      0x8000, 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // CE
   {null,           0x19  , 0x1100 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // CF link to IRET
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"grp2",      0x20  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // D0 link to grp 2
   {"grp2",      0x21  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // D1 link to grp 2
   {"grp2",      0x22  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // D2 link to grp 2
   {"grp2",      0x23  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // D3 link to grp 2
   {"aam",       0x8000, 0x0    , 0x42  , 0x0   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // D4. Don't show immediate operand if = 10 !
   {"aad",       0x8000, 0x0    , 0x42  , 0x0   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // D5. Don't show immediate operand if = 10 !
   {"salc",      0x8000, 0x0    , 0x4002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // D6 salc (undocumented opcode)
   {"xlat",      0x86  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  , 0x0   },    // D7. Link to xlat
   {"x87 instr", 0x8   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // D8 link to FP grp
   {"x87 instr", 0x9   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // D9 link to FP grp
   {"x87 instr", 0xA   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // DA link to FP grp
   {"x87 instr", 0xB   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // DB link to FP grp
   {"x87 instr", 0xC   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // DC link to FP grp
   {"x87 instr", 0xD   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // DD link to FP grp
   {"x87 instr", 0xE   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // DE link to FP grp
   {"x87 instr", 0xF   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // DF link to FP grp
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"loopne",    0x0   , 0x80   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // E0
   {"loope",     0x0   , 0x80   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // E1
   {"loop",      0x0   , 0x80   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // E2
   {"j(e/r)cxz", 0x3D  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA   , 0x0   },    // E3 link to map
   {"in",        0x800 , 0x0    , 0x41  , 0xA1  , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // E4 in al,ib
   {"in",        0x800 , 0x100  , 0x41  , 0xA8  , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // E5 in ax,ib
   {"out",       0x800 , 0x0    , 0x41  , 0x32  , 0xA1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // E6 out ib,al
   {"out",       0x800 , 0x100  , 0x41  , 0x32  , 0xA8  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // E7 out ib,ax
   {"call",      0x0   , 0x82   , 0x82  , 0x83  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // E8 call near
   {"jmp",       0x0   , 0x80   , 0x82  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x90  },    // E9 jmp near
   {"jmp",       0x8000, 0x80   , 0x202 , 0x84  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x30  },    // EA jmp far
   {"jmp",       0x0   , 0x80   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // EB jmp short
   {"in",        0x800 , 0x0    , 0x1   , 0xA1  , 0xB2  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // EC in al,dx
   {"in",        0x800 , 0x100  , 0x1   , 0xA8  , 0xB2  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // ED in ax,dx
   {"out",       0x800 , 0x0    , 0x1   , 0xB2  , 0xA1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // EE out dx,al
   {"out",       0x800 , 0x100  , 0x1   , 0xB2  , 0xA8  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // EF out dx,ax
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"lock:",     0x0   , 0x0    , 0x8000, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F0 lock prefix
   {"icebp",     0x8000, 0x0    , 0x4002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F1 ICE breakpoint, undocumented opcode
   {"repne:",    0x0   , 0x0    , 0x8000, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 repne prefix
   {"repe:",     0x0   , 0x0    , 0x8000, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F3 repe  prefix
   {"hlt",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x48  },    // F4
   {"cmc",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F5
   {"grp3",      0x24  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // F6 link to grp 3
   {"grp3",      0x25  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // F7 link to grp 3
   {"clc",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F8
   {"stc",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F9
   {"cli",       0x800 , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // FA
   {"sti",       0x800 , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // FB
   {"cld",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // FC
   {"std",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // FD
   {"grp4",      0x26  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // FE link to grp 4
   {"grp5",      0x27  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   }     // FF link to grp 5
];

// Secondary opcode map for 2-byte opcode. First byte = 0F
// Indexed by second opcode byte
ДефОпКода КартаОпКодов1[256] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"grp6",      0x2A  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F 00 link to grp 6; sldt etc.
   {"grp7",      0x2B  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // 0F 01 link to grp 7; sgdt etc.
   {null,           0x5E  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // 0F 02 link to lar
   {null,           0x5F  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // 0F 03 link to lsl
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"syscall",   0x5   , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F 05
   {"clts",      0x805 , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 06
   {"sysret",    0x805 , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // 0F 07
   {"invd",      0x804 , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 08
   {"wbinvd",    0x804 , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 09
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"ud2",       0x3   , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // 0F 0B
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"PREFETCH;AMD only",0x1001,0, 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0D. AMD only. Works as NOP on Intel
   {"FEMS",      0x1001, 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F OE. AMD only
   {null,           0x6   , 0x0    , 0x52  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x6   , 0x0   },    // 0F 0F. Link to tertiary map for AMD 3DNow instructions
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x40  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // Link to tertiary map: movups, etc.
   {null,           0x41  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // Link to tertiary map: movups, etc.
   {null,           0x42  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // Link to tertiary map: movlps, etc.
   {"movl",      0x11  , 0x10200, 0x13  , 0x2351, 0x124F, 0x0   , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 13 movlps/pd
   {"unpckl",    0x11  , 0xD0200, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 14 unpcklps/pd
   {"unpckh",    0x11  , 0xD0200, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 15 unpckhps/pd
   {null,           0x44  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // Link to tertiary map: movhps, etc.
   {"movh",      0x11  , 0x10200, 0x13  , 0x2351, 0x124F, 0x0   , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 17 movhps/pd
   {null,           0x35  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // Link to tertiary map: group 16
   {"hint",      0x6   , 0x0    , 0x2012, 0x0   , 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 19. Hint instructions reserved for future use
   {"hint",      0x6   , 0x0    , 0x2012, 0x0   , 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 1A. Hint instructions reserved for future use
   {"hint",      0x6   , 0x0    , 0x2012, 0x0   , 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 1B. Hint instructions reserved for future use
   {"hint",      0x6   , 0x0    , 0x2012, 0x0   , 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 1C. Hint instructions reserved for future use
   {"hint",      0x6   , 0x0    , 0x2012, 0x0   , 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 1D. Hint instructions reserved for future use
   {"hint",      0x6   , 0x0    , 0x2012, 0x0   , 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 1E. Hint instructions reserved for future use
   {"nop",       0x6   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 0F 1F. Multi-byte nop
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"mov",       0x803 , 0x0    , 0x13  , 0x100A, 0x92  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 20. mov r32/64,cr
   {"mov",       0x803 , 0x1000 , 0x13  , 0x1009, 0x93  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 21. mov r32,dr
   {"mov",       0x803 , 0x0    , 0x12  , 0x92  , 0x100A, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 22. mov cr,r32/64
   {"mov",       0x803 , 0x1000 , 0x12  , 0x93  , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 23. mov dr,r32
/+version(0){
 // Opcode 0F 24 has two meanings:
      // 1: mov r32,tr (obsolete, 80386 only)
   {"mov;80386 only",0x803,0x0  , 0x4013, 0x1003, 0x94  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24. mov r32,tr (80386 only)
}else{
      // 2: start of 3-byte opcode for AMD SSE5 instructions with DREX byte
   {null,           0x66  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 24. Link to tertiary map for 3-byte opcodes AMD SSE5 with four operands
}+/
   {null,           0x67  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 25. Link to tertiary map for 3-byte opcodes AMD SSE5 with three operands + immediate byte
   {"mov;80386 only",0x803,0    , 0x4012, 0x94  , 0x1003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 26. mov tr,r32 (80386 only)
   {null,           0x803 , 0x0    , 0x4012, 0x1003, 0x1003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 27. illegal
   {"mova",      0x11  , 0x50200, 0x12  , 0x124F, 0x24F,  0x0   , 0x0   , 0x0   , 0x0   , 0x103 },    // 0F 28. movaps/pd
   {"mova",      0x11  , 0x50200, 0x13  , 0x24F , 0x124F, 0x0   , 0x0   , 0x0   , 0x0   , 0x103 },    // 0F 29. movaps/pd
   {null,           0x46  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 2A. Link to tertiary map: cvtpi2ps, etc.
   {null,           0x6A  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 2B. Link to tertiary map: movntps/pd,AMD: also ss/sd
   {null,           0x47  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 2C. Link to tertiary map: cvttps2pi, etc.
   {null,           0x48  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 2D. Link to tertiary map: cvtps2pi, etc.
   {null,           0x4B  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 2E. Link to tertiary map: ucomiss/sd
   {null,           0x4C  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 2F. Link to tertiary map: comiss/sd
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"wrmsr",     0x805 , 0x1000 , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 30
   {"rdtsc",     0x5   , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F 31
   {"rdmsr",     0x805 , 0x1000 , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F 32
   {"rdpmc",     0x5   , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F 33
   {"sysenter",  0x8   , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F 34
   {"sysexit;Same name with or without 48h prefix",0x808,0x1000,1,0,0,0,0,0x0   , 0x0   , 0x0   },    // 0F 35
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 36 Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 37 Illegal
   {null,           0x2   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 38. Link to tertiary map for 3-byte opcodes
   {null,           0x3   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 39. Link to tertiary map for 3-byte opcodes
   {null,           0x4   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 3A. Link to tertiary map for 3-byte opcodes
   {null,           0x5   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 3B. Link to tertiary map for 3-byte opcodes
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3C Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3D Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3E Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3F Illegal
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cmovo",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 40. cmov
   {"cmovno",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 41. cmov
   {"cmovc",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 42. cmov
   {"cmovnc",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 43. cmov
   {"cmove",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 44. cmov
   {"cmovne",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 45. cmov
   {"cmovbe",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 46. cmov
   {"cmova",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 47. cmov
   {"cmovs",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 48. cmov
   {"cmovns",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 49. cmov
   {"cmovpe",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 4A. cmov
   {"cmovpo",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 4B. cmov
   {"cmovl",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 4C. cmov
   {"cmovge",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 4D. cmov
   {"cmovle",    0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 4E  cmov
   {"cmovg",     0x6   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 4F. cmov
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movmsk",    0x11  , 0x51200, 0x12  , 0x1009, 0x124F, 0x0   , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 50. movmskps/pd
   {"sqrt",      0x76  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x9   , 0     },    // 0F 51. Link to sqrtps/pd/ss/sd
   {"rsqrt",     0x77  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x9   , 0     },    // 0F 52. Link to rsqrtps/ss
   {"rcp",       0x78  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x9   , 0     },    // 0F 53. Link to rcpps/ss
   {"and",       0x11  , 0xD0200, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 54. andps/pd
   {"andn",      0x11  , 0xD0200, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 55. andnps/pd
   {"or",        0x11  , 0xD0200, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 56. orps/pd
   {"xor",       0x11  , 0xD0200, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 57. xorps/pd
   {"add",       0x11  ,0x290E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 58. addps/pd/ss/sd
   {"mul",       0x11  ,0x290E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 59. mulps/pd/ss/sd
   {null,           0x49  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 5A. Link to cvtps2pd, etc.
   {null,           0x4A  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 5B. Link to cvtdq2ps, etc.
   {"sub",       0x11  ,0x290E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 5C. subps/pd/ss/sd
   {"min",       0x11  ,0x290E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 5D. minps/pd/ss/sd
   {"div",       0x11  ,0x290E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 5E. divps/pd/ss/sd
   {"max",       0x11  ,0x290E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F 5F. maxps/pd/ss/sd
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"punpcklbw", 0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 60
   {"punpcklwd", 0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 61
   {"punpckldq", 0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 62
   {"packsswb",  0x7   , 0x90200, 0x19  , 0x1101, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 63
   {"pcmpgtb",   0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 64
   {"pcmpgtw",   0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 65
   {"pcmpgtd",   0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 66
   {"packuswb",  0x7   , 0x90200, 0x19  , 0x1101, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 67
   {"punpckhbw", 0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 68
   {"punpckhwd", 0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 69
   {"punpckhdq", 0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 6A
   {"packssdw",  0x7   , 0x90200, 0x19  , 0x1102, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 6B
   {"punpcklqdq",0x12  , 0x98200, 0x19  , 0x1404, 0x1404, 0x404 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 6C. Not valid without 66 prefix
   {"punpckhqdq",0x12  , 0x98200, 0x19  , 0x1404, 0x1404, 0x404 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 6D. Not valid without 66 prefix
   {null,           0x58  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 0F 6E. Link to tertiary map: movd/movq
   {null,           0x4D  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 6F. Link to tertiary map: movq/movdqa/movdqu
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x4F  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 70. Link to tertiary map: pshufw, etc.
   {null,           0x31  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F 71. Link to tertiary map for group 12
   {null,           0x32  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F 72. Link to tertiary map for group 13
   {null,           0x33  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F 73. Link to tertiary map for group 14
   {"pcmpeqb",   0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 74
   {"pcmpeqw",   0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 75
   {"pcmpeqd",   0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 76
   {"emms",      0x79  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0xB   , 0     },    // 0F 77. Link to emms, vzeroupper, vzeroall
   {null,           0x6C  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 78. Link to tertiary map for wmread, insrtq, extrq
   {null,           0x6D  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 79. Link to tertiary map for wmread, insrtq, extrq
   {null,           0x68  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 7A. Link to tertiary map for 3-byte opcodes AMD SSE5: FRCZPS, etc.
   {null,           0x69  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   , 0x0   },    // 0F 7B. Link to tertiary map for 3-byte opcodes AMD SSE5: PROTB, etc.
   {null,           0x5C  , 0xA00  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 7C. Link to tertiary map: hadd
   {null,           0x5D  , 0xA00  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 7D. Link to tertiary map: hsub
   {null,           0x59  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 7E. Link to tertiary map: movd/movq
   {null,           0x4E  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F 7F. Link to tertiary map: movq/movdqa/movdqu
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"jo",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 80
   {"jno",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 81
   {"jc",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 82
   {"jnc",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 83
   {"je",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 84
   {"jne",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 85
   {"jbe",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 86
   {"ja",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 87
   {"js",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 88
   {"jns",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 89
   {"jpe",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 8A
   {"jpo",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 8B
   {"jl",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 8C
   {"jge",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 8D
   {"jle",       0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 8E
   {"jg",        0x3   , 0x8    , 0x80  , 0x82  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0xA0  },    // 0F 8F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"seto",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 90
   {"setno",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 91
   {"setb",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 92
   {"setae",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 93
   {"sete",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 94
   {"setne",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 95
   {"setbe",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 96
   {"seta",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 97
   {"sets",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 98
   {"setns",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 99 
   {"setpe",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 9A
   {"setpo",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 9B
   {"setl",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 9C
   {"setge",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 9D
   {"setle",     0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 9E
   {"setg",      0x3   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 9F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"push fs",   0x3   , 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A0
   {"pop  fs",   0x3   , 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A1
   {"cpuid",     0x4   , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F A2
   {"bt",        0x3   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A3
   {"shld",      0x3   , 0x1100 , 0x53  , 0x9   , 0x1009, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A4
   {"shld",      0x3   , 0x1100 , 0x13  , 0x9   , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A5
   {null,           0xA6  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // 0F A6. Link to VIA instructions
   {null,           0xA7  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // 0F A7. Link to VIA instructions
   {"push gs",   0x3   , 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A8
   {"pop  gs",   0x3   , 0x2    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F A9
   {"rsm",       0x803 , 0x0    , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F AA
   {"bts",       0x3   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F AB
   {"shrd",      0x3   , 0x1100 , 0x53  , 0x9   , 0x1009, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F AC
   {"shrd",      0x3   , 0x1100 , 0x13  , 0x9   , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F AD
   {null,           0x34  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   , 0x0   },    // 0F AE. Link to tertiary map for group 15
   {"imul",      0x1   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F AF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cmpxchg",   0x3   , 0x10   , 0x13  , 0x2001, 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B0
   {"cmpxchg",   0x3   , 0x1110 , 0x13  , 0x2009, 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B1
   {"lss",       0x0   , 0x1100 , 0x812 , 0x1009, 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B2 (valid in 64-bit mode)
   {"btr",       0x3   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B3
   {"lfs",       0x0   , 0x1100 , 0x812 , 0x1009, 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B4
   {"lgs",       0x0   , 0x1100 , 0x812 , 0x1009, 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B5
   {"movzx",     0x3   , 0x1100 , 0x12  , 0x1009, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B6
   {"movzx",     0x3   , 0x1100 , 0x12  , 0x1009, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F B7   
   {null,           0x60  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F B8. Link to tertiary map for popcnt, jmpe
   {null,           0x2E  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F B9. Link to tertiary map for group 10: ud1
   {null,           0x2C  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F BA. Link to tertiary map for group 8: bt
   {"btc",       0x3   , 0x1100 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BB
   {"bsf",       0x3   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BC
   {null,           0x6B  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F BD. Link to tertiary map for BSR and LZCNT
   {"movsx",     0x3   , 0x1100 , 0x12  , 0x1009, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BE
   {"movsx",     0x3   , 0x1100 , 0x12  , 0x1009, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"xadd",      0x4   , 0x10   , 0x13  , 0x1   , 0x1001, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F C0
   {"xadd",      0x4   , 0x1110 , 0x13  , 0x9   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F C1
   {null,           0x38  , 0x0    , 0x52  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x6   , 0x0   },    // 0F C2. Link to tertiary map for cmpps etc.
   {"movnti",    0x11  , 0x1000 , 0x13  , 0x2009, 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F C3
   {null,           0x29  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // 0F C4. Link to pinsrw
   {"pextrw",    0x7   , 0x11200, 0x52  , 0x1009, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F C5
   {"shuf",      0x11  , 0xD0200, 0x59  , 0x124F, 0x124F, 0x24F , 0x11  , 0x0   , 0x0   , 0x3   },    // 0F C6
   {null,           0x50  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 0F C7. Link to tertiary map for group 9
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F C8. bswap eax
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F C9. bswap ecx
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F CA. bswap edx
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F CB. bswap ebx
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F CC. bswap esp
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F CD. bswap ebp
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F CE. bswap esi
   {"bswap",     0x3   , 0x1000 , 0x3   , 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F CF. bswap edi
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x2D  , 0xA00  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F D0. Link to addsubps/pd
   {"psrlw",     0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D1
   {"psrld",     0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D2
   {"psrlq",     0x7   , 0x90200, 0x19  , 0x1104, 0x1104, 0x104 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D3
   {"paddq",     0x12  , 0x90200, 0x19  , 0x1104, 0x1104, 0x104 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D4
   {"pmullw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D5
   {null,           0x53  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F D6. Link to tertiary map for movq2dq etc.
   {"pmovmskb",  0x7   , 0x11200, 0x12  , 0x1009, 0x1150, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D7
   {"psubusb",   0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D8
   {"psubusw",   0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D9
   {"pminub",    0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F DA
   {"pand",      0x7   , 0x90200, 0x19  , 0x1150, 0x1150, 0x150 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F DB
   {"paddusb",   0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F DC
   {"paddusw",   0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F DD
   {"pmaxub",    0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F DE
   {"pandn",     0x7   , 0x90200, 0x19  , 0x1150, 0x1150, 0x150 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F DF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pavgb",     0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E0
   {"psraw",     0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E1
   {"psrad",     0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E2
   {"pavgw",     0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E3
   {"pmulhuw",   0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E4
   {"pmulhw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E5
   {null,           0x54  , 0xE00  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F E6. Link to tertiary map for cvtpd2dq etc.
   {null,           0x55  , 0x200  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F E7. Link to tertiary map for movntq
   {"psubsb",    0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E8
   {"psubsw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F E9
   {"pminsw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F EA
   {"por",       0x7   , 0x90200, 0x19  , 0x1150, 0x1150, 0x150 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F EB
   {"paddsb",    0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F EC
   {"paddsw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F ED
   {"pmaxsw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F EE
   {"pxor",      0x7   , 0x90200, 0x19  , 0x1150, 0x1150, 0x150 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F EF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x56  , 0x800  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F F0. Link to tertiary map for lddqu
   {"psllw",     0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F1
   {"pslld",     0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F2
   {"psllq",     0x7   , 0x90200, 0x19  , 0x1104, 0x1104, 0x104 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F3
   {"pmuludq",   0x7   , 0x90200, 0x19  , 0x1104, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F4
   {"pmaddwd",   0x7   , 0x90200, 0x19  , 0x1103, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F5
   {"psadbw",    0x7   , 0x90200, 0x19  , 0x1102, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F6
   {null,           0x57  , 0x200  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 0F F7. Link to tertiary map for maskmovq
   {"psubb",     0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F8
   {"psubw",     0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F F9
   {"psubd",     0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F FA
   {"psubq",     0x7   , 0x90200, 0x19  , 0x1104, 0x1104, 0x104 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F FB
   {"paddb",     0x7   , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F FC
   {"paddw",     0x7   , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F FD
   {"paddd",     0x7   , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F FE
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F EF


// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 38
// or VEX encoded with mmmm = 2
// Indexed by third opcode byte
ДефОпКода КартаОпКодов2[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pshufb",    0x14  , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 00
   {"phaddw",    0x14  , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 01
   {"phaddd",    0x14  , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 02
   {"phaddsw",   0x14  , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 03
   {"pmaddubsw", 0x14  , 0x90200, 0x19  , 0x1102, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 04
   {"phsubw",    0x14  , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 05
   {"phsubd",    0x14  , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 06
   {"phsubsw",   0x14  , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 07
   {"psignb",    0x14  , 0x90200, 0x19  , 0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 08
   {"psignw",    0x14  , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 09
   {"psignd",    0x14  , 0x90200, 0x19  , 0x1103, 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 0A
   {"pmulhrsw",  0x14  , 0x90200, 0x19  , 0x1102, 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 0B
   {"vpermilps", 0x19  , 0xF8200, 0x19  , 0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 0C
   {"vpermilpd", 0x19  , 0xF8200, 0x19  , 0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 0D
   {"vtestps",   0x19  , 0x78200, 0x12  , 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 0E
   {"vtestpd",   0x19  , 0x78200, 0x12  , 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 0F
   {"pblendvb",  0x15  , 0x8200 , 0x12  , 0x1401, 0x401 , 0xAE  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 10
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 11
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 12
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 13
   {"blendvps",  0x15  , 0x8200 , 0x12  , 0x124B, 0x24B , 0xAE  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 14
   {"blendvpd",  0x15  , 0x8200 , 0x12  , 0x124C, 0x24C , 0xAE  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 15
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 16
   {"ptest",     0x15  , 0x58200, 0x12  , 0x1250, 0x250 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 17. Also in AMD SSE5 instruction set
   {"vbroadcastss",0x19, 0x78200, 0x12  , 0x124B, 0x204B, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 18
   {"vbroadcastsd",0x19,0x178200, 0x12  , 0x154C, 0x204C, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 19
   {"vbroadcastf128",0x19,0x178200,0x12 , 0x154B, 0x244B, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 1A
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 1B
   {"pabsb",     0x14  , 0x10200, 0x12  , 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 1C
   {"pabsw",     0x14  , 0x10200, 0x12  , 0x1102, 0x102 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 1D
   {"pabsd",     0x14  , 0x10200, 0x12  , 0x1103, 0x103 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 1E
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 1F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x7A  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 20. Link pmovsxbw
   {null,           0x7B  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 21. Link pmovsxbd
   {null,           0x7C  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 22. Link pmovsxbq
   {null,           0x7D  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 23. Link pmovsxwd
   {null,           0x7E  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 24. Link pmovsxwq
   {null,           0x7F  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 25. Link pmovsxdq
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 26
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 27
   {"pmuldq",    0x15  , 0x98200, 0x19  , 0x1404, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 28
   {"pcmpeqq",   0x16  , 0x98200, 0x19  , 0x1404, 0x1404, 0x404 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 29
   {"movntdqa",  0x15  , 0x18200, 0x12  , 0x1450, 0x2450, 0x0   , 0x0   , 0x0   , 0x0   , 0x102 },    // 0F 38 2A
   {"packusdw",  0x15  , 0x98200, 0x19  , 0x1402, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 2B
   {"vmaskmovps",0x19  , 0xF8200, 0x19,   0x124B, 0x124B, 0x224B, 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 2C
   {"vmaskmovpd",0x19  , 0xF8200, 0x19,   0x124C, 0x124C, 0x224C, 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 2D
   {"vmaskmovps",0x19  , 0xF8200, 0x1A,   0x224B, 0x124B, 0x124B, 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 2E
   {"vmaskmovpd",0x19  , 0xF8200, 0x1A,   0x224C, 0x124C, 0x124C, 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 2F

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x80  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 30. Link pmovzxbv
   {null,           0x81  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 31. Link pmovzxbd
   {null,           0x82  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 32. Link pmovzxbq
   {null,           0x83  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 33. Link pmovzxwd
   {null,           0x84  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 34. Link pmovzxwq
   {null,           0x85  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 0F 38 35. Link pmovzxdq
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 36
   {"pcmpgtq",   0x16  , 0x98200, 0x19  , 0x1404, 0x1404, 0x404 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 37
   {"pminsb",    0x15  , 0x98200, 0x19  , 0x1401, 0x1401, 0x401 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 38
   {"pminsd",    0x15  , 0x98200, 0x19  , 0x1403, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 39
   {"pminuw",    0x15  , 0x98200, 0x19  , 0x1402, 0x1402, 0x402 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 3A
   {"pminud",    0x15  , 0x98200, 0x19  , 0x1403, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 3B
   {"pmaxsb",    0x15  , 0x98200, 0x19  , 0x1401, 0x1401, 0x401 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 3C
   {"pmaxsd",    0x15  , 0x98200, 0x19  , 0x1403, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 3D
   {"pmaxuw",    0x15  , 0x98200, 0x19  , 0x1402, 0x1402, 0x402 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 3E
   {"pmaxud",    0x15  , 0x98200, 0x19  , 0x1403, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 3F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pmulld",    0x15  , 0x98200, 0x19  , 0x1403, 0x1403, 0x403 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 40
   {"phminposuw",0x15  , 0x18200, 0x12  , 0x1402, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 41
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 42
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 43
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 44
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 45
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 46
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 47
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 48
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 49
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 4A
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 4B
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 4C
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 4D
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 4E
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 4F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 50
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 51
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 52
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 53
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 54
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 55
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 56
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 57
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 58
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 59
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 5A
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 5B
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 5C
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 5D
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 5E
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 5F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 60
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 61
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 62
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 63
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 64
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 65
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 66
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 67
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 68
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 69
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 6A
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 6B
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 6C
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 6D
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 6E
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 6F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 70
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 71
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 72
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 73
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 74
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 75
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 76
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 77
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 78
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 79
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 7A
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 7B
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 7C
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 7D
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 7E
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 7F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 80
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 81
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 82
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 83
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 84
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 85
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 86
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 87
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 88
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 89
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 8A
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 8B
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 8C
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 8D
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 8E
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 8F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 90
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 91
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 92
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 93
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 94
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 95
   {null,           0x8D  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 96. Link to vfmaddsub132pd
   {null,           0x90  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 97. Link to vfmsubadd132pd
   {null,           0x87  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 98. Link to vfmadd132pd
   {null,           0x8A  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 99. Link to vfmadd132sd
   {null,           0x93  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 9A. Link to vfmsub132pd
   {null,           0x96  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 9B. Link to vfmsub132sd
   {null,           0x99  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 9C. Link to vfnmadd132pd
   {null,           0x9C  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 9D. Link to vfnmadd132sd
   {null,           0x9F  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 9E. Link to vfnmsub132pd
   {null,           0xA2  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 9F. Link to vfnmsub132sd
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 A0
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 A1
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 A2
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 A3
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 A4
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 A5
   {null,           0x8E  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 A6. Link to vfmaddsub213pd
   {null,           0x91  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 A7. Link to vfmsubadd213pd
   {null,           0x88  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 A8. Link to vfmadd213pd
   {null,           0x8B  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 A9. Link to vfmadd213sd
   {null,           0x94  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 AA. Link to vfmsub213pd
   {null,           0x97  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 AB. Link to vfmsub213sd
   {null,           0x9A  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 AC. Link to vfnmadd213pd
   {null,           0x9D  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 AD. Link to vfnmadd213sd
   {null,           0xA0  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 AE. Link to vfnmsub213pd
   {null,           0xA3  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 AF. Link to vfnmsub213sd

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 B0
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 B1
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 B2
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 B3
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 B4
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 B5
   {null,           0x8F  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 B6. Link to vfmaddsub231pd
   {null,           0x92  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 B7. Link to vfmsubadd231pd
   {null,           0x89  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 B8. Link to vfmadd231pd
   {null,           0x8C  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 B9. Link to vfmadd231sd
   {null,           0x95  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 BA. Link to vfmsub231pd
   {null,           0x98  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 BB. Link to vfmsub231sd
   {null,           0x9B  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 BC. Link to vfnmadd231pd
   {null,           0x9E  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 BD. Link to vfnmadd231sd
   {null,           0xA1  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 BE. Link to vfnmsub231pd
   {null,           0xA4  , 0x0    , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0C  , 0x0   },    // 0F 38 BF. Link to vfnmsub231sd
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C0
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C1
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C2
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C3
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C4
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C5
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C6
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C7
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C8
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 C9
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 CA
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 CB
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 CC
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 CD
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 CE
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 CF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D0
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D1
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D2
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D3
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D4
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D5
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D6
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D7
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D8
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 D9
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 DA
   {"aesimc",    0x17  ,0x98200 , 0x19,   0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 DB
   {"aesenc",    0x17  ,0x98200 , 0x19,   0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 DC
   {"aesenclast",0x17  ,0x98200 , 0x19,   0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 DD
   {"aesdec",    0x17  ,0x98200 , 0x19,   0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 DE
   {"aesdeclast",0x17  ,0x98200 , 0x19,   0x1101, 0x1101, 0x101 , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 DF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E0
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E1
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E2
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E3
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E4
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E5
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E6
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E7
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E8
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 E9
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 EA
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 EB
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 EC
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 ED
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 EE
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 EF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"crc32",     0x16  , 0x9900 , 0x12  , 0x1009, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F0
   {"crc32",     0x07  , 0x9900 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 0F 38 F1. Link to crc32 16/32/64 bit
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F2
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F3
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F4
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F5
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F6
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F7
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F8
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F9
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 FA
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 FB
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 FC
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 FD
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 FE
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 38 FF

// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 39
// Not used but reserved by Intel for future extensions
ДефОпКода КартаОпКодов3[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2012, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 39 00

// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 3A
// or VEX encoded with mmmm = 3
// Indexed by third opcode byte
ДефОпКода КартаОпКодов4[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 00
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 01
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 02
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 03
   {"vpermilps", 0x19  , 0x78200, 0x52,   0x124B, 0x24B , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 04
   {"vpermilpd", 0x19  , 0x78200, 0x52,   0x124C, 0x24C , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 05
   {"vperm2f128",0x19  ,0x1F8200, 0x59,   0x1550 ,0x1550, 0x550 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 06
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 07
   {"roundps",   0x15  , 0x58200, 0x52  , 0x124B, 0x24B , 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 08. Also in AMD instruction set
   {"roundpd",   0x15  , 0x58200, 0x52  , 0x124C, 0x24C , 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 09. Also in AMD instruction set
   {"roundss",   0x15  , 0x98200, 0x59  , 0x104B, 0x104B, 0x4B  , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 0A. Also in AMD instruction set
   {"roundsd",   0x15  , 0x98200, 0x59  , 0x104C, 0x104C, 0x4C  , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 0B. Also in AMD instruction set
   {"blendps",   0x15  , 0xD8200, 0x59  , 0x124B, 0x124B, 0x24B , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 0C
   {"blendpd",   0x15  , 0xD8200, 0x59  , 0x124C, 0x124C, 0x24C , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 0D
   {"pblendw",   0x15  , 0x98200, 0x59  , 0x1402, 0x1402, 0x402 , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 0E
   {"palignr",   0x14  , 0x90200, 0x59  , 0x1150, 0x1150, 0x150 , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 0F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 10
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 11
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 12
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 13   
   {null,           0x61  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // 0F 3A 14. Link to pextrb
   {null,           0x62  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // 0F 3A 15. Link to pextrw
   {null,           0x63  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 0F 3A 16. Link to pextrd, pextrq
   {"extractps", 0x15  , 0x19200, 0x53  , 0x9   , 0x124B, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 17
   {"vinsertf128",0x19, 0x1F8200, 0x59  , 0x1550, 0x1550, 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 3A 18
   {"vextractf128",0x19,0x178200, 0x53,   0x450 , 0x1550, 0x31  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 19
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 1A
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 1B
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 1C
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 1D
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 1E
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 1F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0xA5  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // 0F 3A 20. Link to pinsrb
   {"insertps",  0x15  , 0x98200, 0x59  , 0x144B, 0x144B, 0x4B  , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 21
   {"pinsrd/q",  0x75  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x8   , 0     },    // 0F 3A 22. Link to pinsrd/q
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 23
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 24
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 25
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 26
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 27
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 28
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 29
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 2A
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 2B
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 2C
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 2D
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 2E
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 2F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 30
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 31
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 32
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 33
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 34
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 35
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 36
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 37
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 38
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 39
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 3A
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 3B
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 3C
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 3D
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 3E
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 3F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"dpps",      0x15  , 0xD8200, 0x59  , 0x124B, 0x124B, 0x24B , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 40
   {"dppd",      0x15  , 0x98200, 0x59  , 0x144C, 0x144C, 0x44C , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 41
   {"mpsadbw",   0x15  , 0x98200, 0x59  , 0x1402, 0x1402, 0x401 , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 42
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 43
   {"pclmulqdq", 0x18  , 0x98200, 0x59,   0x1404, 0x1404, 0x404 , 0x31  , 0x0   , 0x0   , 0x2   },    // 0F 3A 44
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 45
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 46
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 47
   {"vpermil2ps",0x19  , 0xFD200, 0x5C,   0x124B, 0x124B, 0x24B , 0x24B , 0x31  , 0x0   , 0x0   },    // 0F 3A 48
   {"vpermil2pd",0x19  , 0xFD200, 0x5C,   0x124C, 0x124C, 0x24C , 0x24C , 0x31  , 0x0   , 0x0   },    // 0F 3A 49
   {"vblendvps", 0x19  , 0xFD200, 0x5C  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 4A
   {"vblendvpd", 0x19  , 0xFD200, 0x5C  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 4B
   {"vpblendvb", 0x19  , 0xBD200, 0x5C  , 0x1401, 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   },    // 0F 3A 4C
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 4D
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 4E
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 4F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 50
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 51
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 52
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 53
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 54
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 55
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 56
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 57
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 58
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 59
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 5A
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 5B
   {"vfmaddsubps",0x11006,0xFD200,0x5D  , 0x24B , 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 5C
   {"vfmaddsubpd",0x11006,0xFD200,0x5D  , 0x24C , 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 5D
   {"vfmsubaddps",0x11006,0xFD200,0x5D  , 0x24B , 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 5E
   {"vfmsubaddpd",0x11006,0xFD200,0x5D  , 0x24C , 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 5F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pcmpestrm", 0x16  , 0x18200, 0x52  , 0x1401, 0x451 , 0x31  , 0x0   , 0x0   , 0x0   , 0x202 },    // 0F 3A 60
   {"pcmpestri", 0x16  , 0x18200, 0x52  , 0x1401, 0x451 , 0x31  , 0x0   , 0x0   , 0x0   , 0x202 },    // 0F 3A 61
   {"pcmpistrm", 0x16  , 0x18200, 0x52  , 0x1401, 0x451 , 0x31  , 0x0   , 0x0   , 0x0   , 0x202 },    // 0F 3A 62
   {"pcmpistri", 0x16  , 0x18200, 0x52  , 0x1401, 0x451 , 0x31  , 0x0   , 0x0   , 0x0   , 0x202 },    // 0F 3A 63
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 64
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 65
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 66
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 67
// 4-operand FMA instructions. First specified by Intel, then Intel changed their plans, now supported by AMD ?
   {"vfmaddps",  0x11006,0xFD200, 0x5D  , 0x24B , 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 68
   {"vfmaddpd",  0x11006,0xFD200, 0x5D  , 0x24C , 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 69
   {"vfmaddss",  0x11006,0xBD200, 0x5D  , 0x44B , 0x44B , 0x44B , 0x44B , 0x0   , 0x0   , 0x0   },    // 0F 3A 6A
   {"vfmaddsd",  0x11006,0xBD200, 0x5D  , 0x44C , 0x44C , 0x44C , 0x44C , 0x0   , 0x0   , 0x0   },    // 0F 3A 6B
   {"vfmsubps",  0x11006,0xFD200, 0x5D  , 0x24B , 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 6C
   {"vfmsubpd",  0x11006,0xFD200, 0x5D  , 0x24C , 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 6D
   {"vfmsubss",  0x11006,0xBD200, 0x5D  , 0x44B , 0x44B , 0x44B , 0x44B , 0x0   , 0x0   , 0x0   },    // 0F 3A 6E
   {"vfmsubsd",  0x11006,0xBD200, 0x5D  , 0x44C , 0x44C , 0x44C , 0x44C , 0x0   , 0x0   , 0x0   },    // 0F 3A 6F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 70
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 71
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 72
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 73
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 74
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 75
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 76
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 77
   {"vfnmaddps", 0x11006,0xFD200, 0x5D  , 0x24B , 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 78
   {"vfnmaddpd", 0x11006,0xFD200, 0x5D  , 0x24C , 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 79
   {"vfnmaddss", 0x11006,0xBD200, 0x5D  , 0x44B , 0x44B , 0x44B , 0x44B , 0x0   , 0x0   , 0x0   },    // 0F 3A 7A
   {"vfnmaddsd", 0x11006,0xBD200, 0x5D  , 0x44C , 0x44C , 0x44C , 0x44C , 0x0   , 0x0   , 0x0   },    // 0F 3A 7B
   {"vfnmsubps", 0x11006,0xFD200, 0x5D  , 0x24B , 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 3A 7C
   {"vfnmsubpd", 0x11006,0xFD200, 0x5D  , 0x24C , 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 3A 7D
   {"vfnmsubss", 0x11006,0xBD200, 0x5D  , 0x44B , 0x44B , 0x44B , 0x44B , 0x0   , 0x0   , 0x0   },    // 0F 3A 7E
   {"vfnmsubsd", 0x11006,0xBD200, 0x5D  , 0x44C , 0x44C , 0x44C , 0x44C , 0x0   , 0x0   , 0x0   },    // 0F 3A 7F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 80
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 81
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 82
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 83
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 84
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 85
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 86
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 87
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 88
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 89
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 8A
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 8B
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 8C
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 8D
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 8E
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 8F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 90
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 91
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 92
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 93
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 94
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 95
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 96
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 97
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 98
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 99
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 9A
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 9B
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 9C
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 9D
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 9E
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A 9F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A0
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A1
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A2
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A3
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A4
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A5
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A6
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A7
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A8
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A A9
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A AA
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A AB
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A AC
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A AD
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A AE
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A AF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B0
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B1
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B2
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B3
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B4
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B5
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B6
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B7
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B8
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A B9
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A BA
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A BB
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A BC
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A BD
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A BE
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A BF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C0
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C1
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C2
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C3
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C4
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C5
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C6
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C7
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C8
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A C9
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A CA
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A CB
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A CC
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A CD
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A CE
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A CF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D0
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D1
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D2
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D3
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D4
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D5
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D6
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D7
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D8
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A D9
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A DA
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A DB
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A DC
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A DD
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A DE
   {"aeskeygenassist",0x17,0x18200,0x52,  0x1101, 0x101 , 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A DF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E0
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E1
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E2
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E3
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E4
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E5
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E6
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E7
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E8
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A E9
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A EA
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A EB
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A EC
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A ED
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A EE
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A EF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F0
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F1
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F2
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F3
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F4
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F5
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F6
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F7
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F8
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A F9
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A FA
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A FB
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A FC
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A FD
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 3A FE
   {null,           0x0   , 0x0    , 0x2052, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 3A FF


// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 3B
// Not used but reserved by Intel for future extensions
ДефОпКода КартаОпКодов5[1] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2000, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 3B 00


// Tertiary opcode map for AMD 3DNow instructions. First two bytes = 0F 0F
// Indexed by immediate byte following operands
ДефОпКода КартаОпКодов6[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 00
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 01
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 02
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 03
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 04
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 05
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 06
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 07
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 08
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 09
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 0A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 0B
   {"PFI2FW",    0x1001, 0x0    , 0x52  , 0x134B, 0x302 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 0C
   {"PI2FD",     0x1001, 0x0    , 0x52  , 0x134B, 0x303 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 0D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 0E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 0F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 10
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 11
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 12
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 13
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 14
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 15
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 16
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 17
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 18
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 19
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 1A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 1B
   {"PF2IW",     0x1002, 0x0    , 0x52  , 0x1302, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 1C
   {"PF2ID",     0x1001, 0x0    , 0x52  , 0x1303, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 1D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 1E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 1F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 20
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 21
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 22
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 23
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 24
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 25
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 26
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 27
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 28
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 29
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 2A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 2B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 2C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 2D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 2E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 2F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 30
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 31
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 32
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 33
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 34
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 35
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 36
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 37
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 38
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 39
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 3A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 3B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 3C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 3D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 3E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 3F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 40
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 41
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 42
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 43
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 44
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 45
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 46
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 47
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 48
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 49
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 4A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 4B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 4C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 4D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 4E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 4F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 50
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 51
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 52
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 53
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 54
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 55
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 56
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 57
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 58
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 59
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 5A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 5B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 5C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 5D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 5E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 5F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 60
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 61
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 62
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 63
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 64
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 65
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 66
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 67
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 68
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 69
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 6A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 6B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 6C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 6D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 6E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 6F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 70
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 71
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 72
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 73
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 74
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 75
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 76
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 77
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 78
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 79
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 7A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 7B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 7C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 7D
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 7E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 7F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 80
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 81
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 82
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 83
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 84
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 85
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 86
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 87
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 88
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 89
   {"PFNACC",    0x1002, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 8A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 8B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 8C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 8D
   {"PFPNACC",   0x1002, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 8E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 8F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"PFCMPGE",   0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 90
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 91
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 92
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 93
   {"PFMIN",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 94
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 95
   {"PFRCP",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 96
   {"PFRSQRT",   0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 97
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 98
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 99
   {"PFSUB",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 9A
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 9B
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 9C
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 9D
   {"PFADD",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 9E
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op 9F
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"PFCMPGT",   0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A0
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A1
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A2
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A3
   {"PFMAX",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A4
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A5
   {"PFRCPIT1",  0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A6
   {"PFRSQIT1",  0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A7
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A8
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op A9
   {"PFSUBR",    0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op AA
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op AB
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op AC
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op AD
   {"PFACC",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op AE
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op AF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"PFCMPEQ",   0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B0
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B1
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B2
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B3
   {"PFMUL",     0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B4
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B5
   {"PFRCPIT2",  0x1001, 0x0    , 0x52  , 0x134B, 0x34B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B6
   {"PMULHRW",   0x1001, 0x0    , 0x52  , 0x1302, 0x302 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B7
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B8
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op B9
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op BA
   {"PSWAPD",    0x1002, 0x0    , 0x52  , 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op BB
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op BC
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op BD
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op BE
   {"PAVGUSB",   0x1001, 0x0    , 0x52  , 0x1301, 0x301 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 0F op BF
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x1001, 0x0    , 0x2052, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 0F op C0

// Opcode map for crc32. Opcode byte = 0F 38 F1
// Indexed by operand size (16, 32, 64)
ДефОпКода КартаОпКодов7[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"crc32",     0x16  , 0x9900 , 0x12  , 0x1003, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F1
   {"crc32",     0x16  , 0x9900 , 0x12  , 0x1003, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 38 F1
   {"crc32",     0x16  , 0x9900 , 0x12  , 0x1004, 0x4   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 38 F1

// Secondary opcode map for x87 f.p. instructions. Opcode D8
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодов8[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fadd",      0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fadd m32
   {"fmul",      0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fmul m32
   {"fcom",      0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcom m32
   {"fcomp",     0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcomp m32
   {"fsub",      0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsub m32
   {"fsubr",     0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsubr m32
   {"fdiv",      0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdiv m32
   {"fdivr",     0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdivr m32
   {"fadd",      0x100 , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fadd st,st(i)
   {"fmul",      0x100 , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fmul st,st(i)
   {"fcom",      0x100 , 0x0    , 0x11  , 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcom st,st(i)
   {"fcomp",     0x100 , 0x0    , 0x11  , 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcomp st,st(i)
   {"fsub",      0x100 , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsub st,st(i)
   {"fsubr",     0x100 , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsubr st,st(i)
   {"fdiv",      0x100 , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdiv st,st(i)
   {"fdivr",     0x100 , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // fdivr st,st(i)

// Secondary opcode map for x87 f.p. instructions. Opcode D9
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодов9[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fld",       0x100 , 0x0    , 0x11  , 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fld m32
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fst",       0x100 , 0x0    , 0x11  , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fst m32
   {"fstp",      0x100 , 0x0    , 0x11  , 0x2043, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fstp m32
   {"fldenv",    0x100 , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fldenv m
   {"fldcw",     0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fldcw m16
   {"fnstenv",   0x100 , 0x0    , 0x11  , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fnstenv m
   {"fnstcw",    0x100 , 0x0    , 0x11  , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fnstcw m16
   {"fld",       0x100 , 0x0    , 0x11  , 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fld st(i)
   {"fxch",      0x100 , 0x0    , 0x11  , 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fxch st(i)
   {"fnop",      0x10  , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x10 fnop
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x11  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x11 fchs etc.
   {null,           0x12  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x12 fld1 etc.
   {null,           0x13  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x13 f2xm1 etc.
   {null,           0x14  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   }];   // Link to tertiary map 0x14 fprem etc.

// Secondary opcode map for x87 f.p. instructions. Opcode DA
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодовA[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fiadd",     0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fiadd m32
   {"fimul",     0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fimul m32
   {"ficom",     0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // ficom m32
   {"ficomp",    0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // ficomp m32
   {"fisub",     0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisub m32
   {"fisubr",    0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisubr m32
   {"fidiv",     0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fidiv m32
   {"fidivr",    0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fidivr m32
   {"fcmovb",    0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovb st,st(i)
   {"fcmove",    0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovb st,st(i)
   {"fcmovbe",   0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovbe st,st(i)
   {"fcmovu",    0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovbe st,st(i)
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x15  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x15 fucompp
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Illegal

// Secondary opcode map for x87 f.p. instructions. Opcode DB
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодовB[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fild",      0x100 , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fild m32
   {"fisttp",    0x13  , 0x0    , 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisttp m32
   {"fist",      0x100 , 0x0    , 0x11  , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fist m32
   {"fistp",     0x100 , 0x0    , 0x11  , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fistp m32
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fld",       0x100 , 0x0    , 0x11  , 0x0   , 0x2045, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fld m80
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fstp",      0x100 , 0x0    , 0x11  , 0x2045, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fst m80
   {"fcmovnb",   0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovnb st,st(i)
   {"fcmovne",   0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovne st,st(i)
   {"fcmovnbe",  0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovnbe st,st(i)
   {"fcmovnu",   0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fcmovnu st,st(i)
   {null,           0x16  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x16 fclex etc.
   {"fucomi",    0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fucomi st,st(i)
   {"fcomi",     0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcomi st,st(i)
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Secondary opcode map for x87 f.p. instructions. Opcode DC
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодовC[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fadd",      0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fadd m64
   {"fmul",      0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fmul m64
   {"fcom",      0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcom m64
   {"fcomp",     0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcomp m64
   {"fsub",      0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsub m64
   {"fsubr",     0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsubr m64
   {"fdiv",      0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdiv m64
   {"fdivr",     0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdivr m64
   {"fadd",      0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fadd st(i),st
   {"fmul",      0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fmul st(i),st
   {null,           0x0   , 0x0    , 0x4011, 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fsubr",     0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsubr st(i),st
   {"fsub",      0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsub st(i),st
   {"fdivr",     0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdivr st(i),st
   {"fdiv",      0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // fdiv st(i),st

// Secondary opcode map for x87 f.p. instructions. Opcode DD
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодовD[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fld",       0x100 , 0x0    , 0x11  , 0x0   , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fld m64
   {"fisttp",    0x13  , 0x0    , 0x11  , 0x2004, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisttp m64
   {"fst",       0x100 , 0x0    , 0x11  , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fst m64
   {"fstp",      0x100 , 0x0    , 0x11  , 0x2044, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fstp m64
   {"frstor",    0x100 , 0x0    , 0x11  , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // frstor 108 bytes
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fnsave",    0x100 , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fnsave 108 bytes
   {"fnstsw",    0x100 , 0x0    , 0x11  , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fstsw m16
   {"ffree",     0x100 , 0x0    , 0x11  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // ffree st(i)
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fst",       0x100 , 0x0    , 0x11  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fst st(i)
   {"fstp",      0x100 , 0x0    , 0x11  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fstp st(i)
   {"fucom",     0x101 , 0x0    , 0x11  , 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fucom st(i)
   {"fucomp",    0x101 , 0x0    , 0x11  , 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fucomp st(i)
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Secondary opcode map for x87 f.p. instructions. Opcode DE
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодовE[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fiadd",     0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fiadd m16
   {"fimul",     0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fimul m16
   {"ficom",     0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // ficom m16
   {"ficomp",    0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // ficomp m16
   {"fisub",     0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisub m16
   {"fisubr",    0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisubr m16
   {"fidiv",     0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fidiv m16
   {"fidivr",    0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fidivr m16
   {"faddp",     0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // faddp st(i),st
   {"fmulp",     0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fmulp st(i),st
   {null,           0x0   , 0x0    , 0x4011, 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x17  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x17 fcompp
   {"fsubrp",    0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsubrp st(i),st (Yes, the order is illogical here)
   {"fsubp",     0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fsubp st(i),st
   {"fdivrp",    0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fdivrp st(i),st
   {"fdivp",     0x100 , 0x0    , 0x11  , 0x1040, 0xAF  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // fdivp st(i),st

// Secondary opcode map for x87 f.p. instructions. Opcode DF
// Indexed by reg bits and mod == 3
ДефОпКода КартаОпКодовF[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fild",      0x100 , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fild m16
   {"fisttp",    0x13  , 0x0    , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fisttp m16
   {"fist",      0x100 , 0x0    , 0x11  , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fist m16
   {"fistp",     0x100 , 0x0    , 0x11  , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fistp m16
   {"fbld",      0x100 , 0x0    , 0x11  , 0x0   , 0x2005, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fbld m80
   {"fild",      0x100 , 0x0    , 0x11  , 0x0   , 0x2004, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fild m64
   {"fbstp",     0x100 , 0x0    , 0x11  , 0x2005, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fbstp m80
   {"fistp",     0x100 , 0x0    , 0x11  , 0x2004, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fistp m64
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x18  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // Link to tertiary map 0x18 fnstsw ax
   {"fucomip",   0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fucomp st,st(i)
   {"fcomip",    0x6   , 0x0    , 0x11  , 0xAF  , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // fcomp st,st(i)
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x1040, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for f.p. D9 / reg = 010
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов10[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fnop",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // fnop
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // the rest is illegal

// Tertiary opcode map for f.p. D9 / reg = 100
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов11[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fchs",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fchs
   {"fabs",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fabs
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"ftst",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // ftst
   {"fxam",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fxam
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for f.p. D9 / reg = 101
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов12[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fld1",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // fld1
   {"fldl2t",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fldl2e",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fldpi",     0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fldlg2",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fldln2",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fldz",      0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for f.p. D9 / reg = 110
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов13[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"f2xm1",     0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // f2xm1
   {"fyl2x",     0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fptan",     0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fpatan",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fxtract",   0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fprem1",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fdecstp",   0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fincstp",   0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 

// Tertiary opcode map for f.p. D9 / reg = 111
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов14[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fprem",     0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fyl2xp1",   0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fsqrt",     0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fsincos",   0x101 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"frndint",   0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fscale",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fsin",      0x101 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fcos",      0x101 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 

// Tertiary opcode map for f.p. DA / reg = 101
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов15[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fucompp",   0x101 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for f.p. DB / reg = 100
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов16[5] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fnclex",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"fninit",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for f.p. DE / reg = 011
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов17[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"fcompp",    0x100 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // 
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for f.p. DF / reg = 100
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов18[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fnstsw",    0x100 , 0x0    , 0x10  , 0xA2  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Secondary opcode map for IRET. Opcode byte = 0xCF
// Indexed by operand size
ДефОпКода КартаОпКодов19[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"iret",      0x0   , 0x102  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // CF
   {"iretd",     0x0   , 0x102  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  },    // CF
   {"iretq",     0x0   , 0x1102 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x10  }];   // CF

// Secondary opcode map for immediate group 1. Opcode byte = 0x80
// Indexed by reg bits = 0 - 7
ДефОпКода КартаОпКодов1A[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"add",       0x0   , 0x10   , 0x51  , 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /0
   {"or",        0x0   , 0x10   , 0x51  , 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /1
   {"adc",       0x0   , 0x10   , 0x51  , 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /2
   {"sbb",       0x0   , 0x10   , 0x51  , 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /3
   {"and",       0x0   , 0x10   , 0x51  , 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /4
   {"sub",       0x0   , 0x10   , 0x51  , 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /5
   {"xor",       0x0   , 0x10   , 0x51  , 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 80 /6
   {"cmp",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   }];   // 80 /7

// Secondary opcode map for immediate group 1. Opcode byte = 0x81
// Indexed by reg bits = 0 - 7
ДефОпКода КартаОпКодов1B[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"add",       0x0   , 0x1110 , 0x91  , 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /0
   {"or",        0x0   , 0x1110 , 0x91  , 0x9   , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /1
   {"adc",       0x0   , 0x1110 , 0x91  , 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /2
   {"sbb",       0x0   , 0x1110 , 0x91  , 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /3
   {"and",       0x0   , 0x1110 , 0x91  , 0x9   , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /4
   {"sub",       0x0   , 0x1110 , 0x91  , 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /5
   {"xor",       0x0   , 0x1110 , 0x91  , 0x9   , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // 81 /6
   {"cmp",       0x0   , 0x1100 , 0x91  , 0x9   , 0x19  , 0x0   , 0x0   , 0x0   , 0x0   , 0x84  }];   // 81 /7

// Secondary opcode map for immediate group 1. Opcode byte = 0x82.
// Undocumented opcode. Signed byte instructions do the same as unsigned byte instructions at 0x80
ДефОпКода КартаОпКодов1C[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"add",       0x8000, 0x10   , 0x4051, 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /0
   {"or",        0x8000, 0x10   , 0x4051, 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /1
   {"adc",       0x8000, 0x10   , 0x4051, 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /2
   {"sbb",       0x8000, 0x10   , 0x4051, 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /3
   {"and",       0x8000, 0x10   , 0x4051, 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /4
   {"sub",       0x8000, 0x10   , 0x4051, 0x1   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /5
   {"xor",       0x8000, 0x10   , 0x4051, 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 82 /6
   {"cmp",       0x8000, 0x0    , 0x4051, 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   }];   // 82 /7

// Secondary opcode map for immediate group 1. Opcode byte = 0x83
// Indexed by reg bits = 0 - 7
ДефОпКода КартаОпКодов1D[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"add",       0x0   , 0x1110 , 0x51  , 0x9   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /0
   {"or",        0x0   , 0x1110 , 0x51  , 0x9   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /1
   {"adc",       0x0   , 0x1110 , 0x51  , 0x9   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /2
   {"sbb",       0x0   , 0x1110 , 0x51  , 0x9   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /3
   {"and",       0x0   , 0x1110 , 0x51  , 0x9   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /4
   {"sub",       0x0   , 0x1110 , 0x51  , 0x9   , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /5
   {"xor",       0x0   , 0x1110 , 0x51  , 0x9   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 83 /6
   {"cmp",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   }];   // 83 /7

// Secondary opcode map for shift group 2. Opcode byte = 0xC0
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов1E[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"rol",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /0 rol byte ptr r/m,ib
   {"ror",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /1
   {"rcl",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /2
   {"rcr",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /3
   {"shl",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /4
   {"shr",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /5
   {"sal",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C0 /6
   {"sar",       0x0   , 0x0    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C0 /7

// Secondary opcode map for shift group 2. Opcode byte = 0xC1
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов1F[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"rol",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /0 rol word ptr r/m,ib
   {"ror",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /1
   {"rcl",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /2
   {"rcr",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /3
   {"shl",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /4
   {"shr",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /5
   {"sal",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C1 /6
   {"sar",       0x0   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C1 /7

// Secondary opcode map for shift group 2. Opcode byte = 0xD0
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов20[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"rol",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /0 rol byte ptr r/m,1
   {"ror",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /1
   {"rcl",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /2
   {"rcr",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /3
   {"shl",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /4
   {"shr",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /5
   {"sal",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /6
   {"sar",       0x0   , 0x0    , 0x11  , 0x1   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C2 /7

// Secondary opcode map for shift group 2. Opcode byte = 0xD1
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов21[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"rol",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /0 rol word ptr r/m,1
   {"ror",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /1
   {"rcl",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /2
   {"rcr",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /3
   {"shl",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /4
   {"shr",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /5
   {"sal",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /6
   {"sar",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB1  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C3 /7

// Secondary opcode map for shift group 2. Opcode byte = 0xD2
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов22[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"rol",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /0 rol byte ptr r/m,cl
   {"ror",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /1
   {"rcl",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /2
   {"rcr",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /3
   {"shl",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /4
   {"shr",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /5
   {"sal",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C2 /6
   {"sar",       0x0   , 0x0    , 0x11  , 0x1   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C2 /7

// Secondary opcode map for shift group 2. Opcode byte = 0xD3
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов23[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"rol",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /0 rol word ptr r/m,cl
   {"ror",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /1
   {"rcl",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /2
   {"rcr",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /3
   {"shl",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /4
   {"shr",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /5
   {"sal",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C3 /6
   {"sar",       0x0   , 0x1100 , 0x11  , 0x9   , 0xB3  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C3 /7

// Secondary opcode map for group 3. Opcode byte = 0xF6
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов24[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"test",      0x0   , 0x0    , 0x51  , 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // test rm8,ib
   {"test",      0x0   , 0x0    , 0x4051, 0x1   , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // test rm8,ib. undocumented
   {"not",       0x0   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // not rm8
   {"neg",       0x0   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // neg rm8
   {"mul",       0x0   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // mul rm8
   {"imul",      0x0   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // imul rm8
   {"div",       0x0   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // div rm8
   {"idiv",      0x0   , 0x0    , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }];   // idiv rm8

// Secondary opcode map for group 3. Opcode byte = 0xF7
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов25[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"test",      0x0   , 0x1100 , 0x91  , 0x9   , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // test rm,i
   {"test",      0x0   , 0x1100 , 0x4091, 0x9   , 0x39  , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // test rm,i. undocumented
   {"not",       0x0   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // not rm
   {"neg",       0x0   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // neg rm
   {"mul",       0x0   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // mul rm
   {"imul",      0x0   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // imul rm
   {"div",       0x0   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // div rm
   {"idiv",      0x0   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }];   // idiv rm

// Secondary opcode map for group 4. Opcode byte = 0xFE
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов26[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"inc",       0x0   , 0x10   , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // inc rm8
   {"dec",       0x0   , 0x10   , 0x11  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // dec rm8
   {null,           0x0   , 0x0    , 0x4011, 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal opcode

// Secondary opcode map for group 5. Opcode byte = 0xFF
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов27[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"inc",       0x0   , 0x1110 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // inc rm
   {"dec",       0x0   , 0x1110 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x80  },    // dec rm
   {"call",      0x0   , 0x2182 , 0x11  , 0xC   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // call indirect rm
   {"call",      0x0   , 0x1102 , 0x811 , 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x28  },    // call indirect far
   {"jmp",       0x0   , 0x2180 , 0x11  , 0xB   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x14  },    // jmp indirect rm
   {"jmp",       0x0   , 0x1100 , 0x811 , 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x30  },    // jmp indirect far
   {"push",      0x0   , 0x2102 , 0x11  , 0xA   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x4   },    // push rm
   {null,           0x0   , 0x0    , 0x4011, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal opcode

// Secondary opcode map for immediate group 1A. Opcode byte = 0x8F
// Indexed by reg bits = 0 - 7. Values != 0 are discouraged
ДефОпКода КартаОпКодов28[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pop",       0x0   , 0x2102 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 8F
   {"pop",       0x0   , 0x2102 , 0x4011, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 8F

// Tertiary opcode map for pinsrw. Opcode byte = 0F C4
// Indexed by mod bits 0 register vs. memory operand
ДефОпКода КартаОпКодов29[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pinsrw",    0x7   , 0x91200, 0x59  , 0x1102, 0x1102, 0x2002, 0x11  , 0x0   , 0x0   , 0x2   },    // 0F C4 mem16
   {"pinsrw",    0x7   , 0x91200, 0x59  , 0x1102, 0x1102, 0x1009, 0x11  , 0x0   , 0x0   , 0x2   }];   // 0F C4 register

// Tertiary opcode map for group 6. Opcode byte = 0F 00
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов2A[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"sldt",      0x2   , 0x1100 , 0x11  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"str",       0x802 , 0x100  , 0x11  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"lldt",      0x802 , 0x2000 , 0x11  , 0x0   , 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"ltr",       0x802 , 0x0    , 0x11  , 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"verr",      0x802 , 0x0    , 0x11  , 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"verw",      0x802 , 0x0    , 0x11  , 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for group 7. Opcode byte = 0F 01
// Indexed by reg bits = 0 - 7 and mod = 11b. 
ДефОпКода КартаОпКодов2B[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"sgdt",      0x802 , 0x1100 , 0x11  , 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"sidt",      0x802 , 0x1100 , 0x11  , 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"lgdt",      0x802 , 0x1100 , 0x11  , 0x0   , 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"lidt",      0x802 , 0x1100 , 0x11  , 0x0   , 0x200D, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"smsw",      0x2   , 0x0    , 0x11  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"lmsw",      0x802 , 0x0    , 0x11  , 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"invlpg",    0x4   , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x36  , 0x0    , 0x4011, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // link to quarternary map, vmcall etc.
   {null,           0x37  , 0x0    , 0x4011, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x5   , 0x0   },    // link to quarternary map, monitor, mwait
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"smsw",      0x2   , 0x1100 , 0x11  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x4011, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"lmsw",      0x802 , 0x0    , 0x11  , 0x0   , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"swapgs",    0x800 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // instruction set unknown

// Secondary opcode map for group 8. Opcode byte = 0F BA: bt
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов2C[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x51  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x51  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x51  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x51  , 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"bt",        0x3   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"bts",       0x3   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"btr",       0x3   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"btc",       0x3   , 0x1100 , 0x51  , 0x9   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 

// Secondary opcode map for addsub. Opcode byte = 0F D0
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов2D[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"addsub",    0x13  , 0xD0000, 0x4019, 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F D0. undefined
   {"addsubpd",  0x13  , 0xD0200, 0x19  , 0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F D0. addsubpd
   {"addsubps",  0x13  , 0xD0800, 0x19  , 0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F D0. addsubps
   {"addsub",    0x13  , 0xD0400, 0x4019, 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F D0. undefined

// Secondary opcode map for group 10. Opcode byte = 0F B9
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов2E[1] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"ud1",       0x0   , 0x0    , 0x4012, 0x1009, 0x6   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Invalid opcode, possibly used for emulation

// Secondary opcode map for mov group 11. Opcode byte = 0xC6
// Indexed by reg bits = 0 - 7. Values != 0 are discouraged
ДефОпКода КартаОпКодов2F[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"mov",       0x0   , 0x5    , 0x51  , 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C6 mov m,ib
   {"mov",       0x0   , 0x5    , 0x4051, 0x1   , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C6

// Secondary opcode map for mov group 11. Opcode byte = 0xC7
// Indexed by reg bits = 0 - 7. Values != 0 are discouraged
ДефОпКода КартаОпКодов30[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"mov",       0x0   , 0x1105 , 0x91  , 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // C7 mov m,iw
   {"mov",       0x0   , 0x5    , 0x4091, 0x9   , 0x29  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // C7

// Secondary opcode map for group 12. Opcode byte = 0F 71
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов31[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {null,           0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {"psrlw",     0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {null,           0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {"psraw",     0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {null,           0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {"psllw",     0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {null,           0x7   , 0x90200, 0x58  , 0x1102, 0x1102, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   }];    // Illegal

// Secondary opcode map for group 13. Opcode byte = 0F 72
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов32[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {"psrld",     0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {"psrad",     0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Illegal
   {"pslld",     0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   }];    // Illegal

// Secondary opcode map for group 14. Opcode byte = 0F 73
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов33[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {"psrlq",     0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {"psrldq",    0x12  , 0x98200, 0x58  , 0x1404, 0x1404, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     // Not valid without 66 prefix
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {"psllq",     0x12  , 0x90200, 0x58  , 0x1103, 0x1103, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },     //
   {"pslldq",    0x12  , 0x98200, 0x58  , 0x1404, 0x1404, 0x11  , 0x0   , 0x0   , 0x0   , 0x2   }];    // Not valid without 66 prefix

// Secondary opcode map for group 15. Opcode byte = 0F AE
// Indexed by reg bits = 0 - 7 and mod = 3 
ДефОпКода КартаОпКодов34[16] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fxsave",    0x11  , 0x0    , 0x11  , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // 0
   {"fxrstor",   0x11  , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },     // 1
   {"ldmxcsr",   0x11  , 0x10000, 0x11  , 0x0   , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },     // 2
   {"stmxcsr",   0x11  , 0x10000, 0x11  , 0x2003, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },     // 3
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {"clflush",   0x12  , 0x0    , 0x11  , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // 7
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // Illegal
   {"lfence",    0x12  , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // 1-5
   {"mfence",    0x12  , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },     // 1-6
   {"sfence",    0x12  , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];    // 1-7

// Secondary opcode map for group 16. Opcode byte = 0F 18
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов35[5] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"prefetchnta",0x13  , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 18 /0
   {"prefetcht0",0x13  , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 18 /1
   {"prefetcht1",0x13  , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 18 /2
   {"prefetcht2",0x13  , 0x0    , 0x11  , 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 18 /3
   {"prefetch",  0x13  , 0x0    , 0x4011, 0x0   , 0x2006, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 18 /4+ illegal

// Quarternary opcode map for group 7. 0F 01 reg = 0
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов36[6] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // illegal
   {"vmcall",    0x813 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // Intel processor only?
   {"vmlaunch",  0x813 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // Intel processor only?
   {"vmresume",  0x813 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Intel processor only?
   {"vmxoff",    0x813 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Intel processor only?
   {null,           0x0   , 0x0    , 0x4010, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Quarternary opcode map for group 7. 0F 01 reg = 1
// Indexed by rm bits of mod/reg/rm byte
ДефОпКода КартаОпКодов37[5] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"monitor",   0x813 , 0x4    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"mwait",     0x813 , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x0   , 0x0    , 0x10  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // illegal

// Tertiary opcode map for floating point cmpps/pd instructions. First two bytes = 0F C2
// Indexed by immediate byte following operands = 0 - 7
ДефОпКода КартаОпКодов38[9] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cmpeq",     0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 00: cmpeqps/pd
   {"cmplt",     0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 01: 
   {"cmple",     0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 02: 
   {"cmpunord",  0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 03: 
   {"cmpneq",    0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 04: 
   {"cmpnlt",    0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 05: 
   {"cmpnle",    0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 06: 
   {"cmpord",    0x12  ,0xD0E00 , 0x59  , 0x124F, 0x24F , 0x24F , 0x0   , 0x0   , 0x0   , 0x3   },    // 0F C2 op 07: 
   {"cmp",       0x12  ,0xD0E00 , 0x4059, 0x124F, 0x24F , 0x24F , 0x11  , 0x0   , 0x0   , 0x3   }];   // 0F C2 op > 7: cmpps/pd, imm

// Secondary opcode map for cbw/cwde/cdqe. Opcode byte = 0x98
// Indexed by operand size = 16, 32, 64
ДефОпКода КартаОпКодов39[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cbw",       0x0   , 0x100  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 98
   {"cwde",      0x0   , 0x100  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 98
   {"cdqe",      0x4000, 0x1000 , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }];   // 98

// Secondary opcode map for cwd/cdq/cqo. Opcode byte = 0x99
// Indexed by operand size = 16, 32, 64
ДефОпКода КартаОпКодов3A[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cwd",       0x0   , 0x100  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 99
   {"cdq",       0x0   , 0x100  , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 99
   {"cqo",       0x4000, 0x1000 , 0x1   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }];   // 99


// Secondary opcode map for arpl/movsxd. Opcode byte = 0x63
// Indexed by mode = 16, 32, 64
ДефОпКода КартаОпКодов3B[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"arpl",      0x8802, 0x0    , 0x13  , 0x2   , 0x1002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 63
   {"arpl",      0x8802, 0x0    , 0x13  , 0x2   , 0x1002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 63
   {"movsxd",    0x4000, 0x1000 , 0x12  , 0x1009, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 63

// Secondary opcode map for nop/pause. Opcode byte = 0x90
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов3C[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"nop",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 90
   {"nop",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // 66 90
   {"nop",       0x0   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x40  },    // F2 90
   {"pause",     0x0   , 0x400  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 90. (No instset indicated because backwards compatible)

// Secondary opcode map for jcxz. Opcode byte = 0xE3
// Indexed by address size
ДефОпКода КартаОпКодов3D[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"jcxz",      0x0   , 0x81   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // E3
   {"jecxz",     0x0   , 0x81   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },
   {"jrcxz",     0x4000, 0x81   , 0x42  , 0x81  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];

// Secondary opcode map for pushf/d/q. Opcode byte = 0x9C
// Indexed by operand size
ДефОпКода КартаОпКодов3E[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pushf",     0x0   , 0x102  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 9C pushf
   {"pushf",     0x0   , 0x2102 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   },    // 9C pushf/d/q
   {"pushf",     0x0   , 0x2102 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   }];   // 9C pushf/d/q

// Secondary opcode map for poof/d/q. Opcode byte = 0x9D
// Indexed by operand size
ДефОпКода КартаОпКодов3F[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"popf",      0x0   , 0x102  , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 9D popf
   {"popf",      0x0   , 0x2102 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   },    // 9D popf/d/q
   {"popf",      0x0   , 0x2102 , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x1   }];   // 9D popf/d/q

// Tertiary opcode map for movups etc. Opcode byte = 0F 10
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов40[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movups",    0x11  , 0x50000, 0x12  , 0x1251, 0x251 , 0x0   , 0x0   , 0x0   , 0x0   , 0x202 },    // 0F 10
   {"movupd",    0x12  , 0x50200, 0x12  , 0x1251, 0x251 , 0x0   , 0x0   , 0x0   , 0x0   , 0x202 },    // 66 0F 10
   {"movsd",     0x71  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 3     , 0     },    // F2 0F 10 Link for memory/register
   {"movss",     0x72  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 3     , 0     }];   // F3 0F 10 Link for memory/register

// Tertiary opcode map for movups etc. Opcode byte = 0F 11
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов41[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movups",    0x11  , 0x50000, 0x13  , 0x451 , 0x124B, 0x0   , 0x0   , 0x0   , 0x0   , 0x202 },    // 0F 11
   {"movupd",    0x12  , 0x50200, 0x13  , 0x451 , 0x124C, 0x0   , 0x0   , 0x0   , 0x0   , 0x202 },    // 66 0F 11
   {"movsd",     0x73  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 3     , 0     },    // F2 0F 11 Link for memory/register
   {"movss",     0x74  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 3     , 0     }];   // F3 0F 11 Link for memory/register

// Tertiary opcode map for movlps etc. Opcode byte = 0F 12
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов42[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x43  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // Link to quarternary map
   {"movlpd",    0x12  , 0x90200, 0x19  , 0x124C, 0x124C, 0x2351, 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 12
   {"movddup",   0x70  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0xB   , 0     },    // F2 0F 12
   {"movsldup",  0x13  , 0x50400, 0x12  , 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 12

// Quarternary opcode map for movlps and movhlps. Opcode byte = 0F 12
// Indexed by mod bits
ДефОпКода КартаОпКодов43[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movlps",    0x11  , 0x90000, 0x19  , 0x144B, 0x144B, 0x2351, 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 12 (mem)
   {"movhlps",   0x11  , 0x90000, 0x19  , 0x144B, 0x144B, 0x144B, 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 12 (reg)

// Tertiary opcode map for movlps etc. Opcode byte = 0F 16
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов44[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x45  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   },    // Link to quarternary map
   {"movhpd",    0x12  , 0x90200, 0x19  , 0x124C, 0x124C, 0x204C, 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 16
   {null,           0x13  , 0x800  , 0x4012, 0x124C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 16
   {"movshdup",  0x13  , 0x50400, 0x12  , 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 16

// Quarternary opcode map for movhps and movlhps. Opcode byte = 0F 16
// Indexed by mod bits
ДефОпКода КартаОпКодов45[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movhps",    0x11  , 0x90000, 0x19  , 0x124B, 0x124B, 0x2351, 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 12 (mem)
   {"movlhps",   0x11  , 0x90000, 0x19  , 0x124B, 0x124B, 0x124B, 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 12 (reg)

// Tertiary opcode map for cvtpi2ps etc. Opcode byte = 0F 2A
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов46[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cvtpi2ps",  0x11  , 0x0    , 0x12  , 0x124B, 0x303 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 2A
   {"cvtpi2pd",  0x12  , 0x200  , 0x12  , 0x124C, 0x303 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 66 0F 2A
   {"cvtsi2sd",  0x12  , 0x91800, 0x19  , 0x104C, 0x104C, 0x9   , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 2A
   {"cvtsi2ss",  0x12  , 0x91400, 0x19  , 0x104B, 0x104B, 0x9   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 2A

// Tertiary opcode map for cvttps2pi etc. Opcode byte = 0F 2C
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов47[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cvttps2pi", 0x11  , 0x0    , 0x12  , 0x1303, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 2C
   {"cvttpd2pi", 0x12  , 0x200  , 0x12  , 0x1303, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 66 0F 2C
   {"cvttsd2si", 0x12  , 0x11800, 0x12  , 0x1009, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 2C
   {"cvttss2si", 0x12  , 0x11400, 0x12  , 0x1009, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 2C

// Tertiary opcode map for cvtps2pi etc. Opcode byte = 0F 2D
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов48[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cvtps2pi",  0x11  , 0x0    , 0x12  , 0x1303, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 2D
   {"cvtpd2pi",  0x12  , 0x200  , 0x12  , 0x1303, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 66 0F 2D
   {"cvtsd2si",  0x12  , 0x11800, 0x12  , 0x1009, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 2D
   {"cvtss2si",  0x12  , 0x11400, 0x12  , 0x1009, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 2D

// Tertiary opcode map for cvtps2pd etc. Opcode byte = 0F 5A
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов49[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cvtps2pd",  0x12  , 0x50000, 0x12  , 0x124C, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 5A
   {"cvtpd2ps",  0x12  , 0x50200, 0x12  , 0x144B, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 5A
   {"cvtsd2ss",  0x12  , 0x90800, 0x19  , 0x104B, 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 5A
   {"cvtss2sd",  0x12  , 0x90400, 0x19  , 0x104C, 0x104C, 0x4B  , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 5A

// Tertiary opcode map for cvtdq2ps etc. Opcode byte = 0F 5B
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов4A[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cvtdq2ps",  0x12  , 0x50000, 0x12  , 0x124B, 0x203 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 5B
   {"cvtps2dq",  0x12  , 0x50200, 0x12  , 0x1203, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 5B
   {null,           0x12  , 0x800  , 0x4012, 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 5B. Illegal
   {"cvttps2dq", 0x12  , 0x50400, 0x12  , 0x1203, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 5B

// Tertiary opcode map for ucomiss/sd etc. Opcode byte = 0F 2E
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов4B[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"ucomiss",   0x11  , 0x10200, 0x12  , 0x124B, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x6   },    // 0F 2E. ucomiss
   {"ucomisd",   0x11  , 0x10200, 0x12  , 0x124C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x6   },    // 66 0F 2E. ucomisd
   {null,           0x0   , 0x0    , 0x12  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Illegal

// Tertiary opcode map for comiss/sd etc. Opcode byte = 0F 2F
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов4C[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"comiss",    0x11  , 0x10200, 0x12  , 0x124B, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x6   },    // 0F 2F. comiss
   {"comisd",    0x11  , 0x10200, 0x12  , 0x124C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x6   },    // 66 0F 2F. comisd
   {null,           0x0   , 0x0    , 0x12  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Illegal

// Tertiary opcode map for movq/movdqa/movdqu. Opcode byte = 0F 6F
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов4D[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movq",      0x7   , 0x0    , 0x12  , 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 6F
   {"movdqa",    0x12  , 0x50100, 0x12  , 0x1250, 0x250 , 0x0   , 0x0   , 0x0   , 0x0   , 0x102 },    // 66 0F 6F
   {null,           0x7   , 0x800  , 0x4012, 0x1351, 0x351 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 6F. Illegal
   {"movdqu",    0x12  , 0x50400, 0x12  , 0x1250, 0x251 , 0x0   , 0x0   , 0x0   , 0x0   , 0x202 }];   // F3 0F 6F

// Tertiary opcode map for movq/movdqa/movdqu. Opcode byte = 0F 7F
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов4E[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movq",      0x7   , 0x0    , 0x13  , 0x351 , 0x1351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7F
   {"movdqa",    0x12  , 0x50100, 0x13  , 0x250 , 0x1250, 0x0   , 0x0   , 0x0   , 0x0   , 0x102 },    // 66 0F 7F
   {null,           0x7   , 0x800  , 0x4013, 0x351 , 0x1351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 7F. Illegal
   {"movdqu",    0x12  , 0x50400, 0x13  , 0x251 , 0x1250, 0x0   , 0x0   , 0x0   , 0x0   , 0x202 }];   // F3 0F 7F

// Tertiary opcode map for pshufw etc. Opcode byte = 0F 70
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов4F[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pshufw",    0x7   , 0x0    , 0x52  , 0x1302, 0x302 , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 70
   {"pshufd",    0x12  , 0x10100, 0x52  , 0x1403, 0x403 , 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 70
   {"pshuflw",   0x12  , 0x10800, 0x52  , 0x1402, 0x402 , 0x11  , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 70
   {"pshufhw",   0x12  , 0x10400, 0x52  , 0x1402, 0x402 , 0x11  , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 70

// Tertiary opcode map for group 9. Opcode byte = 0F C7
// Indexed by reg bits = 0 - 7. 
ДефОпКода КартаОпКодов50[8] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0. Illegal
   {null,           0x51  , 0x1010 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 1. Link to quarternary map: cmpxchg8b
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x52  , 0x600  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },    // 6. Link to quarternary map: vmptrld
   {"vmptrst",   0x813 , 0x0    , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 7

// Quarternary opcode map for cmpxchg8b. Opcode byte = 0F C7 /1
// Indexed by operand size: 16, 32, 64
ДефОпКода КартаОпКодов51[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cmpxchg8b", 0x5   , 0x1010 , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"cmpxchg8b", 0x5   , 0x1010 , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"cmpxchg16b",0x5   , 0x1010 , 0x11  , 0x2450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];

// Quarternary opcode map for cmpxchg8b. Opcode byte = 0F C7 /6
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов52[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"vmptrld",   0x813 , 0x0    , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"vmclear",   0x813 , 0x200  , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {null,           0x813 , 0x800  , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"vmxon",     0x813 , 0x400  , 0x11  , 0x2351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];

// Quarternary opcode map for movdq2q etc. Opcode byte = 0F D6
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов53[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"movq",      0x6F  , 0      , 0     , 0     , 0     , 0     , 0     , 0     , 0x3   , 0     },    // 66: Link to movq m64,xmm / movq xmm,xmm
   {"movdq2q",   0x12  , 0x800  , 0x12  , 0x1351, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2
   {"movq2dq",   0x12  , 0x400  , 0x12  , 0x1450, 0x1351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3

// Quarternary opcode map for cvtpd2dq etc. Opcode byte = 0F E6
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов54[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {"cvttpd2dq", 0x12  , 0x50200, 0x12  , 0x1403, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 66
   {"cvtpd2dq",  0x12  , 0x50800, 0x12  , 0x1403, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F2
   {"cvtdq2pd",  0x12  , 0x50400, 0x12  , 0x124C, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3

// Quarternary opcode map for movntq etc. Opcode byte = 0F E7
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов55[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movntq",    0x11  , 0x0    , 0x13  , 0x2351, 0x1351, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"movntdq",   0x12  , 0x50200, 0x13  , 0x2250, 0x1250, 0x0   , 0x0   , 0x0   , 0x0   , 0x102 },    // 
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Illegal

// Quarternary opcode map for lddqu. Opcode byte = 0F F0
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов56[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // Illegal
   {null,           0x0   , 0x200  , 0x12  , 0x1450, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 
   {"lddqu",     0x13  , 0x58800, 0x12  , 0x1250, 0x251,  0x0   , 0x0   , 0x0   , 0x0   , 0x202 },    //
   {null,           0x0   , 0x400  , 0x12  , 0x1450, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Illegal

// Quarternary opcode map for maskmovq. Opcode byte = 0F F7
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов57[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"maskmovq",  0x7   , 0x5    , 0x12  , 0x1351, 0x1351, 0x0   , 0x0   , 0x0   , 0x0   , 0x20  },    // 
   {"maskmovdqu",0x12  , 0x18205, 0x12  , 0x1450, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x22  },    //
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x2450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // Illegal

// Tertiary opcode map for movd/movq. Opcode byte = 0F 6E
// Indexed by operand size 16/32/64
// First two lines are identical because operand size is determined only by REX.W prefix,
// while 66 prefix determines mmx or xmm register
ДефОпКода КартаОпКодов58[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movd",      0x7   , 0x11200, 0x12  , 0x1103, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 6E
   {"movd",      0x7   , 0x11200, 0x12  , 0x1103, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 6E
   {"movq;Name varies: movd",0x4000,0x11200,0x12,0x1104,0x4,0x0 , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 6E. Name varies: movd or movq, though the operand is 64 bits

// Tertiary opcode map for movd/movq. Opcode byte = 0F 7E
// Indexed by prefix: none/66/F2/F3
ДефОпКода КартаОпКодов59[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x5A  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 0F 7E. Link to map 5A. Name depends on REX.W prefix
   {null,           0x5A  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   , 0x0   },    // 66 0F 7E. Link to map 5A. Name depends on REX.W prefix
   {null,           0x7   , 0x0    , 0x4013, 0x3   , 0x1103, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 7E. Doesn't exist
   {null,           0x5B  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x3   , 0x0   }];   // F3 0F 7E. Link to map 5B. movq xmm,xmm/m64

// Quarternary opcode map for movd/movq. Opcode byte = 66 0F 7E
// Indexed by operand size 16/32/64
// First two lines are identical because operand size is determined only by REX.W prefix,
// while 66 prefix determines mmx or xmm register
ДефОпКода КартаОпКодов5A[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movd",      0x7   , 0x11200, 0x13  , 0x3   , 0x1103, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 7E
   {"movd",      0x7   , 0x11200, 0x13  , 0x3   , 0x1103, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 7E
   {"movq;Name varies: movd",0x4000,0x11200,0x13,0x4,0x1104,0x0 , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 7E. Name varies: movd or movq, though the operand is 64 bits

// Quarternary opcode map for movq xmm,xmm/m64. Opcode byte = F3 0F 7E
// Indexed by memory vs. register operand
ДефОпКода КартаОпКодов5B[2] = [
   {"movq",      0x12  , 0x10400, 0x12  , 0x1404, 0x4   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F3 0F 7E. movq xmm,m64
   {"movq",      0x12  , 0x10400, 0x12  , 0x1404, 0x404 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 7E. movq xmm,xmm

// Tertiary opcode map for haddps/pd etc. Opcode byte = 0F 7C
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов5C[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x4012, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7C
   {"haddpd",    0x13  , 0xD0A00, 0x19  , 0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 7C
   {"haddps",    0x13  , 0xD0A00, 0x19  , 0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 7C
   {null,           0x0   , 0x0    , 0x4012, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F 7C

// Tertiary opcode map for hsubps/pd etc. Opcode byte = 0F 7D
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов5D[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x4012, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7D
   {"hsubpd",    0x13  , 0xD0A00, 0x19  , 0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 7D
   {"hsubps",    0x13  , 0xD0A00, 0x19  , 0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 7D
   {null,           0x0   , 0x0    , 0x4012, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F 7D

// Tertiary opcode map for lar. Opcode byte = 0F 02
// Indexed by memory vs. register operand
ДефОпКода КартаОпКодов5E[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"lar",       0x802 , 0x1100 , 0x12  , 0x1009, 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 02 memory
   {"lar",       0x802 , 0x1100 , 0x12  , 0x1009, 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 02 register

// Tertiary opcode map for lsl. Opcode byte = 0F 03
// Indexed by memory vs. register operand
ДефОпКода КартаОпКодов5F[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"lsl",       0x802 , 0x1100 , 0x12  , 0x1009, 0x2002, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 03 memory
   {"lsl",       0x802 , 0x1100 , 0x12  , 0x1009, 0x1009, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 03 register

// Tertiary opcode map for popcnt. Opcode byte = 0F B8
// Indexed by prefixes (none, 66, F2, F3)
ДефОпКода КартаОпКодов60[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"jmpe;Itanium only",0,0     , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // 0F B8
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 66 0F B8
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F B8
   {"popcnt",    0x16  , 0x1500 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F B8

// Quarternary opcode map for pextrb. Opcode byte = 0F 3A 14
// Indexed by memory vs. register operand
ДефОпКода КартаОпКодов61[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pextrb",    0x15  , 0x18200, 0x53  , 0x2001, 0x1401, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 14 memory
   {"pextrb",    0x15  , 0x19200, 0x53  , 0x1009, 0x1401, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 3A 14 register

// Quarternary opcode map for pextrw. Opcode byte = 0F 3A 15
// Indexed by memory vs. register operand
ДефОпКода КартаОпКодов62[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pextrw",    0x15  , 0x19200, 0x53  , 0x2001, 0x1402, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 15 memory
   {"pextrw",    0x15  , 0x19200, 0x53  , 0x1009, 0x1402, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 3A 15 register

// Quarternary opcode map for pextrd/q. Opcode byte = 0F 3A 16
// Indexed by operand size (16, 32, 64)
ДефОпКода КартаОпКодов63[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pextrd",    0x15  , 0x18200, 0x53  , 0x3   , 0x1403, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 16 pextrd
   {"pextrd",    0x15  , 0x18200, 0x53  , 0x3   , 0x1403, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 3A 16 pextrd
   {"pextrq",    0x15  , 0x19200, 0x53  , 0x4   , 0x1404, 0x31  , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 3A 16 pextrq


// Opcode map for AMD instructions with XOP prefix and mmmmm = 01000
// Indexed by first opcode byte after XOP prefix. Has one byte immediate data
ДефОпКода КартаОпКодов64[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 00
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 01
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 02
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 03
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 04
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 05
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 06
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 07
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 08
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 09
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 0A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 0B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 0C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 0D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 0E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 0F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 10
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 11
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 12
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 13
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 14
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 15
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 16
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 17
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 18
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 19
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 1A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 1B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 1C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 1D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 1E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 1F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 20
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 21
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 22
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 23
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 24
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 25
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 26
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 27
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 28
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 29
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 2A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 2B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 2C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 2D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 2E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 2F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 30
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 31
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 32
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 33
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 34
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 35
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 36
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 37
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 38
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 39
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 3A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 3B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 3C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 3D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 3E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 3F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 40
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 41
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 42
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 43
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 44
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 45
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 46
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 47
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 48
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 49
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 4A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 4B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 4C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 4D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 4E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 4F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 50
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 51
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 52
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 53
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 54
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 55
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 56
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 57
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 58
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 59
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 5A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 5B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 5C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 5D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 5E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 5F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 60
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 61
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 62
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 63
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 64
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 65
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 66
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 67
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 68
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 69
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 6A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 6B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 6C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 6D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 6E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 6F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 70
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 71
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 72
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 73
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 74
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 75
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 76
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 77
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 78
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 79
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 7A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 7B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 7C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 7D
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 7E
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 7F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 80
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 81
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 82
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 83
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 84
   {"vpmacssww", 0x1005, 0xB0000, 0x5C,   0x1202, 0x1202, 0x202 , 0x1202, 0x0   , 0x0   , 0x0   },    // XOP(8) 85
   {"vpmacsswd", 0x1005, 0xB0000, 0x5C,   0x1203, 0x1202, 0x202 , 0x1203, 0x0   , 0x0   , 0x0   },    // XOP(8) 86
   {"vpmacssdql",0x1005, 0xB0000, 0x5C,   0x1204, 0x1203, 0x203 , 0x1204, 0x0   , 0x0   , 0x0   },    // XOP(8) 87
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 88
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 89
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 8A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 8B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 8C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 8D
   {"vpmacssdd", 0x1005, 0xB0000, 0x5C,   0x1203, 0x1203, 0x203 , 0x1203, 0x0   , 0x0   , 0x0   },    // XOP(8) 8E
   {"vpmacssdqh",0x1005, 0xB0000, 0x5C,   0x1204, 0x1203, 0x203 , 0x1204, 0x0   , 0x0   , 0x0   },    // XOP(8) 8F

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 90
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 91
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 92
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 93
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 94
   {"vpmacsww",  0x1005, 0xB0000, 0x5C,   0x1202, 0x1202, 0x202 , 0x1202, 0x0   , 0x0   , 0x0   },    // XOP(8) 95
   {"vpmacswd",  0x1005, 0xB0000, 0x5C,   0x1203, 0x1202, 0x202 , 0x1203, 0x0   , 0x0   , 0x0   },    // XOP(8) 96
   {"vpmacsdql", 0x1005, 0xB0000, 0x5C,   0x1204, 0x1203, 0x203 , 0x1204, 0x0   , 0x0   , 0x0   },    // XOP(8) 97
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 98
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 99
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 9A
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 9B
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 9C
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) 9D
   {"vpmacsdd",  0x1005, 0xB0000, 0x5C,   0x1203, 0x1203, 0x203 , 0x1203, 0x0   , 0x0   , 0x0   },    // XOP(8) 9E
   {"vpmacsdqh", 0x1005, 0xB0000, 0x5C,   0x1204, 0x1203, 0x203 , 0x1204, 0x0   , 0x0   , 0x0   },    // XOP(8) 9F

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"cvtph2ps",  0x1007, 0x70000, 0x52  , 0x124B, 0x402 , 0x31  , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A0
   {"cvtps2ph",  0x1007, 0x70000, 0x53  , 0x402,  0x124B, 0x31  , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A1
   {"vpcmov",    0x1005, 0xF5000, 0x5C,   0x1201, 0x1201, 0x201 , 0x201 , 0x0   , 0x0   , 0x0   },    // XOP(8) A2
   {"vpperm",    0x1005, 0xB5000, 0x5C,   0x1201, 0x1201, 0x201 , 0x201 , 0x0   , 0x0   , 0x0   },    // XOP(8) A3
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A4
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A5
   {"vpmadcsswd",0x1005, 0xB0000, 0x5C,   0x1203, 0x1202, 0x202 , 0x1203, 0x0   , 0x0   , 0x0   },    // XOP(8) A6
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A7
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A8
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) A9
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) AA
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) AB
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) AC
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) AD
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) AE
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) AF

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B0
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B1
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B2
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B3
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B4
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B5
   {"vpmadcswd", 0x1005, 0xB0000, 0x5C,   0x1203, 0x1202, 0x202 , 0x1203, 0x0   , 0x0   , 0x0   },    // XOP(8) B6
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B7
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B8
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) B9
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) BA
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) BB
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) BC
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) BD
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) BE
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) BF

   {"vprotb",    0x1005, 0x30000, 0x52  , 0x1401, 0x401 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C0
   {"vprotw",    0x1005, 0x30000, 0x52  , 0x1402, 0x402 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C1
   {"vprotd",    0x1005, 0x30000, 0x52  , 0x1403, 0x403 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C2
   {"vprotq",    0x1005, 0x30000, 0x52  , 0x1404, 0x404 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C3
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C4
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C5
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C6
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C7
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C8
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) C9
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) CA
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) CB
   {"vpcomb",    0x1005, 0xB0000, 0x59  , 0x1401, 0x1401, 0x401 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) CC
   {"vpcomw",    0x1005, 0xB0000, 0x59  , 0x1402, 0x1402, 0x402 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) CD
   {"vpcomd",    0x1005, 0xB0000, 0x59  , 0x1403, 0x1403, 0x403 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) CE
   {"vpcomq",    0x1005, 0xB0000, 0x59  , 0x1404, 0x1404, 0x404 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) CF

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D0
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D1
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D2
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D3
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D4
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D5
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D6
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D7
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D8
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) D9
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) DA
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) DB
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) DC
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) DD
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) DE
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) DF

   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E0
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E1
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E2
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E3
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E4
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E5
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E6
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E7
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E8
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) E9
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) EA
   {null,           0x0   , 0x0    , 0x2059, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(8) EB
   {"vpcomub",   0x1005, 0xB0000, 0x59  , 0x1401, 0x1401, 0x401 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) EC
   {"vpcomuw",   0x1005, 0xB0000, 0x59  , 0x1402, 0x1402, 0x402 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) ED
   {"vpcomud",   0x1005, 0xB0000, 0x59  , 0x1403, 0x1403, 0x403 , 0x31  , 0x0   , 0x0   , 0x0   },    // XOP(8) EE
   {"vpcomuq",   0x1005, 0xB0000, 0x59  , 0x1404, 0x1404, 0x404 , 0x31  , 0x0   , 0x0   , 0x0   }];   // XOP(8) EF


// Opcode map for AMD instructions with XOP prefix and mmmmm = 01001
// Indexed by first opcode byte after XOP prefix. Has no immediate data
ДефОпКода КартаОпКодов65[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 00
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 01
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 02
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 03
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 04
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 05
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 06
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 07
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 08
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 09
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 0A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 0B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 0C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 0D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 0E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 0F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 10
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 11
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 12
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 13
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 14
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 15
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 16
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 17
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 18
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 19
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 1A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 1B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 1C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 1D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 1E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 1F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 20
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 21
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 22
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 23
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 24
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 25
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 26
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 27
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 28
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 29
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 2A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 2B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 2C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 2D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 2E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 2F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 30
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 31
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 32
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 33
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 34
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 35
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 36
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 37
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 38
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 39
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 3A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 3B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 3C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 3D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 3E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 3F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 40
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 41
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 42
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 43
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 44
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 45
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 46
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 47
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 48
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 49
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 4A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 4B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 4C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 4D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 4E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 4F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 50
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 51
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 52
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 53
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 54
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 55
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 56
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 57
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 58
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 59
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 5A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 5B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 5C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 5D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 5E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 5F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 60
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 61
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 62
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 63
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 64
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 65
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 66
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 67
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 68
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 69
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 6A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 6B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 6C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 6D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 6E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 6F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 70
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 71
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 72
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 73
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 74
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 75
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 76
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 77
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 78
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 79
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 7A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 7B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 7C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 7D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 7E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 7F

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"frczps",    0x11005,0x70000, 0x12  , 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 80
   {"frczpd",    0x11005,0x70000, 0x12  , 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 81
   {"frczss",    0x11005,0x70000, 0x12  , 0x124B, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 82
   {"frczsd",    0x11005,0x70000, 0x12  , 0x124C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 83
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 84
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 85
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 86
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 87
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 88
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 89
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 8A
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 8B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 8C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 8D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 8E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 8F

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"vprotb",    0x1005, 0xB5000, 0x19  , 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 90
   {"vprotw",    0x1005, 0xB5000, 0x19  , 0x1402, 0x402 , 0x402 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 91
   {"vprotd",    0x1005, 0xB5000, 0x19  , 0x1403, 0x403 , 0x403 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 92
   {"vprotq",    0x1005, 0xB5000, 0x19  , 0x1404, 0x404 , 0x404 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 93
   {"vpshlb",    0x1005, 0xB5000, 0x19  , 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 94
   {"vpshlw",    0x1005, 0xB5000, 0x19  , 0x1402, 0x402 , 0x402 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 95
   {"vpshld",    0x1005, 0xB5000, 0x19  , 0x1403, 0x403 , 0x403 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 96
   {"vpshlq",    0x1005, 0xB5000, 0x19  , 0x1404, 0x404 , 0x404 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 97
   {"vpshab",    0x1005, 0xB5000, 0x19  , 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 98
   {"vpshaw",    0x1005, 0xB5000, 0x19  , 0x1402, 0x402 , 0x402 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 99
   {"vpshad",    0x1005, 0xB5000, 0x19  , 0x1403, 0x403 , 0x403 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 9A
   {"vpshaq",    0x1005, 0xB5000, 0x19  , 0x1404, 0x404 , 0x404 , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 9B
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 9C
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 9D
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 9E
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) 9F

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A0
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A1
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A2
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A3
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A4
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A5
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A6
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A7
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A8
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) A9
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) AA
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) AB
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) AC
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) AD
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) AE
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) AF

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B0
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B1
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B2
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B3
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B4
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B5
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B6
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B7
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B8
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) B9
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) BA
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) BB
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) BC
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) BD
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) BE
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) BF

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C0
   {"vphaddbw",  0x1005, 0x30000, 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C1
   {"vphaddbd",  0x1005, 0x30000, 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C2
   {"vphaddbq",  0x1005, 0x30000, 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C3
   {null,           0x0   , 0x0    , 0x2019, 0x0,    0x0 ,   0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C4
   {null,           0x0   , 0x0    , 0x2019, 0x0,    0x0 ,   0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C5
   {"vphaddwd",  0x1005, 0x30000, 0x12  , 0x1403, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C6
   {"vphaddwq",  0x1005, 0x30000, 0x12  , 0x1404, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C7
   {null,           0x0   , 0x0    , 0x2019, 0x0,    0x0 ,   0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C8
   {null,           0x0   , 0x0    , 0x2019, 0x0,    0x0 ,   0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) C9
   {null,           0x0   , 0x0    , 0x2019, 0x0,    0x0 ,   0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) CA
   {"vphadddq",  0x1005, 0x30000, 0x12  , 0x1404, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) CB
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) CC
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) CD
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) CE
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) CF

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D0
   {"vphaddubw", 0x1005, 0x30000, 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D1
   {"vphaddubd", 0x1005, 0x30000, 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D2
   {"vphaddubq", 0x1005, 0x30000, 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D3
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D3
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D4
   {"vphadduwd", 0x1005, 0x30000, 0x12  , 0x1403, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D6
   {"vphadduwq", 0x1005, 0x30000, 0x12  , 0x1404, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D7
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D7
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D8
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) D9
   {"vphaddudq", 0x1005, 0x30000, 0x12  , 0x1404, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) DB
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) DC
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) DD
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) DE
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) DF

   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E0
   {"vphsubbw",  0x1005, 0x30000, 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E1
   {"vphsubwd",  0x1005, 0x30000, 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E2
   {"vphsubdq",  0x1005, 0x30000, 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E3
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E4
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E5
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E6
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E7
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E8
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) E9
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) EA
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) EB
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) EC
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) ED
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // XOP(9) EE
   {null,           0x0   , 0x0    , 0x2019, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // XOP(9) EF


// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 24
// Indexed by third opcode byte
// AMD SSE5 instructions with three or four operands

//************************* NOTE ***********************
//  These proposed codes have never been implemented. 
//  Specifications have been changed for the sake of compatibility with Intel AVX coding scheme
// *****************************************************
ДефОпКода КартаОпКодов66[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"fmaddps",   0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 00
   {"fmaddpd",   0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 01
   {"fmaddss",   0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 02
   {"fmaddsd",   0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 03
   {"fmaddps",   0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 04
   {"fmaddpd",   0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 05
   {"fmaddss",   0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 06
   {"fmaddsd",   0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 07
   {"fmsubps",   0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 08
   {"fmsubpd",   0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 09
   {"fmsubss",   0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 0A
   {"fmsubsd",   0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 0B
   {"fmsubps",   0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 0C
   {"fmsubpd",   0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 0D
   {"fmsubss",   0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 0E
   {"fmsubsd",   0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 0F

   {"fnmaddps",  0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 10
   {"fnmaddpd",  0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 11
   {"fnmaddss",  0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 12
   {"fnmaddsd",  0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 13
   {"fnmaddps",  0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 14
   {"fnmaddpd",  0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 15
   {"fnmaddss",  0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 16
   {"fnmaddsd",  0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 17
   {"fnmsubps",  0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 18
   {"fnmsubpd",  0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 19
   {"fnmsubss",  0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 1A
   {"fnmsubsd",  0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 1B
   {"fnmsubps",  0x21006,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 1C
   {"fnmsubpd",  0x21006,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 1D
   {"fnmsubss",  0x21006,0x0    , 0x15  , 0x104B, 0x4B  , 0x4B  , 0x4B  , 0x0   , 0x0   , 0x0   },    // 0F 24 1E
   {"fnmsubsd",  0x21006,0x0    , 0x15  , 0x104C, 0x4C  , 0x4C  , 0x4C  , 0x0   , 0x0   , 0x0   },    // 0F 24 1F

   {"permps",    0x21005,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 20
   {"permpd",    0x21005,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 21
   {"pcmov",     0x21005,0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 22
   {"pperm",     0x21005,0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 23
   {"permps",    0x21005,0x0    , 0x15  , 0x124B, 0x24B , 0x24B , 0x24B , 0x0   , 0x0   , 0x0   },    // 0F 24 24
   {"permpd",    0x21005,0x0    , 0x15  , 0x124C, 0x24C , 0x24C , 0x24C , 0x0   , 0x0   , 0x0   },    // 0F 24 25
   {"pcmov",     0x21005,0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 26
   {"pperm",     0x21005,0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 27

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 28
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 29
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 2A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 2B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 2C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 2D
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 2E
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 2F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 30
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 31
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 32
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 33
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 34
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 35
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 36
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 37
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 38
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 39
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 3A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 3B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 3C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 3D
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 3E
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 3F

   {"protb",     0x21005,0x0    , 0x14  , 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 40
   {"protw",     0x21005,0x0    , 0x14  , 0x1402, 0x402 , 0x402 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 41
   {"protd",     0x21005,0x0    , 0x14  , 0x1403, 0x403 , 0x403 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 42
   {"protq",     0x21005,0x0    , 0x14  , 0x1404, 0x404 , 0x404 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 43
   {"pshlb",     0x21005,0x0    , 0x14  , 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 44
   {"pshlw",     0x21005,0x0    , 0x14  , 0x1402, 0x402 , 0x402 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 45
   {"pshld",     0x21005,0x0    , 0x14  , 0x1403, 0x403 , 0x403 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 46
   {"pshlq",     0x21005,0x0    , 0x14  , 0x1404, 0x404 , 0x404 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 47
   {"pshab",     0x21005,0x0    , 0x14  , 0x1401, 0x401 , 0x401 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 48
   {"pshaw",     0x21005,0x0    , 0x14  , 0x1402, 0x402 , 0x402 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 49
   {"pshad",     0x21005,0x0    , 0x14  , 0x1403, 0x403 , 0x403 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 4A
   {"pshaq",     0x21005,0x0    , 0x14  , 0x1404, 0x404 , 0x404 , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 24 4B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 4C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 4D
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 4E
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 4F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 50
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 51
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 52
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 53
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 54
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 55
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 56
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 57
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 58
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 59
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 5A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 5B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 5C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 5D
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 5E
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 5F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 60
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 61
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 62
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 63
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 64
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 65
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 66
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 67
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 68
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 69
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 6A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 6B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 6C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 6D
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 6E
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 6F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 70
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 71
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 72
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 73
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 74
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 75
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 76
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 77
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 78
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 79
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 7A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 7B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 7C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 7D
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 7E
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 7F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 80
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 81
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 82
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 83
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 84
   {"pmacssww",  0x21005,0x0    , 0x15  , 0x1402, 0x402 , 0x402 , 0x402 , 0x0   , 0x0   , 0x0   },    // 0F 24 85
   {"pmacsswd",  0x21005,0x0    , 0x15  , 0x1403, 0x402 , 0x402 , 0x402 , 0x0   , 0x0   , 0x0   },    // 0F 24 86
   {"pmacssdql", 0x21005,0x0    , 0x15  , 0x1404, 0x403 , 0x403 , 0x403 , 0x0   , 0x0   , 0x0   },    // 0F 24 87
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 88
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 89
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 8A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 8B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 8C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 8D
   {"pmacssdd",  0x21005,0x0    , 0x15  , 0x1403, 0x403 , 0x403 , 0x403 , 0x0   , 0x0   , 0x0   },    // 0F 24 8E
   {"pmacssdqh", 0x21005,0x0    , 0x15  , 0x1404, 0x403 , 0x403 , 0x403 , 0x0   , 0x0   , 0x0   },    // 0F 24 8F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 90
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 91
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 92
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 93
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 94
   {"pmacsww",   0x21005,0x0    , 0x15  , 0x1402, 0x402 , 0x402 , 0x402 , 0x0   , 0x0   , 0x0   },    // 0F 24 95
   {"pmacswd",   0x21005,0x0    , 0x15  , 0x1403, 0x402 , 0x402 , 0x402 , 0x0   , 0x0   , 0x0   },    // 0F 24 96
   {"pmacsdql",  0x21005,0x0    , 0x15  , 0x1404, 0x403 , 0x403 , 0x403 , 0x0   , 0x0   , 0x0   },    // 0F 24 97
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 98
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 99
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 9A
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 9B
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 9C
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 9D
   {"pmacsdd",   0x21005,0x0    , 0x15  , 0x1403, 0x403 , 0x403 , 0x403 , 0x0   , 0x0   , 0x0   },    // 0F 24 9E
   {"pmacsdqh",  0x21005,0x0    , 0x15  , 0x1404, 0x403 , 0x403 , 0x403 , 0x0   , 0x0   , 0x0   },    // 0F 24 9F

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A0
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A1
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A2
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A3
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A4
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A5
   {"pmadcsswd", 0x21005,0x0    , 0x15  , 0x1403, 0x402 , 0x402 , 0x402 , 0x0   , 0x0   , 0x0   },    // 0F 24 A6
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A7
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A8
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 A9
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 AA
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 AB
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 AC
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 AD
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 AE
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 AF

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B0
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B1
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B2
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B3
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B4
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B5
   {"pmadcswd",  0x21005,0x0    , 0x15  , 0x1403, 0x402 , 0x402 , 0x402 , 0x0   , 0x0   , 0x0   },    // 0F 24 B6
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B7
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B8
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 B9
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 BA
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 BB
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 BC
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 BD
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 BE
   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   },    // 0F 24 BF

   {null,           0x0   , 0x0    , 0x15  , 0x1450, 0x450 , 0x450 , 0x450 , 0x0   , 0x0   , 0x0   }];   // 0F 24 C0+. Reserved for future opcodes

// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 25
// Indexed by third opcode byte
// AMD SSE5 instructions with three operands + immediate byte
ДефОпКода КартаОпКодов67[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 00
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 01
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 02
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 03
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 04
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 05
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 06
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 07
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 08
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 09
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 0A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 0B
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 0C
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 0D
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 0E
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 0F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 10
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 11
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 12
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 13
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 14
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 15
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 16
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 17
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 18
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 19
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 1A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 1B
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 1C
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 1D
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 1E
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 1F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 20
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 21
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 22
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 23
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 24
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 25
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 26
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 27
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 28
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 29
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 2A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 2B
   {"comps",     0x21005,0x0    , 0x54  , 0x124B, 0x24B , 0x24B , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 2C
   {"compd",     0x21005,0x0    , 0x54  , 0x124C, 0x24C , 0x24C , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 2D
   {"comss",     0x21005,0x0    , 0x54  , 0x104B, 0x4B  , 0x4B  , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 2E
   {"comsd",     0x21005,0x0    , 0x54  , 0x104C, 0x4C  , 0x4C  , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 2F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 30
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 31
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 32
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 33
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 34
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 35
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 36
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 37
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 38
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 39
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 3A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 3B
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 3C
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 3D
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 3E
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 3F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 40
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 41
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 42
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 43
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 44
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 45
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 46
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 47
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 48
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 49
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 4A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 4B
   {"pcomb",     0x21005,0x0    , 0x54  , 0x1401, 0x401 , 0x401 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 4C
   {"pcomw",     0x21005,0x0    , 0x54  , 0x1402, 0x402 , 0x402 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 4D
   {"pcomd",     0x21005,0x0    , 0x54  , 0x1403, 0x403 , 0x403 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 4E
   {"pcomq",     0x21005,0x0    , 0x54  , 0x1404, 0x404 , 0x404 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 4F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 50
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 51
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 52
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 53
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 54
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 55
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 56
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 57
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 58
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 59
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 5A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 5B
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 5C
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 5D
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 5E
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 5F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 60
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 61
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 62
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 63
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 64
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 65
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 66
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 67
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 68
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 69
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 6A
   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 6B
   {"pcomub",    0x21005,0x0    , 0x54  , 0x1401, 0x401 , 0x401 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 6C
   {"pcomuw",    0x21005,0x0    , 0x54  , 0x1402, 0x402 , 0x402 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 6D
   {"pcomud",    0x21005,0x0    , 0x54  , 0x1403, 0x403 , 0x403 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 6E
   {"pcomuq",    0x21005,0x0    , 0x54  , 0x1404, 0x404 , 0x404 , 0x31  , 0x0   , 0x0   , 0x0   },    // 0F 25 6F

   {null,           0x0   , 0x0    , 0x54  , 0x1450, 0x450 , 0x450 , 0x31  , 0x0   , 0x0   , 0x0   }];   // 0F 25 70+. Reserved for future opcodes

// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 7A
// Indexed by third opcode byte
// AMD SSE5 instructions with two operands
ДефОпКода КартаОпКодов68[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 00
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 01
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 02
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 03
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 04
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 05
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 06
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 07
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 08
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 09
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 0A
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 0B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 0C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 0D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 0E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 0F

   {"frczps",    0x21005,0x0    , 0x12  , 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 10
   {"frczpd",    0x21005,0x0    , 0x12  , 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 11
   {"frczss",    0x21005,0x0    , 0x12  , 0x104B, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 12
   {"frczsd",    0x21005,0x0    , 0x12  , 0x104C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 13
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 14
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 15
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 16
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 17
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 18
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 19
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 1A
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 1B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 1C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 1D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 1E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 1F

   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 20
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 21
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 22
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 23
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 24
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 25
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 26
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 27
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 28
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 29
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 2A
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 2B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 2C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 2D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 2E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 2F

   {"cvtph2ps",  0x21007,0x0    , 0x12  , 0x124B, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 30
   {"cvtps2ph",  0x21007,0x0    , 0x13  , 0x402,  0x124B, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 31
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 32
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 33
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 34
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 35
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 36
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 37
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 38
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 39
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 3A
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 3B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 3C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 3D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 3E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 3F

   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 40
   {"phaddbw",   0x21005,0x0    , 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 41
   {"phaddbd",   0x21005,0x0    , 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 42
   {"phaddbq",   0x21005,0x0    , 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 43
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 44
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 45
   {"phaddwd",   0x21005,0x0    , 0x12  , 0x1403, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 46
   {"phaddwq",   0x21005,0x0    , 0x12  , 0x1404, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 47
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 48
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 49
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 4A
   {"phadddq",   0x21005,0x0    , 0x12  , 0x1404, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 4B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 4C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 4D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 4E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 4F

   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 50
   {"phaddubw",  0x21005,0x0    , 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 51
   {"phaddubd",  0x21005,0x0    , 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 52
   {"phaddubq",  0x21005,0x0    , 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 53
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 54
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 55
   {"phadduwd",  0x21005,0x0    , 0x12  , 0x1403, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 56
   {"phadduwq",  0x21005,0x0    , 0x12  , 0x1404, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 57
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 58
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 59
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 5A
   {"phaddudq",  0x21005,0x0    , 0x12  , 0x1404, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 5B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 5C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 5D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 5E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 5F

   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 60
   {"phsubbw",   0x21005,0x0    , 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 61
   {"phsubwd",   0x21005,0x0    , 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 62
   {"phsubdq",   0x21005,0x0    , 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 63
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 64
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 65
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 66
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 67
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 68
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 69
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 6A
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 6B
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 6C
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 6D
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 6E
   {null,           0x0   , 0x0    , 0x12  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 7A 6F

// Tertiary opcode map for 3-byte opcode. First two bytes = 0F 7B
// Indexed by third opcode byte
// AMD SSE5 instructions with two operands and an immediate byte operand
ДефОпКода КартаОпКодов69[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 00
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 01
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 02
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 03
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 04
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 05
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 06
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 07
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 08
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 09
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 0A
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 0B
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 0C
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 0D
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 0E
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 0F

   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 10
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 11
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 12
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 13
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 14
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 15
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 16
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 17
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 18
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 19
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 1A
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 1B
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 1C
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 1D
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 1E
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 1F

   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 20
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 21
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 22
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 23
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 24
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 25
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 26
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 27
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 28
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 29
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 2A
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 2B
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 2C
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 2D
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 2E
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 2F

   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 30
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 31
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 32
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 33
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 34
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 35
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 36
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 37
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 38
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 39
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 3A
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 3B
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 3C
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 3D
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 3E
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 3F

   {"protb"  ,   0x21005,0x0    , 0x52  , 0x1401, 0x401 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 40
   {"protw"  ,   0x21005,0x0    , 0x52  , 0x1402, 0x402 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 41
   {"protd"  ,   0x21005,0x0    , 0x52  , 0x1403, 0x403 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 42
   {"protq"  ,   0x21005,0x0    , 0x52  , 0x1404, 0x404 , 0x21  , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7A 43
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 44
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 45
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 46
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 47
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 48
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 49
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 4A
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 4B
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 4C
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 4D
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 4E
   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 7B 4F

   {null,           0x0   , 0x0    , 0x52  , 0x1450, 0x450 , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // 0F 7B 50+


// Tertiary opcode map for movnt. Opcode byte = 0F 2B
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов6A[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movntps",   0x11  , 0x50000, 0x13  , 0x224B, 0x124B, 0x0   , 0x0   , 0x0   , 0x0   , 0x102 },    // 0F 2B. movntps
   {"movntpd",   0x12  , 0x50200, 0x13  , 0x224C, 0x124C, 0x0   , 0x0   , 0x0   , 0x0   , 0x102 },    // 66 0F 2B. movntpd
   {"movntsd",   0x1004, 0x800  , 0x13  , 0x204C, 0x104C, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 2B. movntsd (AMD only)
   {"movntss",   0x1004, 0x400  , 0x13  , 0x204B, 0x104B, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F 2B. movntss (AMD only)

// Tertiary opcode map for bsr and lzcnt. Opcode byte = 0F BD
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов6B[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"bsr",       0x3   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BD. bsr
   {"bsr",       0x3   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BD. not allowed
   {"bsr",       0x3   , 0x1100 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F BD. not allowed
   {"lzcnt",     0x1004, 0x1500 , 0x12  , 0x1009, 0x9   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F BD. AMD LZCNT

// Tertiary opcode map for vmread, insrtw, extrq. Opcode byte = 0F 78
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов6C[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"vmread",    0x813 , 0x1000 , 0x13  , 0x4   , 0x1004, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 78. vmread              
   {null,           0x6E  , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // 66 0F 78. link to map 6E: extrq xmm,xmm (AMD SSE4a)
   {"insrtq",    0x1004, 0x800  , 0x32  , 0x1450, 0x1450, 0x11  , 0x11  , 0x0   , 0x0   , 0x0   },    // F2 0F 78. insrtq xmm,xmm,i,i (AMD SSE4a)
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F 78. 

// Tertiary opcode map for vmwrite, insrtw, extrq. Opcode byte = 0F 79
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов6D[4] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"vmwrite",   0x813 , 0x1000 , 0x12  , 0x1004, 0x4   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 79. vmwrite
   {"extrq",     0x1004, 0x200  , 0x12  , 0x1450, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 66 0F 79. link to map 6E: extrq xmm,xmm (AMD SSE4a)
   {"insrtq",    0x1004, 0x800  , 0x12  , 0x1450, 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // F2 0F 79. insrtq xmm,xmm (AMD SSE4a)
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // F3 0F 79. 

// Quarternary opcode map for extrq. Opcode byte = 66 0F 78
// Indexed by reg bits = 0 - 7
ДефОпКода КартаОпКодов6E[] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"extrq",     0x1004, 0x200  , 0x31  , 0x1450, 0x11  , 0x11  , 0x0   , 0x0   , 0x0   , 0x0   },    // 66 0F 78. extrq xmm,i,i (AMD SSE4a)
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // reg bits must be 0

// Submap for movq xmm/m64,xmm. Opcode byte = 66 0F D6
// Indexed by memory vs. register operand
   ДефОпКода КартаОпКодов6F[2] = [
   {"movq",      0x12  , 0x10200, 0x13  , 0x4   , 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // movq m64,xmm
   {"movq",      0x12  , 0x10200, 0x13  , 0x450 , 0x1450, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // movq xmm,xmm

// Submap for movddup. Opcode byte = 66 0F D6
// Indexed by VEX.L
ДефОпКода КартаОпКодов70[3] = [
   {"movddup",   0x13  , 0x00800, 0x12  , 0x124C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // no VEX prefix
   {"vmovddup",  0x19  , 0x50800, 0x12  , 0x124C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // VEX.L = 0
   {"vmovddup",  0x19  , 0x50800, 0x12  , 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // VEX.L = 1

// Submap for movsd. Opcode byte = F2 0F 10
// Indexed by memory/register operand
ДефОпКода КартаОпКодов71[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"movsd",     0x12  , 0x10800, 0x12  , 0x104C, 0x4C  , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 10 mem
   {"movsd",     0x12  , 0x90800, 0x19  , 0x104C, 0x104C, 0x104C, 0x0   , 0x0   , 0x0   , 0x2   }];   // F2 0F 10 reg

// Submap for movss. Opcode byte = F3 0F 10
// Indexed by memory/register operand
ДефОпКода КартаОпКодов72[2] = [
   {"movss",     0x12  , 0x10400,  0x12  , 0x104B, 0x4B  , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F3 0F 10 mem
   {"movss",     0x12  , 0x90400,  0x19  , 0x104B, 0x104B, 0x104B, 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 10 reg

// Submap for movsd. Opcode byte = F2 0F 11
// Indexed by memory/register operand
ДефОпКода КартаОпКодов73[2] = [
   {"movsd",     0x12  , 0x10800, 0x13  , 0x4C  , 0x104C, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 11 mem
   {"movsd",     0x12  , 0x90800, 0x19  , 0x104C, 0x104C, 0x104C, 0x0   , 0x0   , 0x0   , 0x2   }];   // F2 0F 11 reg

// Submap for movss. Opcode byte = F3 0F 11
// Indexed by memory/register operand
ДефОпКода КартаОпКодов74[2] = [
   {"movss",     0x12  , 0x10400, 0x13  , 0x4B  , 0x104B, 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // F3 0F 11 mem
   {"movss",     0x12  , 0x90400, 0x19  , 0x104B, 0x104B, 0x104B, 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 11 reg

// Submap for pinsrd/pinsrq. Opcode byte = 0F 3A 22
// Indexed by operand size
ДефОпКода КартаОпКодов75[3] = [
   {"pinsrd",    0x15  , 0x99200, 0x59  , 0x1403, 0x1403, 0x3   , 0x11  , 0x0   , 0x0   , 0x2   },    // (16 bit). 66 prefix actually is 32 bits
   {"pinsrd",    0x15  , 0x99200, 0x59  , 0x1403, 0x1403, 0x3   , 0x11  , 0x0   , 0x0   , 0x2   },    // 32 bit
   {"pinsrq",    0x15  , 0x99200, 0x59  , 0x1404, 0x1404, 0x4   , 0x11  , 0x0   , 0x0   , 0x2   }];   // 64 bit. REX.W prefix

// Submap for sqrtps/pd/sd/ss. Opcode byte = 0F 51
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов76[4] = [
   {"sqrtps",    0x11  , 0x50E00, 0x12  , 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    //    0F 51. sqrtps
   {"sqrtpd",    0x11  , 0x50E00, 0x12  , 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 66 0F 51. sqrtpd
   {"sqrtsd",    0x11  , 0x90E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x2   },    // F2 0F 51. sqrtsd
   {"sqrtss",    0x11  , 0x90E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 51. sqrtss

// Submap for rsqrtps/ss. Opcode byte = 0F 52
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов77[4] = [
   {"rsqrtps",   0x11  , 0x50E00, 0x12  , 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 52. rsqrtps
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // illegal
   {"rsqrtss",   0x11  , 0x90E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 52. rsqrtss

// Submap for rcpps/ss. Opcode byte = 0F 53
// Indexed by prefix = none, 66, F2, F3
ДефОпКода КартаОпКодов78[4] = [
   {"rcpps",     0x11  , 0x50E00, 0x12  , 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 53. rcpps
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // illegal
   {null,           0x0   , 0x0    , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   , 0x0   },    // illegal
   {"rcpss",     0x11  , 0x90E00, 0x19  , 0x124F, 0x124F, 0x24F , 0x0   , 0x0   , 0x0   , 0x2   }];   // F3 0F 53. rcpss

// Submap for emms/vzeroupper/vzeroall. Opcode byte = 0F 77
// Indexed by VEX prefix and VEX.L
ДефОпКода КартаОпКодов79[3] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"emms",      0x7   , 0x0    , 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // 0F 77
   {"vzeroupper",0x19  , 0x10000, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },    // VEX 0F 77, L=0
   {"vzeroall",  0x19  , 0x50000, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }];   // VEX 0F 77, L=1

// Submap for pmovsxbw. Opcode byte = 0F 38 20. Indexed by memory/register operand
ДефОпКода КартаОпКодов7A[2] = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pmovsxbw",  0x15  , 0x18200, 0x12  , 0x1402, 0x301 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 20 mem
   {"pmovsxbw",  0x15  , 0x18200, 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 20 reg

// Submap for pmovsxbd. Opcode byte = 0F 38 21. Indexed by memory/register operand
ДефОпКода КартаОпКодов7B[2] = [
   {"pmovsxbd",  0x15  , 0x18200, 0x12  , 0x1403, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 21 mem
   {"pmovsxbd",  0x15  , 0x18200, 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 21 reg

// Submap for pmovsxbq. Opcode byte = 0F 38 22. Indexed by memory/register operand
ДефОпКода КартаОпКодов7C[2] = [
   {"pmovsxbq",  0x15  , 0x18200, 0x12  , 0x1404, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 22 mem
   {"pmovsxbq",  0x15  , 0x18200, 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 22 reg

// Submap for pmovsxwd. Opcode byte = 0F 38 23. Indexed by memory/register operand
ДефОпКода КартаОпКодов7D[2] = [
   {"pmovsxwd",  0x15  , 0x18200, 0x12  , 0x1403, 0x302 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 23 mem
   {"pmovsxwd",  0x15  , 0x18200, 0x12  , 0x1403, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 23 reg

// Submap for pmovsxwq. Opcode byte = 0F 38 24. Indexed by memory/register operand
ДефОпКода КартаОпКодов7E[2] = [
   {"pmovsxwq",  0x15  , 0x18200, 0x12  , 0x1404, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 24 mem
   {"pmovsxwq",  0x15  , 0x18200, 0x12  , 0x1404, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 24 reg

// Submap for pmovsxdq. Opcode byte = 0F 38 25. Indexed by memory/register operand
ДефОпКода КартаОпКодов7F[2] = [
   {"pmovsxdq",  0x15  , 0x18200, 0x12  , 0x1404, 0x303 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 25 mem
   {"pmovsxdq",  0x15  , 0x18200, 0x12  , 0x1404, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 25 reg

// Submap for pmovzxbw. Opcode byte = 0F 38 30. Indexed by memory/register operand
ДефОпКода КартаОпКодов80[2] = [
   {"pmovzxbw",  0x15  , 0x18200, 0x12  , 0x1402, 0x301 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 30 mem
   {"pmovzxbw",  0x15  , 0x18200, 0x12  , 0x1402, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 30 reg

// Submap for pmovzxbd. Opcode byte = 0F 38 31. Indexed by memory/register operand
ДефОпКода КартаОпКодов81[2] = [
   {"pmovzxbd",  0x15  , 0x18200, 0x12  , 0x1403, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 31 mem
   {"pmovzxbd",  0x15  , 0x18200, 0x12  , 0x1403, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 31 reg

// Submap for pmovzxbq. Opcode byte = 0F 38 32. Indexed by memory/register operand
ДефОпКода КартаОпКодов82[2] = [
   {"pmovzxbq",  0x15  , 0x18200, 0x12  , 0x1404, 0x2   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 32 mem
   {"pmovzxbq",  0x15  , 0x18200, 0x12  , 0x1404, 0x401 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 32 reg

// Submap for pmovzxwd. Opcode byte = 0F 38 33. Indexed by memory/register operand
ДефОпКода КартаОпКодов83[2] = [
   {"pmovzxwd",  0x15  , 0x18200, 0x12  , 0x1403, 0x302 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 33 mem
   {"pmovzxwd",  0x15  , 0x18200, 0x12  , 0x1403, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 33 reg

// Submap for pmovzxwq. Opcode byte = 0F 38 34. Indexed by memory/register operand
ДефОпКода КартаОпКодов84[2] = [
   {"pmovzxwq",  0x15  , 0x18200, 0x12  , 0x1404, 0x3   , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 34 mem
   {"pmovzxwq",  0x15  , 0x18200, 0x12  , 0x1404, 0x402 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 34 reg

// Submap for pmovzxwq. Opcode byte = 0F 38 35. Indexed by memory/register operand
ДефОпКода КартаОпКодов85[2] = [
   {"pmovzxdq",  0x15  , 0x18200, 0x12  , 0x1404, 0x303 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   },    // 0F 38 35 mem
   {"pmovzxdq",  0x15  , 0x18200, 0x12  , 0x1404, 0x403 , 0x0   , 0x0   , 0x0   , 0x0   , 0x2   }];   // 0F 38 35 reg

// Submap for xlat. Opcode byte = D7. Indexed by assembly syntax: 0=MASM, 1=NASM/YASM, 2=GAS
ДефОпКода КартаОпКодов86[3] = [
   {"xlat",      0x0   , 0x5    , 0x1   , 0x0   , 0x20C0, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // D7
   {"xlatb",     0x0   , 0x5    , 0x1   , 0x0   , 0x20C0, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   },    // D7
   {"xlat",      0x0   , 0x5    , 0x1   , 0x0   , 0x20C0, 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }];   // D7


// Submaps for FMA instructions

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
// Submap for 0F 38 98: vfmadd132pd, vfmadd132ps
ДефОпКода КартаОпКодов87[2] = [
   {"vfmadd132ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmadd132pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 A8: vfmadd213pd, vfmadd213ps
ДефОпКода КартаОпКодов88[2] = [
   {"vfmadd213ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmadd213pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 B8: vfmadd231pd, vfmadd231ps
ДефОпКода КартаОпКодов89[2] = [
   {"vfmadd231ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmadd231pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 99: vfmadd132sd, vfmadd132ss
ДефОпКода КартаОпКодов8A[2] = [
   {"vfmadd132ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmadd132sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 A9: vfmadd213sd, vfmadd213ss
ДефОпКода КартаОпКодов8B[2] = [
   {"vfmadd213ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmadd213sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 B9: vfmadd231sd, vfmadd231ss
ДефОпКода КартаОпКодов8C[2] = [
   {"vfmadd231ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmadd231sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
// Submap for 0F 38 96: vfmaddsub132ps, vfmaddsub132pd
ДефОпКода КартаОпКодов8D[2] = [
   {"vfmaddsub132ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmaddsub132pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 A6: vfmaddsub213pd, vfmaddsub213ps
ДефОпКода КартаОпКодов8E[2] = [
   {"vfmaddsub213ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmaddsub213pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 B6: vfmaddsub231pd, vfmaddsub231ps
ДефОпКода КартаОпКодов8F[2] = [
   {"vfmaddsub231ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmaddsub231pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
// Submap for 0F 38 97: vfmsubadd132pd, vfmsubadd132ps
ДефОпКода КартаОпКодов90[2] = [
   {"vfmsubadd132ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsubadd132pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 A7: vfmsubadd213pd, vfmsubadd213ps
ДефОпКода КартаОпКодов91[2] = [
   {"vfmsubadd213ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsubadd213pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 B7: vfmsubadd231pd, vfmsubadd231ps
ДефОпКода КартаОпКодов92[2] = [
   {"vfmsubadd231ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsubadd231pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
// Submap for 0F 38 9A: vfmsub132pd, vfmsub132ps
ДефОпКода КартаОпКодов93[2] = [
   {"vfmsub132ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsub132pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 AA: vfmsub213pd, vfmsub213ps
ДефОпКода КартаОпКодов94[2] = [
   {"vfmsub213ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsub213pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 BA: vfmsub231pd, vfmsub231ps
ДефОпКода КартаОпКодов95[2] = [
   {"vfmsub231ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsub231pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 99: vfmsub132sd, vfmsub132ss
ДефОпКода КартаОпКодов96[2] = [
   {"vfmsub132ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsub132sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 A9: vfmsub213sd, vfmsub213ss
ДефОпКода КартаОпКодов97[2] = [
   {"vfmsub213ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsub213sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 B9: vfmsub231sd, vfmsub231ss
ДефОпКода КартаОпКодов98[2] = [
   {"vfmsub231ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfmsub231sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
// Submap for 0F 38 9C: vfnmadd132pd, vfnmadd132ps
ДефОпКода КартаОпКодов99[2] = [
   {"vfnmadd132ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmadd132pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 AC: vfnmadd213pd, vfnmadd213ps
ДефОпКода КартаОпКодов9A[2] = [
   {"vfnmadd213ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmadd213pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 BC: vfnmadd231pd, vfnmadd231ps
ДефОпКода КартаОпКодов9B[2] = [
   {"vfnmadd231ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmadd231pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 9D: vfnmadd132sd, vfnmadd132ss
ДефОпКода КартаОпКодов9C[2] = [
   {"vfnmadd132ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmadd132sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 AD: vfnmadd213sd, vfnmadd213ss
ДефОпКода КартаОпКодов9D[2] = [
   {"vfnmadd213ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmadd213sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 BD: vfnmadd231sd, vfnmadd231ss
ДефОпКода КартаОпКодов9E[2] = [
   {"vfnmadd231ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmadd231sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
// Submap for 0F 38 9E: vnfmsub132pd, vnfmsub132ps
ДефОпКода[2] КартаОпКодов9F = [
   {"vfnmsub132ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmsub132pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 AE: vnfmsub213pd, vnfmsub213ps
ДефОпКода[2] КартаОпКодовA0 = [
   {"vfnmsub213ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmsub213pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 BE: vfnmsub231pd, vfnmsub231ps
ДефОпКода[2] КартаОпКодовA1 = [
   {"vfnmsub231ps",0x1A ,0xF9200 , 0x19,   0x124B, 0x124B, 0x24B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmsub231pd",0x1A ,0xF9200 , 0x19,   0x124C, 0x124C, 0x24C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 9F: vfnmsub132sd, vfnmsub132ss
ДефОпКода[2] КартаОпКодовA2 = [
   {"vfnmsub132ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmsub132sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 AF: vfnmsub213sd, vfnmsub213ss
ДефОпКода[2] КартаОпКодовA3 = [
   {"vfnmsub213ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmsub213sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Submap for 0F 38 BF: vfnmsub231sd, vfnmsub231ss
ДефОпКода[2] КартаОпКодовA4 = [
   {"vfnmsub231ss",0x1A ,0xB9200 , 0x19,   0x144B, 0x144B, 0x44B , 0x0   , 0x0   , 0x0   , 0x0   },    // W0
   {"vfnmsub231sd",0x1A ,0xB9200 , 0x19,   0x144C, 0x144C, 0x44C , 0x0   , 0x0   , 0x0   , 0x0   }];   // W1

// Quarternary opcode map for pinsrb. Opcode byte = 0F 3A 20
// Indexed by memory vs. register operand
ДефОпКода[2] КартаОпКодовA5 = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"pinsrb",    0x15  , 0x98200, 0x59  , 0x1401, 0x1401, 0x2001, 0x31  , 0x0   , 0x0   , 0x2   },   // 0F 3A 20 memory 8
   {"pinsrb",    0x15  , 0x98200, 0x59  , 0x1401, 0x1401, 0x1003, 0x31  , 0x0   , 0x0   , 0x2   }];  // 0F 3A 20 register 32

// Opcode map for VIA instructions. Opcode byte = 0F A6 ..
// Indexed by mod and reg fields of mod/reg/rm byte
ДефОпКода[] КартаОпКодовA6 = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=0
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=1
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=2
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=3
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=4
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=5
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=6
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6, mod<3, reg=7
   {null,           0xA8  , 0      , 0     , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },  // 0F A6, mod=3, reg=0. Link to MONTMUL
   {null,           0xA9  , 0      , 0     , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },  // 0F A6, mod=3, reg=1. Link to XSHA
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }]; // 0F A6, mod=3, reg=2

// Opcode map for VIA instructions. Opcode byte = 0F A7 ..
// Indexed by mod and reg fields of mod/reg/rm byte
ДефОпКода[] КартаОпКодовA7 = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=0
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=1
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=2
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=3
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=4
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=5
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=6
   {null,           0x0   , 0      , 0x12  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7, mod<3, reg=7
   {null,           0xAA  , 0      , 0     , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },  // 0F A7, mod=3, reg=0. Link to XSTORE
   {null,           0xAB  , 0      , 0     , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x9   , 0x0   },  // 0F A7, mod=3, reg=1. Link to XCRYPT
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   }]; // 0F A7, mod=3, reg=2

// Opcode map for VIA MONTMUL instruction. Opcode byte = 0F A6 /0
// Indexed by prefixes
ДефОпКода[] КартаОпКодовA8 = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"montmul;VIA",0x2001,1      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6 /0
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 66 0F A6 /0
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // F2 0F A6 /0
   {"rep montmul;VIA",0x2001,0x21,0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }]; // F3 0F A6 /0

// Opcode map for VIA XSHA instruction. Opcode byte = 0F A6 /1
// Indexed by prefixes
ДефОпКода[] КартаОпКодовA9 = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"xsha;VIA",  0x2001, 1      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A6 /1
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 66 0F A6 /1
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // F2 0F A6 /1
   {"rep xsha;VIA",0x2001,0x21  , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }]; // F3 0F A6 /1

// Opcode map for VIA XSTORE instruction. Opcode byte = 0F A7 /0
// Indexed by prefixes
ДефОпКода[] КартаОпКодовAA = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"xstore;VIA",0x2001, 1      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7 /0
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 66 0F A7 /0
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // F2 0F A7 /0
   {"rep xstore;VIA",0x2001,0x21, 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }]; // F3 0F A7 /0

// Opcode map for VIA XCRYPT instruction. Opcode byte = 0F A7 /1
// Indexed by prefixes
ДефОпКода[] КартаОпКодовAB = [
//  name         instset prefix   format  dest.   source1 source2 source3 source4 link    options
   {"xcrypt;VIA",0x2001, 1      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 0F A7 /1
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // 66 0F A7 /1
   {null,           0x0   , 0      , 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x0   },  // F2 0F A7 /1
   {"rep xcrypt;VIA",0x2001,0x21, 0x10  , 0     , 0     , 0x0   , 0x0   , 0x0   , 0x0   , 0x8   }]; // F3 0F A7 /1

/+
/************** Make pointers to all opcode maps ***************************/
  const ДефОпКода*[] ТаблицыОпКодов = [    
   &КартаОпКодов0,  &КартаОпКодов1,  &КартаОпКодов2,  &КартаОпКодов3, 
   &КартаОпКодов4,  &КартаОпКодов5,  &КартаОпКодов6,  &КартаОпКодов7,
   &КартаОпКодов8,  &КартаОпКодов9,  &КартаОпКодовA,  &КартаОпКодовB, 
   &КартаОпКодовC,  &КартаОпКодовD,  &КартаОпКодовE,  &КартаОпКодовF, 
   &КартаОпКодов10, &КартаОпКодов11, &КартаОпКодов12, &КартаОпКодов13,
   &КартаОпКодов14, &КартаОпКодов15, &КартаОпКодов16, &КартаОпКодов17,
   &КартаОпКодов18, &КартаОпКодов19, &КартаОпКодов1A, &КартаОпКодов1B,
   &КартаОпКодов1C, &КартаОпКодов1D, &КартаОпКодов1E, &КартаОпКодов1F,
   &КартаОпКодов20, &КартаОпКодов21, &КартаОпКодов22, &КартаОпКодов23,
   &КартаОпКодов24, &КартаОпКодов25, &КартаОпКодов26, &КартаОпКодов27,
   &КартаОпКодов28, &КартаОпКодов29, &КартаОпКодов2A, &КартаОпКодов2B,
   &КартаОпКодов2C, &КартаОпКодов2D, &КартаОпКодов2E, &КартаОпКодов2F,
   &КартаОпКодов30, &КартаОпКодов31, &КартаОпКодов32, &КартаОпКодов33,
   &КартаОпКодов34, &КартаОпКодов35, &КартаОпКодов36, &КартаОпКодов37,
   &КартаОпКодов38, &КартаОпКодов39, &КартаОпКодов3A, &КартаОпКодов3B,
   &КартаОпКодов3C, &КартаОпКодов3D, &КартаОпКодов3E, &КартаОпКодов3F,
   &КартаОпКодов40, &КартаОпКодов41, &КартаОпКодов42, &КартаОпКодов43,
   &КартаОпКодов44, &КартаОпКодов45, &КартаОпКодов46, &КартаОпКодов47,
   &КартаОпКодов48, &КартаОпКодов49, &КартаОпКодов4A, &КартаОпКодов4B, 
   &КартаОпКодов4C, &КартаОпКодов4D, &КартаОпКодов4E, &КартаОпКодов4F,
   &КартаОпКодов50, &КартаОпКодов51, &КартаОпКодов52, &КартаОпКодов53,
   &КартаОпКодов54, &КартаОпКодов55, &КартаОпКодов56, &КартаОпКодов57,
   &КартаОпКодов58, &КартаОпКодов59, &КартаОпКодов5A, &КартаОпКодов5B,
   &КартаОпКодов5C, &КартаОпКодов5D, &КартаОпКодов5E, &КартаОпКодов5F,
   &КартаОпКодов60, &КартаОпКодов61, &КартаОпКодов62, &КартаОпКодов63,
   &КартаОпКодов64, &КартаОпКодов65, &КартаОпКодов66, &КартаОпКодов67,
   &КартаОпКодов68, &КартаОпКодов69, &КартаОпКодов6A, &КартаОпКодов6B,
   &КартаОпКодов6C, &КартаОпКодов6D, &КартаОпКодов6E, &КартаОпКодов6F, 
   &КартаОпКодов70, &КартаОпКодов71, &КартаОпКодов72, &КартаОпКодов73,
   &КартаОпКодов74, &КартаОпКодов75, &КартаОпКодов76, &КартаОпКодов77, 
   &КартаОпКодов78, &КартаОпКодов79, &КартаОпКодов7A, &КартаОпКодов7B, 
   &КартаОпКодов7C, &КартаОпКодов7D, &КартаОпКодов7E, &КартаОпКодов7F, 
   &КартаОпКодов80, &КартаОпКодов81, &КартаОпКодов82, &КартаОпКодов83, 
   &КартаОпКодов84, &КартаОпКодов85, &КартаОпКодов86, &КартаОпКодов87,
   &КартаОпКодов88, &КартаОпКодов89, &КартаОпКодов8A, &КартаОпКодов8B,
   &КартаОпКодов8C, &КартаОпКодов8D, &КартаОпКодов8E, &КартаОпКодов8F, 
   &КартаОпКодов90, &КартаОпКодов91, &КартаОпКодов92, &КартаОпКодов93, 
   &КартаОпКодов94, &КартаОпКодов95, &КартаОпКодов96, &КартаОпКодов97,
   &КартаОпКодов98, &КартаОпКодов99, &КартаОпКодов9A, &КартаОпКодов9B,
   &КартаОпКодов9C, &КартаОпКодов9D, &КартаОпКодов9E, &КартаОпКодов9F, 
   &КартаОпКодовA0, &КартаОпКодовA1, &КартаОпКодовA2, &КартаОпКодовA3, 
   &КартаОпКодовA4, &КартаОпКодовA5, &КартаОпКодовA6, &КартаОпКодовA7,
   &КартаОпКодовA8, &КартаОпКодовA9, &КартаОпКодовAA, &КартаОпКодовAB 
];

// size of each table pointed to by ТаблицыОпКодов[]
const uint32 OpcodeTableLength[] = [    
   TableSize(КартаОпКодов0),  TableSize(КартаОпКодов1),  TableSize(КартаОпКодов2),  TableSize(КартаОпКодов3), 
   TableSize(КартаОпКодов4),  TableSize(КартаОпКодов5),  TableSize(КартаОпКодов6),  TableSize(КартаОпКодов7), 
   TableSize(КартаОпКодов8),  TableSize(КартаОпКодов9),  TableSize(КартаОпКодовA),  TableSize(КартаОпКодовB), 
   TableSize(КартаОпКодовC),  TableSize(КартаОпКодовD),  TableSize(КартаОпКодовE),  TableSize(КартаОпКодовF),
   TableSize(КартаОпКодов10), TableSize(КартаОпКодов11), TableSize(КартаОпКодов12), TableSize(КартаОпКодов13),
   TableSize(КартаОпКодов14), TableSize(КартаОпКодов15), TableSize(КартаОпКодов16), TableSize(КартаОпКодов17),
   TableSize(КартаОпКодов18), TableSize(КартаОпКодов19), TableSize(КартаОпКодов1A), TableSize(КартаОпКодов1B),
   TableSize(КартаОпКодов1C), TableSize(КартаОпКодов1D), TableSize(КартаОпКодов1E), TableSize(КартаОпКодов1F),
   TableSize(КартаОпКодов20), TableSize(КартаОпКодов21), TableSize(КартаОпКодов22), TableSize(КартаОпКодов23),
   TableSize(КартаОпКодов24), TableSize(КартаОпКодов25), TableSize(КартаОпКодов26), TableSize(КартаОпКодов27),
   TableSize(КартаОпКодов28), TableSize(КартаОпКодов29), TableSize(КартаОпКодов2A), TableSize(КартаОпКодов2B),
   TableSize(КартаОпКодов2C), TableSize(КартаОпКодов2D), TableSize(КартаОпКодов2E), TableSize(КартаОпКодов2F),
   TableSize(КартаОпКодов30), TableSize(КартаОпКодов31), TableSize(КартаОпКодов32), TableSize(КартаОпКодов33),
   TableSize(КартаОпКодов34), TableSize(КартаОпКодов35), TableSize(КартаОпКодов36), TableSize(КартаОпКодов37),
   TableSize(КартаОпКодов38), TableSize(КартаОпКодов39), TableSize(КартаОпКодов3A), TableSize(КартаОпКодов3B),
   TableSize(КартаОпКодов3C), TableSize(КартаОпКодов3D), TableSize(КартаОпКодов3E), TableSize(КартаОпКодов3F), 
   TableSize(КартаОпКодов40), TableSize(КартаОпКодов41), TableSize(КартаОпКодов42), TableSize(КартаОпКодов43),
   TableSize(КартаОпКодов44), TableSize(КартаОпКодов45), TableSize(КартаОпКодов46), TableSize(КартаОпКодов47),
   TableSize(КартаОпКодов48), TableSize(КартаОпКодов49), TableSize(КартаОпКодов4A), TableSize(КартаОпКодов4B), 
   TableSize(КартаОпКодов4C), TableSize(КартаОпКодов4D), TableSize(КартаОпКодов4E), TableSize(КартаОпКодов4F),
   TableSize(КартаОпКодов50), TableSize(КартаОпКодов51), TableSize(КартаОпКодов52), TableSize(КартаОпКодов53),
   TableSize(КартаОпКодов54), TableSize(КартаОпКодов55), TableSize(КартаОпКодов56), TableSize(КартаОпКодов57),
   TableSize(КартаОпКодов58), TableSize(КартаОпКодов59), TableSize(КартаОпКодов5A), TableSize(КартаОпКодов5B), 
   TableSize(КартаОпКодов5C), TableSize(КартаОпКодов5D), TableSize(КартаОпКодов5E), TableSize(КартаОпКодов5F), 
   TableSize(КартаОпКодов60), TableSize(КартаОпКодов61), TableSize(КартаОпКодов62), TableSize(КартаОпКодов63), 
   TableSize(КартаОпКодов64), TableSize(КартаОпКодов65), TableSize(КартаОпКодов66), TableSize(КартаОпКодов67),
   TableSize(КартаОпКодов68), TableSize(КартаОпКодов69), TableSize(КартаОпКодов6A), TableSize(КартаОпКодов6B),
   TableSize(КартаОпКодов6C), TableSize(КартаОпКодов6D), TableSize(КартаОпКодов6E), TableSize(КартаОпКодов6F),
   TableSize(КартаОпКодов70), TableSize(КартаОпКодов71), TableSize(КартаОпКодов72), TableSize(КартаОпКодов73),
   TableSize(КартаОпКодов74), TableSize(КартаОпКодов75), TableSize(КартаОпКодов76), TableSize(КартаОпКодов77),
   TableSize(КартаОпКодов78), TableSize(КартаОпКодов79), TableSize(КартаОпКодов7A), TableSize(КартаОпКодов7B), 
   TableSize(КартаОпКодов7C), TableSize(КартаОпКодов7D), TableSize(КартаОпКодов7E), TableSize(КартаОпКодов7F),
   TableSize(КартаОпКодов80), TableSize(КартаОпКодов81), TableSize(КартаОпКодов82), TableSize(КартаОпКодов83),
   TableSize(КартаОпКодов84), TableSize(КартаОпКодов85), TableSize(КартаОпКодов86), TableSize(КартаОпКодов87),
   TableSize(КартаОпКодов88), TableSize(КартаОпКодов89), TableSize(КартаОпКодов8A), TableSize(КартаОпКодов8B),
   TableSize(КартаОпКодов8C), TableSize(КартаОпКодов8D), TableSize(КартаОпКодов8E), TableSize(КартаОпКодов8F),
   TableSize(КартаОпКодов90), TableSize(КартаОпКодов91), TableSize(КартаОпКодов92), TableSize(КартаОпКодов93),
   TableSize(КартаОпКодов94), TableSize(КартаОпКодов95), TableSize(КартаОпКодов96), TableSize(КартаОпКодов97),
   TableSize(КартаОпКодов98), TableSize(КартаОпКодов99), TableSize(КартаОпКодов9A), TableSize(КартаОпКодов9B), 
   TableSize(КартаОпКодов9C), TableSize(КартаОпКодов9D), TableSize(КартаОпКодов9E), TableSize(КартаОпКодов9F),
   TableSize(КартаОпКодовA0), TableSize(КартаОпКодовA1), TableSize(КартаОпКодовA2), TableSize(КартаОпКодовA3),
   TableSize(КартаОпКодовA4), TableSize(КартаОпКодовA5), TableSize(КартаОпКодовA6), TableSize(КартаОпКодовA7),
   TableSize(КартаОпКодовA8), TableSize(КартаОпКодовA9), TableSize(КартаОпКодовAA), TableSize(КартаОпКодовAB)
];

// number of entries in ТаблицыОпКодов
const uint32 NumТаблицыОпКодов1 = TableSize(ТаблицыОпКодов);         
const uint32 NumТаблицыОпКодов2 = TableSize(OpcodeTableLength);         

// Index to start pages, depending on VEX.mmmm bits, if any
ДефОпКода*[] OpcodeStartPage = [
   КартаОпКодов0,                         // One byte opcode
   КартаОпКодов1,                         // 0F    escape or VEX.mmmm = 1
   КартаОпКодов2,                         // 0F 38 escape or VEX.mmmm = 2
   КартаОпКодов4];                        // 0f 3A escape or VEX.mmmm = 3

// Index to start pages, depending on XOP.mmmm bits
ДефОпКода*[] OpcodeStartPageXOP = [
   КартаОпКодов64,                        // XOP.mmmm = 8
   КартаОпКодов65];                       // XOP.mmmm = 9
   

// Number of entries in OpcodeStartPages
const uint32 NumOpcodeStartPage    = TableSize(OpcodeStartPage);
const uint32 NumOpcodeStartPageXOP = TableSize(OpcodeStartPageXOP);

+/
// Define register names

// Names of 8 bit registers
ткст[8] НазванияРегистров8 = [
   "al", "cl", "dl", "bl", "ah", "ch", "dh", "bh" ];

// Names of 8 bit registers with REX prefix
ткст[16] НазванияРегистров8x = [
   "al", "cl", "dl", "bl", "spl", "bpl", "sil", "dil",
   "r8b", "r9b", "r10b", "r11b", "r12b", "r13b", "r14b", "r15b"  ];

// Names of 16 bit registers
ткст[16] НазванияРегистров16 = [
   "ax", "cx", "dx", "bx", "sp", "bp", "si", "di",
   "r8w", "r9w", "r10w", "r11w", "r12w", "r13w", "r14w", "r15w" ];
      
// Names of 32 bit registers
ткст[16] НазванияРегистров32 = [
   "eax", "ecx", "edx", "ebx", "esp", "ebp", "esi", "edi",
   "r8d", "r9d", "r10d", "r11d", "r12d", "r13d", "r14d", "r15d" ];
      
// Names of 64 bit registers
ткст[16] НазванияРегистров64= [
   "rax", "rcx", "rdx", "rbx", "rsp", "rbp", "rsi", "rdi",
   "r8",  "r9",  "r10", "r11", "r12", "r13", "r14", "r15" ];
      
// Names of segment registers
ткст[8] НазванияРегистровSeg = [
   "es", "cs", "ss", "ds", "fs", "gs", "hs?", "is?" ]; // Last two are illegal or undocumented

// Names of control registers
ткст[16] НазванияРегистровCR = [
   "cr0", "cr1 ?", "cr2", "cr3", "cr4", "cr5 ?", "cr6 ?", "cr7 ?",
   "cr8", "cr9 ?", "cr10 ?", "cr11 ?", "cr12 ?", "cr13 ?", "cr14 ?", "cr15 ?" ]; // Those with ? are illegal
