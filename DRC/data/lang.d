ткст код_языка = "ru";

ткст[] сообщения = [
 // Сообщения Справки:  
//1.ГлавнаяСправка
`Компилятор Динрус версии {0}
Авторское право (c) 2012-2020 Виталий Кулич, Азиз Кёксал.
Лицензия GPL3.

Подкоманды:

{1}

Введите 'drc(дрк) справка <подкоманда>' для получения
 дополнительной информации о подкоманде.

Компилирован с помощью {2} версии {3}
Дата компиляции: {4}.`,

//2.ГенерироватьСправку
`Генерировать документ РЯР (XML) или ГЯР (HTML) из исходного файла Динрус.
Использование:
  drc(дрк) ген файл.d [Опции]

Опции:
  --синтаксис         : генерировать теги для дерева синтаксиса
  --ряр            : использовать формат РЯР (XML) (дефолт)
  --гяр           : использовать формат ГЯР (HTML)

Пример:
  drc(дрк) ген Parser.d --гяр --синтаксис > Parser.html`,

//3.СправкаОГрафеИмпорта
`Разобрать модуль и построить граф зависимостей, основанный на его импортах.
Использование:
  drc(дрк) ги файл.d Формат [Опции]

  Папка файл.d негласно добавляется в список путей импорта.

Формат:
  --дот            : генерировать документ dot (дефолт)
  Опции, относящиеся к --дот:
  -гнп             : Группировать модули по названию пакета
  --гпнп           : Группировать модули по полному названию пакета
  -псвкр           : подсветить циклические края в графе
  -псввер          : подсветить модули в цикличиских связях
  -сиСТИЛЬ         : стиль края, используемый для статических импортов
  -пиСТИЛЬ         : стиль края, используемый для публичных импортов
  СТИЛЬ может быть: "dashed", "dotted", "solid", "invis" или "bold"

  --пути           : вывести пути к файлам модулей в графе

  --список         : вывести имена модулей в граф
  Опции, общие для --пути и --список:
  -уЧИСЛО              : вывести ЧИСЛО уровней.
  -м               : использовать '*' для пометки модулей с циклическими взаимосвязями

Опции:
  -Ипуть           : добавить 'путь' в список путей импорта, по которым будут
                     искаться модули
  -хРЕГВЫР         : исключить модули, имена которых совпадают с регулярным выражением
                     РЕГВЫР
  -и               : включить нелоцируемые модули

Пример:
  drc(дрк) ги src/main.d --список
  drc(дрк) ги src/main.d | dot -Tpng > main.png`,

//4.СправкаОКомпиляции
`Компилировать исходники на Ди.
Использование:
  drc(дрк) компилируй файл.d [файл2.d, ...] [Опции]

Эта команда только парсирует исходники и выполняет
небольший семантический анализ.Ошибки выводятся на
стандартный вывод для ошибок.

Опции:
  -депр             : принимать деприкированный код
  -отладка          : включать код "отладка"
  -отладка=уровень  : включать код "отладка(у)", где у <= уровень
  -отладка=идент    : включать код "отладка(идент)"
  -версия=уровень   : включать код "версия(у)", где у >= уровень
  -версия=идент     : включать код "версия(идент)"
  -Ипуть            : добавить 'путь' в список путей импорта
  -релиз            : компилировать постройку-релиз
  -тест             : компилировать постройку-тест
  -32               : произвести 32-битный код (дефолт)
  -64               : произвести 64-битный код
  -прогПРОГ         : вывести программу в ПРОГ

  -пс               : вывести дерево символов модуля
  -пм               : вывести дерево пакетов/модулей

Пример:
  drc(дрк) к src/main.d -Иsrc/`,
 
//5.СправкаОДДок
`Генерировать документацию из комментариев DDoc в исходниках Динрус.
Использование:
  drc(дрк) ддок Приёмник файл.d [файл2.d, ...] [Опции]

Приёмник - это папка, в которую записываются файлы документации.
Файлы с расширением .ddoc распознаются как файлы с определением макросов.

Опции:
  --ряр            : записать документы РЯР(XML), а не ГЯР(HTML)
  -и               : включить недокументированные символы
  -в               : многословный вывод
  -м=ПУТЬ          : записать список обработанных модулей в ПУТЬ

Пример:
  drc(дрк) д doc/ src/main.d src/macros_drc.ddoc -и -м=doc/modules.txt`,


//6.СправкаОПодсветке
`Подсветить исходный файл Ди с тегами РЯР или ГЯР.
Использование:
  drc(дрк) псв файл.d [Опции]

Опции:
  --синтаксис     : генерировать теги для синтактического дерева
  --ряр           : использовать формат РЯР(XML) (дефолт)
  --гяр           : использовать формат ГЯР(HTML)
  --строки        : выводить номера строк

Пример:
  drc(дрк) псв src/main.d --гяр --синтаксис > main.html`,

//7.СправкаОСеманализе
`Вывести семы исходного файла Ди.
Использование:
  drc(дрк) сем файл.d [Опции]

Опции:
  -               : читать текст со стандартного ввода.
  -рРАЗДЕЛИТЕЛЬ   : выводить РАЗДЕЛИТЕЛЬ вместо новой строки между семами.
  -и              : игнорировать пробельные символы (т.е. коментарии, шебанг и т.д.)
  -п             : выводить предшествующие пробельные символы.

Пример:
  echo "module foo; проц  func() и т.д." | drc(дрк) лекс -
  drc(дрк) лекс src/main.d | grep ^[0-9]`,
      
//8.СправкаОСтатистике
`Собрать статистику об исходных файлах Ди.
Использование:
  drc(дрк) стат файл.d [файл2.d, ...] [Опции]

Опции:
  --табток      : вывести число всех видов лексем в таблице.
  --табаст      : вывести число всех видов узлов в таблице.

Пример:
  drc(дрк) стат src/main.d src/drc/Unicode.d`,
  
//9.СправкаОПереводе
`Перевести исходник Ди  на другой язык.
Использование:
  drc(дрк) п ЯЗЫК файл.d

  Поддерживаемые языки:
    *) Немецкий

Пример:
  drc(дрк) п Немецкий src/main.d`,

  // Сообщения лексера:
  "обнаружен недопустимый символ: '{0}'",
  "неверная последовательность UTF-8: '{0}'",
  "неоконченный символьный литерал.",
  "пустой символьный литерал.",
  "expected 'line' after '#'.",
  "integer expected after #line",
  "unterminated filespec string.",
  "expected a terminating newline after special token.",
  "unterminated string literal.",
  "non-hex character '{0}' found in hex string.",
  "odd number of hex цифры in hex string.",
  "unterminated hex string.",
  "unterminated block comment (/* */).",
  "unterminated nested comment (/+ +/).",
  "unterminated raw string.",
  "unterminated back quote string.",
  "found undefined escape sequence '{0}'.",
  "found invalid Unicode escape sequence '{0}'.",
  "insufficient number of hex цифры in escape sequence: '{0}'",
  "undefined ГЯР entity '{0}'",
  "unterminated ГЯР entity '{0}'.",
  "ГЯР entities must begin with a letter.",
  // integer overflows
  "decimal number overflows sign bit.",
  "overflow in decimal number.",
  "overflow in hexadecimal number.",
  "overflow in binary number.",
  "overflow in octal number.",
  "overflow in float number.",
  "цифры 8 and 9 are not allowed in octal numbers.",
  "invalid hex number; at least one hex digit expected.",
  "invalid binary number; at least one binary digit expected.",
  "the exponent of a hexadecimal float number is required.",
  "hexadecimal float exponents must start with a digit.",
  "exponents must start with a digit.",

  // Сообщения Парсера
  "expected '{0}', but found '{1}'.",
  "'{0}' is redundant.",
  "template tuple parameters can only be last.",
  "the functions 'in' contract was already parsed.",
  "the functions 'out' contract was already parsed.",
  "no linkage type was specified.",
  "unrecognized linkage type '{0}'; valid types are C, C++, D, Windows, Pascal und Система.",
  "expected one or more base classes, not '{0}'.",
  "base classes are not allowed in forward declarations.", 
];
