module drc.lexer.Identifier;

import drc.lexer.TokensEnum,
       drc.lexer.IdentsEnum;
import common;

/// Представляет идентификатор по определению в спецификации D.
///
/// $(PRE
///  Идентификатор := НачалоИд СимвИд*
///  НачалоИд := "_" | Буква
///  СимвИд := НачалоИд | "0"-"9"
///  Буква := ЮАльфа
/// )
/// See_Also:
///  Алфавитные символы Юникод определены в Юникод 5.0.0.
align(1)
struct Идентификатор
{
  ткст ткт; /// Идентификатор в ткст UTF-8.
  TOK вид;   /// Вид семы.
  ВИД видИд; /// Только для предопределённых идентификаторов.

  static Идентификатор* opCall(ткст ткт, TOK вид)
  {
    auto ид = new Идентификатор;
    ид.ткт = ткт;
    ид.вид = вид;
    return ид;
  }

  static Идентификатор* opCall(ткст ткт, TOK вид, ВИД видИд)
  {
    auto ид = new Идентификатор;
    ид.ткт = ткт;
    ид.вид = вид;
    ид.видИд = видИд;
    return ид;
  }

  бцел вХэш()
  {
    бцел хэш;
    foreach(с; ткт) {
      хэш *= 11;
      хэш += с;
    }
    return хэш;
  }
}
// pragma(сооб, Идентификатор.sizeof.stringof);
