/// Author: Aziz Köksal, Vitaly Kulich
/// License: GPL3
/// $(Maturity very high)
module drc.lexer.TokensEnum;

import common;

/// Перечисление типов сем.
enum TOK : бкрат
{
  Неверно,

  Нелегал,
  Комментарий,
  Шебанг,
  ХэшСтрочка,
  Файлспец,
  Новстр,
  Пусто,

  Идентификатор,
  Ткст,
  СимЛитерал,

  // Специальные семы
  ФАЙЛ,
  СТРОКА,
  ДАТА,
  ВРЕМЯ,
  ШТАМПВРЕМЕНИ,
  ПОСТАВЩИК,
  ВЕРСИЯ,

  // Числовые литералы
  Цел32, Цел64, Бцел32, Бцел64,
  // Сканер чисел с плавающей точкой рассчитывает на такой расклад. (ПлавXY + 3 == МнимоеXY)
  Плав32, Плав64, Плав80,
  Мнимое32, Мнимое64, Мнимое80,


  // Скобки
  ЛСкобка,
  ПСкобка,
  ЛКвСкобка,
  ПКвСкобка,
  ЛФСкобка,
  ПФСкобка,

  Точка, Срез, Эллипсис,

  // Операты над числами с плавающей точкой
  Неупорядоченный,
  НилиР,
  НилиБ,
  НилиБилиР,
  НилиМ,
  НилиМилиР,
  МилиРилиБ,
  МилиБ,

  // Нормальные операторы
  Присвоить, Равно, НеРавно, Не,
  МеньшеРавно, Меньше,
  БольшеРавно, Больше,
  ЛСдвигПрисвой, ЛСдвиг,
  ПСдвигПрисвой,ПСдвиг,
  БПСдвигПрисвой, БПСдвиг,
  ИлиПрисвой, ИлиЛог, ИлиБинарное,
  ИПрисвой, ИЛог, ИБинарное,
  ПрибавьПрисвой, ПлюсПлюс, Плюс,
  ОтнимиПрисвой, МинусМинус, Минус,
  ДелиПрисвой, Деление,
  УмножьПрисвой, Умножь,
  МодульПрисвой, Мод,
  ИИлиПрисвой, ИИли,
  СоединиПрисвой,
  Тильда,

  Двоеточие,
  ТочкаЗапятая,
  Вопрос,
  Запятая,
  Доллар,

  /* Ключевые слова:
     NB.: Сема.кслово() depends on this список being contiguous.
  */
  Абстрактный, Алиас, Расклад, Асм, Подтвердить, Авто, Тело,
  Всё, Реле, Каст, Кэтч,
  Класс, Конст, Далее,
  Отладка, Дефолт, Делегат, Удалить, Устаревший, Делай,
  Иначе, Перечень, Экспорт, Экстерн, Ложь, Окончательный,
  ВИтоге, При, ДляВсех, ДляВсех_реверс, Функция, Переход,
  Если, Импорт, Вхо, Вховых,
  Интерфейс, Инвариант, Является, Отложенный, Макрос/+D2.0+/,
  Смесь, Модуль, Нов, Неброс/+D2.0+/, Нуль, Вых, Перепись, Пакет,
  Прагма, Приватный, Защищённый, Публичный, Чистый/+D2.0+/, Реф, Итог,
  Масштаб, Статический, Структура, Супер, Щит, Синхронизованный,
  Шаблон, Этот, Брось, Трэтс/+D2.0+/, Истина, Пробуй, Типдеф, Идтипа,
  Типа, Союз, Юниттест,
  Версия, Волатайл, Пока, Для,
  // Целочисленные типы.
  Сим,   Шим,   Дим, Бул,
  Байт,   Ббайт,   Крат, Бкрат,
  Цел,    Бцел,    Дол,  Бдол,
  Цент,   Бцент,
  Плав,  Дво,  Реал,
  Вплав, Вдво, Вреал,
  Кплав, Кдво, Креал, Проц,

  ГОЛОВА, // начало линкованного списка
  КФ,
  МАКС
}

alias TOK.Абстрактный НачалоКС;
alias TOK.Проц КонецКС;
alias TOK.Сим НачалоИнтегральногоТипа;
alias TOK.Проц КонецИнтегральногоТипа;
alias TOK.ФАЙЛ НачалоСпецСем;
alias TOK.ВЕРСИЯ КонецСпецСем;

/// Таблица, преобразующая семы каждого вида в текст.
const ткст[TOK.МАКС] семаВТкст = [
  "Неверный",

  "Нелегал",
  "Комментарий",
  "#! /шебанг/",
  "#строка",
  `"файлспец"`,
  "НовСтр",
  "Пусто",

  "Идентификатор",
  "Ткст",
  "СимЛитерал",

  "__ФАЙЛ__",
  "__СТРОКА__",
  "__ДАТА__",
  "__ВРЕМЯ__",
  "__ШТАМПВРЕМ__",
  "__ПОСТАВЩИК__",
  "__ВЕРСИЯ__",

  "Цел32", "Цел64", "Бцел32", "Бцел64",
  "Плав32", "Плав64", "Плав80",
  "Мнимое32", "Мнимое64", "Мнимое80",

  "(",
  ")",
  "[",
  "]",
  "{",
  "}",

  ".", "..", "...",

  "!<>=", // Неупорядоченный
  "!<>",  // НилиР
  "!<=",  // НилиБ
  "!<",   // НилиБилиР
  "!>=",  // НилиМ
  "!>",   // НилиМилиР
  "<>=",  // МилиРилиБ
  "<>",   // МилиБ

  "=", "==", "!=", "!",
  "<=", "<",
  ">=", ">",
  "<<=", "<<",
  ">>=",">>",
  ">>>=", ">>>",
  "|=", "||", "|",
  "&=", "&&", "&",
  "+=", "++", "+",
  "-=", "--", "-",
  "/=", "/",
  "*=", "*",
  "%=", "%",
  "^=", "^",
  "~=",
  "~",

  ":",
  ";",
  "?",
  ",",
  "$",

  "abstract","alias","align","asm","assert","auto","body",
  "break","case","cast","catch",
  "class","const","continue",
  "debug","default","delegate","delete","deprecated","do",
  "else","enum","export","extern","нет","final",
  "finally","for","foreach","foreach_reverse","function","goto",
  "if","import","in","inout",
  "interface","invariant","is","lazy","macro",
  "mixin","module","new","nothrow","пусто","out","override","package",
  "pragma","private","protected","public","pure","ref","return",
  "scope","static","struct","super","switch","synchronized",
  "template","this","throw","__traits","да","try","typedef","typeid",
  "typeof","union","unittest",
  "version","volatile","while","with",
  // Целочисленные типы.
  "сим",   "шим",   "дим", "бул",
  "байт",   "ббайт",   "крат", "бкрат",
  "цел",    "бцел",    "дол",  "бдол",
  "цент",   "бцент",
  "плав",  "дво",  "реал",
  "вплав", "вдво", "вреал",
  "кплав", "кдво", "креал", "проц ",

  "ГОЛОВА",
  "КФ"
];
static assert(семаВТкст.length == TOK.КФ+1);
