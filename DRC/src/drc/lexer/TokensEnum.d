/// Author: Aziz Köksal
/// License: GPL3
/// $(Maturity very high)
module drc.lexer.TokensEnum;

import common;

/// Перечисление типов сем.
enum TOK : бкрат
{
  Неверно,

  Нелегал,
  Комментарий,
  Шебанг,
  HashLine,
  Filespec,
  Новстр,
  Пусто,

  Идентификатор,
  Ткст,
  СимЛитерал,

  // Специальные семы
  ФАЙЛ,
  СТРОКА,
  ДАТА,
  ВРЕМЯ,
  ШТАМПВРЕМЕНИ,
  ПОСТАВЩИК,
  ВЕРСИЯ,

  // Числовые литералы
  Цел32, Цел64, Бцел32, Бцел64,
  // Плавing point число scanner relies on this order. (ПлавXY + 3 == МнимоеXY)
  Плав32, Плав64, Плав80,
  Мнимое32, Мнимое64, Мнимое80,


  // Скобки
  ЛСкобка,
  ПСкобка,
  ЛКвСкобка,
  ПКвСкобка,
  ЛФСкобка,
  ПФСкобка,

  Точка, Срез, Эллипсис,

  // Плавing point число operators
  Unordered,
  UorE,
  UorG,
  UorGorE,
  UorL,
  UorLorE,
  LorEorG,
  LorG,

  // Normal operators
  Присвоить, Равно, НеРавно, Не,
  МеньшеРавно, Меньше,
  БольшеРавно, Больше,
  ЛСдвигПрисвой, ЛСдвиг,
  ПСдвигПрисвой,ПСдвиг,
  URShiftAssign, URShift,
  ИлиПрисвой, ИлиЛогическое, ИлиБинарное,
  ИПрисвой, ИЛогическое, ИБинарное,
  ПлюсПрисвой, ПлюсПлюс, Плюс,
  МинусПрисвой, МинусМинус, Минус,
  ДелениеПрисвой, Деление,
  УмножьПрисвой, Умножь,
  МодульПрисвой, Мод,
  ИИлиПрисвой, ИИли,
  CatAssign,
  Тильда,

  Двоеточие,
  ТочкаЗапятая,
  Вопрос,
  Запятая,
  Доллар,

  /* Keywords:
     NB.: Сема.кслово_ли() depends on this список being contiguous.
  */
  Абстрактный, Алиас, Расклад, Asm, Подтвердить, Авто, Тело,
  Всё, Реле, Каст, Кэтч,
  Класс, Конст, Далее,
  Отладка, Дефолт, Делегат, Удалить, Устаревший, Делай,
  Иначе, Перечень, Экспорт, Экстерн, Ложь, Окончательный,
  Finally, При, Длявсех, Длявсех_реверс, Функция, Переход,
  Если, Импорт, Вхо, Вховых,
  Интерфейс, Инвариант, Является, Отложенный, Макрос/+D2.0+/,
  Смесь, Модуль, Нов, Nothrow/+D2.0+/, Нуль, Вых, Перепись, Пакет,
  Прагма, Приватный, Защищённый, Публичный, Pure/+D2.0+/, Реф, Итог,
  Масштаб, Статический, Структура, Супер, Щит, Синхронизованный,
  Шаблон, Этот, Брось, Traits/+D2.0+/, Истина, Пробуй, Типдеф, Идтипа,
  Типа, Союз, Юниттест,
  Версия, Volatile, Пока, Для,
  // Целegral types.
  Сим,   Шим,   Дим, Бул,
  Байт,   Ббайт,   Крат, Бкрат,
  Цел,    Бцел,    Дол,  Бдол,
  Цент,   Бцент,
  Плав,  Дво,  Реал,
  Вплав, Вдво, Вреал,
  Кплав, Кдво, Креал, Проц,

  ГОЛОВА, // старт of linked список
  КФ,
  МАКС
}

alias TOK.Абстрактный НачалоКС;
alias TOK.Проц КонецКС;
alias TOK.Сим НачалоИнтегральногоТипа;
alias TOK.Проц КонецИнтегральногоТипа;
alias TOK.ФАЙЛ НачалоСпецСем;
alias TOK.ВЕРСИЯ КонецСпецСем;

/// Таблица, преобразующая семы каждого вида в текст.
const ткст[TOK.МАКС] семаВТкст = [
  "Неверный",

  "Нелегал",
  "Комментарий",
  "#! /shebang/",
  "#line",
  `"filespec"`,
  "НовСтр",
  "Пусто",

  "Идентификатор",
  "Ткст",
  "СимЛитерал",

  "__FILE__",
  "__LINE__",
  "__DATE__",
  "__TIME__",
  "__TIMESTAMP__",
  "__VENDOR__",
  "__VERSION__",

  "Цел32", "Цел64", "Бцел32", "Бцел64",
  "Плав32", "Плав64", "Плав80",
  "Мнимое32", "Мнимое64", "Мнимое80",

  "(",
  ")",
  "[",
  "]",
  "{",
  "}",

  ".", "..", "...",

  "!<>=", // Unordered
  "!<>",  // UorE
  "!<=",  // UorG
  "!<",   // UorGorE
  "!>=",  // UorL
  "!>",   // UorLorE
  "<>=",  // LorEorG
  "<>",   // LorG

  "=", "==", "!=", "!",
  "<=", "<",
  ">=", ">",
  "<<=", "<<",
  ">>=",">>",
  ">>>=", ">>>",
  "|=", "||", "|",
  "&=", "&&", "&",
  "+=", "++", "+",
  "-=", "--", "-",
  "/=", "/",
  "*=", "*",
  "%=", "%",
  "^=", "^",
  "~=",
  "~",

  ":",
  ";",
  "?",
  ",",
  "$",

  "abstract","alias","align","asm","assert","auto","body",
  "break","case","cast","catch",
  "class","const","continue",
  "debug","default","delegate","delete","deprecated","do",
  "else","enum","export","extern","нет","final",
  "finally","for","foreach","foreach_reverse","function","goto",
  "if","import","in","inout",
  "interface","invariant","is","lazy","macro",
  "mixin","module","new","nothrow","null","out","override","package",
  "pragma","private","protected","public","pure","ref","return",
  "scope","static","struct","super","switch","synchronized",
  "template","this","throw","__traits","да","try","typedef","typeid",
  "typeof","union","unittest",
  "version","volatile","while","with",
  // Целegral types.
  "сим",   "шим",   "дим", "бул",
  "байт",   "ббайт",   "крат", "бкрат",
  "цел",    "бцел",    "дол",  "бдол",
  "цент",   "бцент",
  "плав",  "дво",  "реал",
  "вплав", "вдво", "вреал",
  "кплав", "кдво", "креал", "проц ",

  "ГОЛОВА",
  "КФ"
];
static assert(семаВТкст.length == TOK.КФ+1);
