/*===-- llvm-c/Analysis.h - Analysis Library к Interface --------*- C++ -*-===*\
|*                                                                            *|
|* Part of the LLVM Project, under the Apache License v2.0 with LLVM          *|
|* Exceptions.                                                                *|
|* See https://llvm.org/LICENSE.txt for license information.                  *|
|* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception                    *|
|*                                                                            *|
|*===----------------------------------------------------------------------===*|
|*                                                                            *|
|* Этот файл декларирует интерфейс к libLLVMAnalysis.a, который               *|
|* реализует различные анализы LLVM IR.                                       *|
|*                                                                            *|
|* Многие экзотические языки могут взаимооперировать с кодом на Си, но        *|
|* с Си++ труднее, из-за декорирования имён. Поэтому в дополнение к Си         *|
|* Этот интерфейс активирует инструменты написанные на таких языках.          *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

module ll.Analysis;
import ll.Types;

extern (C) {

    enum ЛЛДействиеВерификатораПриОшибке
	{
		ПрерватьПроцесс, /* верификатор печатает на стдош и аборт() */
		ВывестиСообщение, /* верификатор печатает на стдош и возвращает 1 */
		СтатусВозврата  /* верификатор просто возвращает 1 */
	}

    /* Проверяет валидность модуля, прредпринимая заданные действия, если "нет".
       Дополнительно возвращает удобочитаемые описания каких-либо неправильных конструкций.
       выхСооб должен вымещаться с помощью LLVMDisposeMessage. */
    ЛЛБул ЛЛВерифицируйМодуль(ЛЛМодуль M, ЛЛДействиеВерификатораПриОшибке действие,
                              ткст0 *выхСооб);

    /* Проверяет верность единичной функции, предпринимая заданное действие. Полезно
       для отладки. */
    ЛЛБул ЛЛВерифицируйФункцию(ЛЛЗначение фн, ЛЛДействиеВерификатораПриОшибке действие);

    /* Открыть окно ghostview, показывающее конфигурацию текущей функции.
       Полезно при отладке. */
    проц ЛЛПокажиКФГФункции(ЛЛЗначение фн);
	
    проц ЛЛПокажиТолькоКФГФункции(ЛЛЗначение фн);

    /* initializeAnalysis - Инициализует все проходки, собранные в библиотеке Analysis. */
    проц ЛЛИНицАнализ(ЛЛРеестрПроходок R);

    }

