_TEXT	segment dword use32 public 'CODE'	;size is 32841
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 3068
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 0
_BSS	ends
FLAT	group	
	extrn	??_7Object@@6B@
	extrn	??_7Statement@@6B@
	extrn	??_GObject@@UAEPAXI@Z
	extrn	??_GStatement@@UAEPAXI@Z
	extrn	?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	extrn	?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	extrn	?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	extrn	?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	extrn	?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	extrn	?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	extrn	?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	extrn	?isIfStatement@Statement@@UAEPAUIfStatement@@XZ

	public	??0Statement@@QAE@ULoc@@@Z
	public	?syntaxCopy@Statement@@UAEPAU1@XZ
	public	?print@Statement@@UAEXXZ
	public	?toChars@Statement@@UAEPADXZ
	public	?toCBuffer@Statement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?semantic@Statement@@UAEPAU1@PAUScope@@@Z
	public	?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z
	public	?semanticScope@Statement@@QAEPAU1@PAUScope@@PAU1@1@Z
	public	?error@Statement@@QAAXPBDZZ
	public	?warning@Statement@@QAAXPBDZZ
	public	?hasBreak@Statement@@UAEHXZ
	public	?hasContinue@Statement@@UAEHXZ
	public	?usesEH@Statement@@UAEHXZ
	public	?blockExit@Statement@@UAEHXZ
	public	?comeFrom@Statement@@UAEHXZ
	public	?isEmpty@Statement@@UAEHXZ
	public	?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	extrn	??_7PeelStatement@@6B@
	extrn	??_GPeelStatement@@UAEPAXI@Z

	public	?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	public	??0PeelStatement@@QAE@PAUStatement@@@Z
	extrn	??_7ExpStatement@@6B@
	extrn	??_GExpStatement@@UAEPAXI@Z

	public	?semantic@PeelStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@ExpStatement@@UAEPAUStatement@@XZ
	public	?toCBuffer@ExpStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_7CompileStatement@@6B@

	public	?semantic@ExpStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@ExpStatement@@UAEHXZ
	public	?isEmpty@ExpStatement@@UAEHXZ
	extrn	??_GCompileStatement@@UAEPAXI@Z

	public	??0CompileStatement@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@CompileStatement@@UAEPAUStatement@@XZ
	extrn	??_7Statements@@6B@
	extrn	??_GStatements@@UAEPAXI@Z

	public	?toCBuffer@CompileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?flatten@CompileStatement@@UAEPAUStatements@@PAUScope@@@Z
	extrn	??_7DeclarationStatement@@6B@
	extrn	??_GDeclarationStatement@@UAEPAXI@Z
	extrn	?isDeclarationStatement@DeclarationStatement@@UAEPAU1@XZ

	public	?semantic@CompileStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	??0DeclarationStatement@@QAE@ULoc@@PAUDsymbol@@@Z
	public	??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@DeclarationStatement@@UAEPAUStatement@@XZ
	extrn	??_7CompoundStatement@@6B@

	public	?scopeCode@DeclarationStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z
	public	?toCBuffer@DeclarationStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GCompoundStatement@@UAEPAXI@Z
	extrn	?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ

	public	??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
	public	??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
	public	??0CompoundStatement@@QAE@ULoc@@PAUStatement@@@Z
	public	?syntaxCopy@CompoundStatement@@UAEPAUStatement@@XZ
	public	?semantic@CompoundStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?flatten@CompoundStatement@@UAEPAUStatements@@PAUScope@@@Z
	public	?isReturnStatement@CompoundStatement@@UAEPAUReturnStatement@@XZ
	public	?toCBuffer@CompoundStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?usesEH@CompoundStatement@@UAEHXZ
	public	?blockExit@CompoundStatement@@UAEHXZ
	public	?comeFrom@CompoundStatement@@UAEHXZ
	extrn	??_7CompoundDeclarationStatement@@6B@
	extrn	??_GCompoundDeclarationStatement@@UAEPAXI@Z

	public	?isEmpty@CompoundStatement@@UAEHXZ
	public	??0CompoundDeclarationStatement@@QAE@ULoc@@PAUStatements@@@Z
	extrn	??_7UnrolledLoopStatement@@6B@

	public	?syntaxCopy@CompoundDeclarationStatement@@UAEPAUStatement@@XZ
	public	?toCBuffer@CompoundDeclarationStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GUnrolledLoopStatement@@UAEPAXI@Z

	public	??0UnrolledLoopStatement@@QAE@ULoc@@PAUStatements@@@Z
	public	?syntaxCopy@UnrolledLoopStatement@@UAEPAUStatement@@XZ
	public	?semantic@UnrolledLoopStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?toCBuffer@UnrolledLoopStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?hasBreak@UnrolledLoopStatement@@UAEHXZ
	public	?hasContinue@UnrolledLoopStatement@@UAEHXZ
	public	?usesEH@UnrolledLoopStatement@@UAEHXZ
	extrn	??_7ScopeStatement@@6B@
	extrn	??_GScopeStatement@@UAEPAXI@Z
	extrn	?isScopeStatement@ScopeStatement@@UAEPAU1@XZ

	public	?blockExit@UnrolledLoopStatement@@UAEHXZ
	public	?comeFrom@UnrolledLoopStatement@@UAEHXZ
	public	??0ScopeStatement@@QAE@ULoc@@PAUStatement@@@Z
	public	?syntaxCopy@ScopeStatement@@UAEPAUStatement@@XZ
	public	?semantic@ScopeStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@ScopeStatement@@UAEHXZ
	public	?hasContinue@ScopeStatement@@UAEHXZ
	public	?usesEH@ScopeStatement@@UAEHXZ
	public	?blockExit@ScopeStatement@@UAEHXZ
	public	?comeFrom@ScopeStatement@@UAEHXZ
	public	?isEmpty@ScopeStatement@@UAEHXZ
	extrn	??_7WhileStatement@@6B@
	extrn	??_GWhileStatement@@UAEPAXI@Z

	public	?toCBuffer@ScopeStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0WhileStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
	public	?syntaxCopy@WhileStatement@@UAEPAUStatement@@XZ
	public	?semantic@WhileStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@WhileStatement@@UAEHXZ
	public	?hasContinue@WhileStatement@@UAEHXZ
	public	?usesEH@WhileStatement@@UAEHXZ
	extrn	??_7DoStatement@@6B@

	public	?blockExit@WhileStatement@@UAEHXZ
	public	?comeFrom@WhileStatement@@UAEHXZ
	public	?toCBuffer@WhileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GDoStatement@@UAEPAXI@Z

	public	??0DoStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@@Z
	public	?syntaxCopy@DoStatement@@UAEPAUStatement@@XZ
	public	?semantic@DoStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@DoStatement@@UAEHXZ
	public	?hasContinue@DoStatement@@UAEHXZ
	public	?usesEH@DoStatement@@UAEHXZ
	public	?blockExit@DoStatement@@UAEHXZ
	public	?comeFrom@DoStatement@@UAEHXZ
	extrn	??_7ForStatement@@6B@
	extrn	??_GForStatement@@UAEPAXI@Z

	public	?toCBuffer@DoStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0ForStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@21@Z
	public	?syntaxCopy@ForStatement@@UAEPAUStatement@@XZ
	public	?semantic@ForStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?scopeCode@ForStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z
	public	?hasBreak@ForStatement@@UAEHXZ
	public	?hasContinue@ForStatement@@UAEHXZ
	public	?usesEH@ForStatement@@UAEHXZ
	public	?blockExit@ForStatement@@UAEHXZ
	extrn	??_7ForeachStatement@@6B@

	public	?comeFrom@ForStatement@@UAEHXZ
	public	?toCBuffer@ForStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GForeachStatement@@UAEPAXI@Z
	extrn	??_7Parameters@@6B@
	extrn	??_7Expressions@@6B@

	public	??0ForeachStatement@@QAE@ULoc@@W4TOK@@PAUParameters@@PAUExpression@@PAUStatement@@@Z
	public	?syntaxCopy@ForeachStatement@@UAEPAUStatement@@XZ
	extrn	??_GParameters@@UAEPAXI@Z
	extrn	??_GExpressions@@UAEPAXI@Z

	public	?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@ForeachStatement@@UAEHXZ
	public	?hasContinue@ForeachStatement@@UAEHXZ
	public	?usesEH@ForeachStatement@@UAEHXZ
	public	?blockExit@ForeachStatement@@UAEHXZ
	extrn	??_7IfStatement@@6B@

	public	?comeFrom@ForeachStatement@@UAEHXZ
	public	?toCBuffer@ForeachStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GIfStatement@@UAEPAXI@Z
	extrn	?isIfStatement@IfStatement@@UAEPAU1@XZ

	public	??0IfStatement@@QAE@ULoc@@PAUParameter@@PAUExpression@@PAUStatement@@3@Z
	public	?syntaxCopy@IfStatement@@UAEPAUStatement@@XZ
	public	?semantic@IfStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?usesEH@IfStatement@@UAEHXZ
	public	?blockExit@IfStatement@@UAEHXZ
	extrn	??_7ConditionalStatement@@6B@
	extrn	??_GConditionalStatement@@UAEPAXI@Z

	public	?toCBuffer@IfStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0ConditionalStatement@@QAE@ULoc@@PAUCondition@@PAUStatement@@2@Z
	public	?syntaxCopy@ConditionalStatement@@UAEPAUStatement@@XZ
	public	?semantic@ConditionalStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?flatten@ConditionalStatement@@UAEPAUStatements@@PAUScope@@@Z
	public	?usesEH@ConditionalStatement@@UAEHXZ
	extrn	??_7PragmaStatement@@6B@

	public	?blockExit@ConditionalStatement@@UAEHXZ
	public	?toCBuffer@ConditionalStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GPragmaStatement@@UAEPAXI@Z

	public	??0PragmaStatement@@QAE@ULoc@@PAUIdentifier@@PAUExpressions@@PAUStatement@@@Z
	public	?syntaxCopy@PragmaStatement@@UAEPAUStatement@@XZ
	public	?semantic@PragmaStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?usesEH@PragmaStatement@@UAEHXZ
	extrn	??_7StaticAssertStatement@@6B@

	public	?blockExit@PragmaStatement@@UAEHXZ
	public	?toCBuffer@PragmaStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GStaticAssertStatement@@UAEPAXI@Z

	public	??0StaticAssertStatement@@QAE@PAUStaticAssert@@@Z
	public	?syntaxCopy@StaticAssertStatement@@UAEPAUStatement@@XZ
	public	?semantic@StaticAssertStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@StaticAssertStatement@@UAEHXZ
	extrn	??_7SwitchStatement@@6B@
	extrn	??_GSwitchStatement@@UAEPAXI@Z

	public	?toCBuffer@StaticAssertStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0SwitchStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
	public	?syntaxCopy@SwitchStatement@@UAEPAUStatement@@XZ
	public	?semantic@SwitchStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@SwitchStatement@@UAEHXZ
	public	?usesEH@SwitchStatement@@UAEHXZ
	public	?blockExit@SwitchStatement@@UAEHXZ
	extrn	??_7CaseStatement@@6B@
	extrn	??_GCaseStatement@@UAEPAXI@Z

	public	?toCBuffer@SwitchStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0CaseStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
	public	?syntaxCopy@CaseStatement@@UAEPAUStatement@@XZ
	public	?semantic@CaseStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?compare@CaseStatement@@UAEHPAUObject@@@Z
	public	?usesEH@CaseStatement@@UAEHXZ
	public	?blockExit@CaseStatement@@UAEHXZ
	extrn	??_7DefaultStatement@@6B@

	public	?comeFrom@CaseStatement@@UAEHXZ
	public	?toCBuffer@CaseStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GDefaultStatement@@UAEPAXI@Z

	public	??0DefaultStatement@@QAE@ULoc@@PAUStatement@@@Z
	public	?syntaxCopy@DefaultStatement@@UAEPAUStatement@@XZ
	public	?semantic@DefaultStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?usesEH@DefaultStatement@@UAEHXZ
	extrn	??_7GotoDefaultStatement@@6B@

	public	?blockExit@DefaultStatement@@UAEHXZ
	public	?comeFrom@DefaultStatement@@UAEHXZ
	public	?toCBuffer@DefaultStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GGotoDefaultStatement@@UAEPAXI@Z

	public	??0GotoDefaultStatement@@QAE@ULoc@@@Z
	public	?syntaxCopy@GotoDefaultStatement@@UAEPAUStatement@@XZ
	public	?semantic@GotoDefaultStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@GotoDefaultStatement@@UAEHXZ
	extrn	??_7GotoCaseStatement@@6B@
	extrn	??_GGotoCaseStatement@@UAEPAXI@Z

	public	?toCBuffer@GotoDefaultStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0GotoCaseStatement@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@GotoCaseStatement@@UAEPAUStatement@@XZ
	public	?semantic@GotoCaseStatement@@UAEPAUStatement@@PAUScope@@@Z
	extrn	??_7SwitchErrorStatement@@6B@

	public	?blockExit@GotoCaseStatement@@UAEHXZ
	public	?toCBuffer@GotoCaseStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GSwitchErrorStatement@@UAEPAXI@Z
	extrn	??_7ReturnStatement@@6B@

	public	??0SwitchErrorStatement@@QAE@ULoc@@@Z
	public	?blockExit@SwitchErrorStatement@@UAEHXZ
	public	?toCBuffer@SwitchErrorStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GReturnStatement@@UAEPAXI@Z
	extrn	?isReturnStatement@ReturnStatement@@UAEPAU1@XZ

	public	??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@ReturnStatement@@UAEPAUStatement@@XZ
	public	?semantic@ReturnStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@ReturnStatement@@UAEHXZ
	extrn	??_7BreakStatement@@6B@
	extrn	??_GBreakStatement@@UAEPAXI@Z

	public	?toCBuffer@ReturnStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0BreakStatement@@QAE@ULoc@@PAUIdentifier@@@Z
	public	?syntaxCopy@BreakStatement@@UAEPAUStatement@@XZ
	public	?semantic@BreakStatement@@UAEPAUStatement@@PAUScope@@@Z
	extrn	??_7ContinueStatement@@6B@

	public	?blockExit@BreakStatement@@UAEHXZ
	public	?toCBuffer@BreakStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GContinueStatement@@UAEPAXI@Z

	public	??0ContinueStatement@@QAE@ULoc@@PAUIdentifier@@@Z
	public	?syntaxCopy@ContinueStatement@@UAEPAUStatement@@XZ
	public	?semantic@ContinueStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@ContinueStatement@@UAEHXZ
	extrn	??_7SynchronizedStatement@@6B@
	extrn	??_GSynchronizedStatement@@UAEPAXI@Z

	public	?toCBuffer@ContinueStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0SynchronizedStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
	public	??0SynchronizedStatement@@QAE@ULoc@@PAUelem@@PAUStatement@@@Z
	public	?syntaxCopy@SynchronizedStatement@@UAEPAUStatement@@XZ
	public	?semantic@SynchronizedStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@SynchronizedStatement@@UAEHXZ
	public	?hasContinue@SynchronizedStatement@@UAEHXZ
	public	?usesEH@SynchronizedStatement@@UAEHXZ
	public	?blockExit@SynchronizedStatement@@UAEHXZ
	extrn	??_7WithStatement@@6B@
	extrn	??_GWithStatement@@UAEPAXI@Z

	public	?toCBuffer@SynchronizedStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0WithStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
	public	?syntaxCopy@WithStatement@@UAEPAUStatement@@XZ
	public	?semantic@WithStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?toCBuffer@WithStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?usesEH@WithStatement@@UAEHXZ
	extrn	??_7TryCatchStatement@@6B@
	extrn	??_GTryCatchStatement@@UAEPAXI@Z
	extrn	?isTryCatchStatement@TryCatchStatement@@UAEPAU1@XZ

	public	?blockExit@WithStatement@@UAEHXZ
	public	??0TryCatchStatement@@QAE@ULoc@@PAUStatement@@PAUArray@@@Z
	public	?syntaxCopy@TryCatchStatement@@UAEPAUStatement@@XZ
	public	?semantic@TryCatchStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?hasBreak@TryCatchStatement@@UAEHXZ
	public	?usesEH@TryCatchStatement@@UAEHXZ
	public	?blockExit@TryCatchStatement@@UAEHXZ
	extrn	??_7Catch@@6B@
	extrn	??_GCatch@@UAEPAXI@Z

	public	?toCBuffer@TryCatchStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0Catch@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUStatement@@@Z
	public	?syntaxCopy@Catch@@QAEPAU1@XZ
	public	?semantic@Catch@@QAEXPAUScope@@@Z
	public	?blockExit@Catch@@QAEHXZ
	extrn	??_7TryFinallyStatement@@6B@
	extrn	??_GTryFinallyStatement@@UAEPAXI@Z

	public	?toCBuffer@Catch@@QAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z
	public	?syntaxCopy@TryFinallyStatement@@UAEPAUStatement@@XZ
	public	?semantic@TryFinallyStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?toCBuffer@TryFinallyStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?hasBreak@TryFinallyStatement@@UAEHXZ
	extrn	??_7OnScopeStatement@@6B@

	public	?hasContinue@TryFinallyStatement@@UAEHXZ
	public	?usesEH@TryFinallyStatement@@UAEHXZ
	public	?blockExit@TryFinallyStatement@@UAEHXZ
	extrn	??_GOnScopeStatement@@UAEPAXI@Z

	public	??0OnScopeStatement@@QAE@ULoc@@W4TOK@@PAUStatement@@@Z
	public	?syntaxCopy@OnScopeStatement@@UAEPAUStatement@@XZ
	public	?semantic@OnScopeStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@OnScopeStatement@@UAEHXZ
	public	?toCBuffer@OnScopeStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?usesEH@OnScopeStatement@@UAEHXZ
	extrn	??_7ThrowStatement@@6B@
	extrn	??_GThrowStatement@@UAEPAXI@Z

	public	?scopeCode@OnScopeStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z
	public	??0ThrowStatement@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@ThrowStatement@@UAEPAUStatement@@XZ
	public	?semantic@ThrowStatement@@UAEPAUStatement@@PAUScope@@@Z
	extrn	??_7VolatileStatement@@6B@

	public	?blockExit@ThrowStatement@@UAEHXZ
	public	?toCBuffer@ThrowStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GVolatileStatement@@UAEPAXI@Z

	public	??0VolatileStatement@@QAE@ULoc@@PAUStatement@@@Z
	public	?syntaxCopy@VolatileStatement@@UAEPAUStatement@@XZ
	public	?semantic@VolatileStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?flatten@VolatileStatement@@UAEPAUStatements@@PAUScope@@@Z
	extrn	??_7GotoStatement@@6B@

	public	?blockExit@VolatileStatement@@UAEHXZ
	public	?toCBuffer@VolatileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GGotoStatement@@UAEPAXI@Z
	extrn	?isGotoStatement@GotoStatement@@UAEPAU1@XZ

	public	??0GotoStatement@@QAE@ULoc@@PAUIdentifier@@@Z
	public	?syntaxCopy@GotoStatement@@UAEPAUStatement@@XZ
	extrn	??_7LabelStatement@@6B@

	public	?semantic@GotoStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?blockExit@GotoStatement@@UAEHXZ
	public	?toCBuffer@GotoStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_GLabelStatement@@UAEPAXI@Z

	public	??0LabelStatement@@QAE@ULoc@@PAUIdentifier@@PAUStatement@@@Z
	public	?syntaxCopy@LabelStatement@@UAEPAUStatement@@XZ
	public	?semantic@LabelStatement@@UAEPAUStatement@@PAUScope@@@Z
	public	?flatten@LabelStatement@@UAEPAUStatements@@PAUScope@@@Z
	public	?usesEH@LabelStatement@@UAEHXZ
	public	?blockExit@LabelStatement@@UAEHXZ
	public	?comeFrom@LabelStatement@@UAEHXZ
	extrn	??_7LabelDsymbol@@6B@
	extrn	??_7Dsymbol@@6B@
	extrn	??_GLabelDsymbol@@UAEPAXI@Z
	extrn	?dyncast@Dsymbol@@UAEHXZ
	extrn	?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z
	extrn	?checkCtorConstInit@Dsymbol@@UAEXXZ
	extrn	?isPackage@Dsymbol@@UAEPAUPackage@@XZ
	extrn	?isModule@Dsymbol@@UAEPAUModule@@XZ
	extrn	?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ
	extrn	?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ
	extrn	?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ
	extrn	?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ
	extrn	?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ
	extrn	?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ
	extrn	?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ
	extrn	?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ
	extrn	?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ
	extrn	?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	extrn	?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ
	extrn	?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ
	extrn	?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ
	extrn	?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ
	extrn	?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ
	extrn	?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ
	extrn	?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ
	extrn	?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ
	extrn	?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ
	extrn	?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ
	extrn	?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ
	extrn	?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ
	extrn	?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ
	extrn	?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ
	extrn	?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ
	extrn	?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ
	extrn	?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ
	extrn	?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ
	extrn	?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ
	extrn	?isImport@Dsymbol@@UAEPAUImport@@XZ
	extrn	?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ
	extrn	?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ
	extrn	?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ
	extrn	?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ
	extrn	?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ
	extrn	??_GDsymbol@@UAEPAXI@Z

	public	?toCBuffer@LabelStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0LabelDsymbol@@QAE@PAUIdentifier@@@Z
	extrn	??_7AsmStatement@@6B@
	extrn	??_GAsmStatement@@UAEPAXI@Z
	extrn	?isAsmStatement@AsmStatement@@UAEPAU1@XZ

	public	?isLabel@LabelDsymbol@@UAEPAU1@XZ
	public	??0AsmStatement@@QAE@ULoc@@PAUToken@@@Z
	public	?syntaxCopy@AsmStatement@@UAEPAUStatement@@XZ
includelib SNN.lib
	extrn	?writenl@OutBuffer@@QAEXXZ
	extrn	?writestring@OutBuffer@@QAEXPBD@Z
	extrn	?writeByte@OutBuffer@@QAEXI@Z
	extrn	?toChars@Token@@QAEPBDXZ
	extrn	??2@YAPAXI@Z
	extrn	??3@YAXPAX@Z
	extrn	?toIR@AsmStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	extrn	?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	extrn	?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	extrn	?interpret@AsmStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?semantic@AsmStatement@@UAEPAUStatement@@PAUScope@@@Z
	extrn	?dyncast@Object@@UAEHXZ
	extrn	?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	extrn	?toDchars@Object@@UAEPADXZ
	extrn	?compare@Object@@UAEHPAU1@@Z
	extrn	?hashCode@Object@@UAEIXZ
	extrn	?equals@Object@@UAEHPAU1@@Z
	extrn	?cvMember@Dsymbol@@UAEHPAE@Z
	extrn	?toObjFile@Dsymbol@@UAEXH@Z
	extrn	?toSymbol@Dsymbol@@UAEPAUSymbol@@XZ
	extrn	?emitComment@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?addComment@Dsymbol@@UAEXPAE@Z
	extrn	?hasPointers@Dsymbol@@UAEHXZ
	extrn	?oneMember@Dsymbol@@UAEHPAPAU1@@Z
	extrn	?syntaxCopy@Dsymbol@@UAEPAU1@PAU1@@Z
	extrn	?prot@Dsymbol@@UAE?AW4PROT@@XZ
	extrn	?needThis@Dsymbol@@UAEHXZ
	extrn	?mangle@Dsymbol@@UAEPADXZ
	extrn	?getType@Dsymbol@@UAEPAUType@@XZ
	extrn	?isMember@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	extrn	?isLabel@Dsymbol@@UAEPAULabelDsymbol@@XZ
	extrn	?isDeprecated@Dsymbol@@UAEHXZ
	extrn	?isImportedSymbol@Dsymbol@@UAEHXZ
	extrn	?isExport@Dsymbol@@UAEHXZ
	extrn	?isClassMember@Dsymbol@@UAEPAUClassDeclaration@@XZ
	extrn	?isThis@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	extrn	?defineRef@Dsymbol@@UAEXPAU1@@Z
	extrn	?isforwardRef@Dsymbol@@UAEHXZ
	extrn	?size@Dsymbol@@UAEIULoc@@@Z
	extrn	?toJsonBuffer@Dsymbol@@UAEXPAUOutBuffer@@@Z
	extrn	?toDocBuffer@Dsymbol@@UAEXPAUOutBuffer@@@Z
	extrn	?toCBuffer@Dsymbol@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	?toHBuffer@Dsymbol@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	?overloadInsert@Dsymbol@@UAEHPAU1@@Z
	extrn	?search@Dsymbol@@UAEPAU1@ULoc@@PAUIdentifier@@H@Z
	extrn	?inlineScan@Dsymbol@@UAEXXZ
	extrn	?semantic3@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?semantic2@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?semantic@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?semantic0@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?importAll@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?setScope@Dsymbol@@UAEXPAUScope@@@Z
	extrn	?addMember@Dsymbol@@UAEHPAUScope@@PAUScopeDsymbol@@H@Z
	extrn	?toAlias@Dsymbol@@UAEPAU1@XZ
	extrn	?kind@Dsymbol@@UAEPBDXZ
	extrn	?toPrettyChars@Dsymbol@@UAEPBDXZ
	extrn	?toChars@Dsymbol@@UAEPADXZ
	extrn	?print@Object@@UAEXXZ
	extrn	?equals@Dsymbol@@UAEHPAUObject@@@Z
	extrn	??0Dsymbol@@QAE@PAUIdentifier@@@Z
	extrn	?push@Array@@QAEXPAX@Z
	extrn	?pop@Scope@@QAEPAU1@XZ
	extrn	?push@Scope@@QAEPAU1@XZ
	extrn	?searchLabel@FuncDeclaration@@QAEPAULabelDsymbol@@PAUIdentifier@@@Z
	extrn	?toIR@LabelStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@LabelStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@LabelStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	??0Array@@QAE@XZ
	extrn	?toIR@GotoStatement@@UAEXPAUIRState@@@Z
	extrn	?interpret@GotoStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@VolatileStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@VolatileStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?printf@OutBuffer@@QAAXPBDZZ
	extrn	?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
	extrn	?toIR@ThrowStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@ThrowStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@ThrowStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	__assert
	extrn	??0NotExp@@QAE@ULoc@@PAUExpression@@@Z
	extrn	??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
	extrn	??0AssignExp@@QAE@ULoc@@PAUExpression@@1@Z
	extrn	??0IntegerExp@@QAE@_K@Z
	extrn	??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
	extrn	?basic@Type@@2QAPAU1@A
	extrn	??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
	extrn	?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
	extrn	?toChars@Token@@SAPBDW4TOK@@@Z
	extrn	?toIR@OnScopeStatement@@UAEXPAUIRState@@@Z
	extrn	?interpret@OnScopeStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@TryFinallyStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@TryFinallyStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@TryFinallyStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
	extrn	?error@@YAXULoc@@PBDZZ
	extrn	??0TypeIdentifier@@QAE@ULoc@@PAUIdentifier@@@Z
	extrn	?Object@Id@@2PAUIdentifier@@A
	extrn	?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
	extrn	??0ScopeDsymbol@@QAE@XZ
	extrn	?toChars@Object@@UAEPADXZ
	extrn	?toChars@Loc@@QAEPADXZ
	extrn	?setDim@Array@@QAEXI@Z
	extrn	?toIR@TryCatchStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@TryCatchStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@TryCatchStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	??0WithScopeSymbol@@QAE@PAUWithStatement@@@Z
	extrn	?withSym@Id@@2PAUIdentifier@@A
	extrn	?addressOf@Expression@@QAEPAU1@PAUScope@@@Z
	extrn	?toIR@WithStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@WithStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@WithStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	??0CallExp@@QAE@ULoc@@PAUExpression@@1@Z
	extrn	??0DotIdExp@@QAE@ULoc@@PAUExpression@@PAUIdentifier@@@Z
	extrn	?ptr@Id@@2PAUIdentifier@@A
	extrn	?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PAUIdentifier@@@Z
	extrn	?criticalexit@Id@@2PAUIdentifier@@A
	extrn	?criticalenter@Id@@2PAUIdentifier@@A
	extrn	??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
	extrn	??0TypeSArray@@QAE@PAUType@@PAUExpression@@@Z
	extrn	?PTRSIZE@@3HA
	extrn	?os_critsecsize@@YAHXZ
	extrn	?monitorexit@Id@@2PAUIdentifier@@A
	extrn	?monitorenter@Id@@2PAUIdentifier@@A
	extrn	??0CastExp@@QAE@ULoc@@PAUExpression@@PAUType@@@Z
	extrn	?toIR@SynchronizedStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@SynchronizedStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?toIR@ContinueStatement@@UAEXPAUIRState@@@Z
	extrn	?interpret@ContinueStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@BreakStatement@@UAEXPAUIRState@@@Z
	extrn	?interpret@BreakStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?returnLabel@Id@@2PAUIdentifier@@A
	extrn	??0ConstructExp@@QAE@ULoc@@PAUExpression@@1@Z
	extrn	?result@Id@@2PAUIdentifier@@A
	extrn	?toParent2@Dsymbol@@QAEPAU1@XZ
	extrn	??0ThisExp@@QAE@ULoc@@@Z
	extrn	?isMain@FuncDeclaration@@QAEHXZ
	extrn	?toIR@ReturnStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@ReturnStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?doInline@ReturnStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	extrn	?inlineCost@ReturnStatement@@UAEHPAUInlineCostState@@@Z
	extrn	?interpret@ReturnStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@SwitchErrorStatement@@UAEXPAUIRState@@@Z
	extrn	?toIR@GotoCaseStatement@@UAEXPAUIRState@@@Z
	extrn	?interpret@GotoCaseStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@GotoDefaultStatement@@UAEXPAUIRState@@@Z
	extrn	?interpret@GotoDefaultStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@DefaultStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@DefaultStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@DefaultStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?remove@Array@@QAEXI@Z
	extrn	?toIR@CaseStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@CaseStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@CaseStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?reserve@Array@@QAEXI@Z
	extrn	??0HaltExp@@QAE@ULoc@@@Z
	extrn	?global@@3UGlobal@@A
	extrn	?checkIntegral@Expression@@QAEPAU1@XZ
	extrn	?integralPromotions@Expression@@QAEPAU1@PAUScope@@@Z
	extrn	?arrayOf@Type@@QAEPAU1@XZ
	extrn	??1Array@@UAE@XZ
	extrn	?toIR@SwitchStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@SwitchStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@SwitchStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@Statement@@UAEXPAUIRState@@@Z
	extrn	?argsToCBuffer@@YAXPAUOutBuffer@@PAUExpressions@@PAUHdrGenState@@@Z
	extrn	?lib@Id@@2PAUIdentifier@@A
	extrn	_fprintf
	extrn	__iob
	extrn	?msg@Id@@2PAUIdentifier@@A
	extrn	?arraySyntaxCopy@Expression@@SAPAUExpressions@@PAU2@@Z
	extrn	?mergeCallSuper@Scope@@QAEXULoc@@I@Z
	extrn	?syntaxCopy@Parameter@@QAEPAU1@XZ
	extrn	?toIR@IfStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@IfStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?doInline@IfStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	extrn	?inlineCost@IfStatement@@UAEHPAUInlineCostState@@@Z
	extrn	?interpret@IfStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	??0CallExp@@QAE@ULoc@@PAUExpression@@PAUExpressions@@@Z
	extrn	?apply@Id@@2PAUIdentifier@@A
	extrn	?applyReverse@Id@@2PAUIdentifier@@A
	extrn	?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PBD@Z
	extrn	_sprintf
	extrn	??0IntegerExp@@QAE@ULoc@@_KPAUType@@@Z
	extrn	?Tsize_t@@3HA
	extrn	?size@Type@@QAE_KXZ
	extrn	??0FuncExp@@QAE@ULoc@@PAUFuncLiteralDeclaration@@@Z
	extrn	??0FuncLiteralDeclaration@@QAE@ULoc@@0PAUType@@W4TOK@@PAUForeachStatement@@@Z
	extrn	??0TypeFunction@@QAE@PAUParameters@@PAUType@@HW4LINK@@@Z
	extrn	??0Parameter@@QAE@_KPAUType@@PAUIdentifier@@PAUExpression@@@Z
	extrn	??0IdentifierExp@@QAE@ULoc@@PAUIdentifier@@@Z
	extrn	?uniqueId@Lexer@@SAPAUIdentifier@@PBDH@Z
	extrn	??0IndexExp@@QAE@ULoc@@PAUExpression@@1@Z
	extrn	??0AddAssignExp@@QAE@ULoc@@PAUExpression@@1@Z
	extrn	??0CmpExp@@QAE@W4TOK@@ULoc@@PAUExpression@@2@Z
	extrn	??0PostExp@@QAE@W4TOK@@ULoc@@PAUExpression@@@Z
	extrn	?length@Id@@2PAUIdentifier@@A
	extrn	??0SliceExp@@QAE@ULoc@@PAUExpression@@11@Z
	extrn	??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUType@@@Z
	extrn	??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUDsymbol@@@Z
	extrn	?getNth@Parameter@@SAPAU1@PAUParameters@@IPAI@Z
	extrn	?dim@Parameter@@SAIPAUParameters@@@Z
	extrn	?inferApplyArgTypes@@YAXW4TOK@@PAUParameters@@PAUExpression@@@Z
	extrn	?toChars@Array@@UAEPADXZ
	extrn	?arraySyntaxCopy@Parameter@@SAPAUParameters@@PAU2@@Z
	extrn	?toIR@ForeachStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@ForeachStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@ForeachStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@ForStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@ForStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@ForStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@DoStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@DoStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@DoStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@WhileStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@WhileStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@WhileStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@ScopeStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@ScopeStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?interpret@ScopeStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?toIR@UnrolledLoopStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@UnrolledLoopStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?doInline@UnrolledLoopStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	extrn	?inlineCost@UnrolledLoopStatement@@UAEHPAUInlineCostState@@@Z
	extrn	?interpret@UnrolledLoopStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?stcToCBuffer@StorageClassDeclaration@@SAXPAUOutBuffer@@_K@Z
	extrn	?toIR@CompoundStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@CompoundStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?doInline@CompoundStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	extrn	?inlineCost@CompoundStatement@@UAEHPAUInlineCostState@@@Z
	extrn	?interpret@CompoundStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?insert@Array@@QAEXIPAU1@@Z
	extrn	?callAutoDtor@VarDeclaration@@QAEPAUExpression@@PAUScope@@@Z
	extrn	?toIR@ExpStatement@@UAEXPAUIRState@@@Z
	extrn	?inlineScan@ExpStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	extrn	?doInline@ExpStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	extrn	?inlineCost@ExpStatement@@UAEHPAUInlineCostState@@@Z
	extrn	?interpret@ExpStatement@@UAEPAUExpression@@PAUInterState@@@Z
	extrn	?parseStatement@Parser@@QAEPAUStatement@@H@Z
	extrn	?nextToken@Lexer@@QAE?AW4TOK@@XZ
	extrn	??0Parser@@QAE@PAUModule@@PAEIH@Z
	extrn	?toUTF8@StringExp@@QAEPAU1@PAUScope@@@Z
	extrn	_printf
	extrn	?vwarning@@YAXULoc@@PBDPAD@Z
	extrn	?verror@@YAXULoc@@PBDPAD@Z
	extrn	??0OutBuffer@@QAE@XZ
	extrn	_memset
	extrn	_fflush

	public	?comeFrom@AsmStatement@@UAEHXZ
	public	?blockExit@AsmStatement@@UAEHXZ
	public	?toCBuffer@AsmStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
??_7Object@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7Statement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GObject@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_GStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isIfStatement@Statement@@UAEPAUIfStatement@@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7PeelStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GPeelStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ExpStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GExpStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7CompileStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GCompileStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7Statements@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GStatements@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7DeclarationStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GDeclarationStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isDeclarationStatement@DeclarationStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7CompoundStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GCompoundStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7CompoundDeclarationStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GCompoundDeclarationStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7UnrolledLoopStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GUnrolledLoopStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ScopeStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GScopeStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isScopeStatement@ScopeStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7WhileStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GWhileStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7DoStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GDoStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ForStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GForStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ForeachStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GForeachStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7Parameters@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7Expressions@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GParameters@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_GExpressions@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7IfStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GIfStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isIfStatement@IfStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7ConditionalStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GConditionalStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7PragmaStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GPragmaStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7StaticAssertStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GStaticAssertStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7SwitchStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GSwitchStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7CaseStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GCaseStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7DefaultStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GDefaultStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7GotoDefaultStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GGotoDefaultStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7GotoCaseStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GGotoCaseStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7SwitchErrorStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GSwitchErrorStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ReturnStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GReturnStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isReturnStatement@ReturnStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7BreakStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GBreakStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ContinueStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GContinueStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7SynchronizedStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GSynchronizedStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7WithStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GWithStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7TryCatchStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GTryCatchStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isTryCatchStatement@TryCatchStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7Catch@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GCatch@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7TryFinallyStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GTryFinallyStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7OnScopeStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GOnScopeStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7ThrowStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GThrowStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7VolatileStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GVolatileStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7GotoStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GGotoStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isGotoStatement@GotoStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_7LabelStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GLabelStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7LabelDsymbol@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7Dsymbol@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GLabelDsymbol@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?dyncast@Dsymbol@@UAEHXZ	COMDAT flags=x0 attr=x10 align=x0 
?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z	COMDAT flags=x0 attr=x10 align=x0 
?checkCtorConstInit@Dsymbol@@UAEXXZ	COMDAT flags=x0 attr=x10 align=x0 
?isPackage@Dsymbol@@UAEPAUPackage@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isModule@Dsymbol@@UAEPAUModule@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isImport@Dsymbol@@UAEPAUImport@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ	COMDAT flags=x0 attr=x10 align=x0 
?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ	COMDAT flags=x0 attr=x10 align=x0 
??_GDsymbol@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_7AsmStatement@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GAsmStatement@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
?isAsmStatement@AsmStatement@@UAEPAU1@XZ	COMDAT flags=x0 attr=x10 align=x0 

_TEXT	segment
	assume	CS:_TEXT
??0Statement@@QAE@ULoc@@@Z:
		push	EBX
		mov	EBX,ECX
		mov	EAX,8[ESP]
		mov	dword ptr [ECX],offset FLAT:??_7Object@@6B@
		mov	EDX,0Ch[ESP]
		mov	4[EBX],EAX
		mov	EAX,ECX
		mov	8[EBX],EDX
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr 0Ch[EBX],0
		pop	EBX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@Statement@@UAEPAU1@XZ:
		push	ECX
		push	030h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0Ch]
		call	near ptr __assert
		xor	EAX,EAX
		pop	ECX
		ret
?print@Statement@@UAEXXZ:
		push	ECX
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		mov	ECX,offset FLAT:__iob[040h]
		push	EAX
		push	offset FLAT:_DATA[010h]
		push	ECX
		call	near ptr _fprintf
		mov	EDX,offset FLAT:__iob[040h]
		push	EDX
		call	near ptr _fflush
		add	ESP,010h
		pop	EAX
		ret
		nop
		nop
		nop
?toChars@Statement@@UAEPADXZ:
		sub	ESP,03Ch
		push	EBX
		push	ESI
		mov	040h[ESP],ECX
		push	034h
		push	0
		lea	EAX,014h[ESP]
		push	EAX
		call	near ptr _memset
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	LA0
		mov	ECX,EBX
		call	near ptr ??0OutBuffer@@QAE@XZ
		mov	EBX,EAX
LA0:		lea	EDX,018h[ESP]
		mov	ECX,04Ch[ESP]
		push	EDX
		mov	ESI,[ECX]
		push	EBX
		call	dword ptr 028h[ESI]
		add	ESP,0Ch
		mov	EAX,[EBX]
		mov	ECX,EBX
		call	dword ptr 014h[EAX]
		pop	ESI
		pop	EBX
		add	ESP,03Ch
		ret
		nop
?toCBuffer@Statement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	offset FLAT:_DATA[014h]
		push	dword ptr 0Ch[ESP]
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		mov	ECX,010h[ESP]
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		add	ESP,8
		pop	EAX
		ret	8
		nop
?semantic@Statement@@UAEPAU1@PAUScope@@@Z:
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret	4
?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z:
		push	EBX
		mov	EBX,ECX
		mov	EDX,[EBX]
		push	ESI
		mov	ESI,ECX
		push	EDI
		call	dword ptr 078h[EDX]
		test	EAX,EAX
		jne	L124
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 038h[EDX]
		test	EAX,EAX
		jne	L124
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L122
		mov	ECX,EDI
		push	EBX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	EDI,EAX
L122:		mov	ESI,EDI
L124:		push	dword ptr 010h[ESP]
		mov	EAX,[ESI]
		mov	ECX,ESI
		call	dword ptr 03Ch[EAX]
		pop	EDI
		pop	ESI
		pop	EBX
		ret	4
?semanticScope@Statement@@QAEPAU1@PAUScope@@PAU1@1@Z:
		push	ECX
		push	ECX
		mov	ECX,0Ch[ESP]
		push	EBX
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		mov	EBX,EAX
		cmp	dword ptr 014h[ESP],0
		je	L151
		mov	EAX,014h[ESP]
		mov	028h[EBX],EAX
L151:		cmp	dword ptr 018h[ESP],0
		je	L15F
		mov	EDX,018h[ESP]
		mov	02Ch[EBX],EDX
L15F:		push	EBX
		mov	ECX,0Ch[ESP]
		call	near ptr ?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z
		mov	ECX,EBX
		mov	4[ESP],EAX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,4[ESP]
		pop	EBX
		add	ESP,8
		ret	0Ch
		nop
?error@Statement@@QAAXPBDZZ:
		push	EAX
		lea	EAX,010h[ESP]
		push	EAX
		push	dword ptr 010h[ESP]
		mov	ECX,010h[ESP]
		push	dword ptr 8[ECX]
		push	dword ptr 4[ECX]
		call	near ptr ?verror@@YAXULoc@@PBDPAD@Z
		add	ESP,010h
		pop	EAX
		ret
		nop
		nop
?warning@Statement@@QAAXPBDZZ:
		push	EAX
		lea	EAX,010h[ESP]
		push	EAX
		push	dword ptr 010h[ESP]
		mov	ECX,010h[ESP]
		push	dword ptr 8[ECX]
		push	dword ptr 4[ECX]
		call	near ptr ?vwarning@@YAXULoc@@PBDPAD@Z
		add	ESP,010h
		pop	EAX
		ret
		nop
		nop
?hasBreak@Statement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?hasContinue@Statement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?usesEH@Statement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?blockExit@Statement@@UAEHXZ:
		push	EBX
		mov	EBX,ECX
		push	ECX
		push	offset FLAT:_DATA[02Ch]
		call	near ptr _printf
		mov	EAX,[EBX]
		mov	ECX,EBX
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[010h]
		call	near ptr _printf
		push	090h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0Ch]
		call	near ptr __assert
		add	ESP,010h
		mov	EAX,01Fh
		pop	EBX
		ret
?comeFrom@Statement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isEmpty@Statement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
		nop
		nop
		nop
?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z:
		push	ECX
		mov	EDX,0Ch[ESP]
		xor	EAX,EAX
		push	EBX
		mov	EBX,014h[ESP]
		push	ESI
		mov	ESI,01Ch[ESP]
		mov	[EDX],EAX
		mov	[EBX],EAX
		mov	[ESI],EAX
		pop	ESI
		pop	EBX
		pop	EAX
		ret	010h
		nop
		nop
		nop
?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret	4
??0PeelStatement@@QAE@PAUStatement@@@Z:
		push	EBX
		mov	EAX,8[ESP]
		mov	EBX,ECX
		push	dword ptr 8[EAX]
		push	dword ptr 4[EAX]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	ECX,8[ESP]
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7PeelStatement@@6B@
		mov	010h[EBX],ECX
		pop	EBX
		ret	4
		nop
		nop
		nop
		nop
?semantic@PeelStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EAX,010h[ECX]
		pop	ECX
		ret	4
??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ExpStatement@@6B@
		pop	EBX
		ret	0Ch
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@ExpStatement@@UAEPAUStatement@@XZ:
		sub	ESP,0Ch
		push	EBX
		push	ESI
		mov	010h[ESP],ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L2B9
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		jmp short	L2BB
L2B9:		xor	EAX,EAX
L2BB:		mov	0Ch[ESP],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2E6
		mov	ECX,EBX
		push	dword ptr 0Ch[ESP]
		mov	ESI,014h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L2E6:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
		nop
		nop
?toCBuffer@ExpStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	EBX
		mov	EBX,0Ch[ESP]
		push	ESI
		je	L30A
		push	dword ptr 014h[ESP]
		mov	EDX,[EAX]
		mov	ECX,EAX
		push	EBX
		call	dword ptr 048h[EDX]
L30A:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ESI,014h[ESP]
		cmp	dword ptr 02Ch[ESI],0
		jne	L324
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
L324:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
?semantic@ExpStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	EBX
		mov	EBX,ECX
		push	ESI
		je	L3AE
		push	dword ptr 010h[ESP]
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 028h[EDX]
		push	EAX
		mov	010h[EBX],EAX
		push	dword ptr 014h[ESP]
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	010h[EBX],EAX
		mov	ESI,[EAX]
		push	0
		call	dword ptr 088h[ESI]
		mov	ECX,010h[EBX]
		mov	EAX,[ECX]
		push	0
		call	dword ptr 074h[EAX]
		mov	010h[EBX],EAX
		add	ESP,8
		cmp	dword ptr 0Ch[EAX],026h
		jne	L3AE
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 074h[EDX]
		test	EAX,EAX
		jne	L3AE
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L3A6
		mov	ECX,ESI
		push	dword ptr 010h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L3A6:		mov	EAX,ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	4
L3AE:		pop	ESI
		mov	EAX,EBX
		pop	EBX
		pop	ECX
		ret	4
?blockExit@ExpStatement@@UAEHXZ:
		sub	ESP,0Ch
		push	EBX
		push	ESI
		mov	010h[ESP],ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		mov	dword ptr 0Ch[ESP],1
		je	L415
		mov	EDX,0Ch[EAX]
		cmp	EDX,07Dh
		je	L3EF
		cmp	EDX,0Eh
		jne	L3FA
		push	0
		mov	EBX,018h[EAX]
		mov	ESI,[EBX]
		mov	ECX,018h[EAX]
		call	dword ptr 080h[ESI]
		test	EAX,EAX
		je	L3FA
L3EF:		pop	ESI
		mov	EAX,010h
		pop	EBX
		add	ESP,0Ch
		ret
L3FA:		mov	EAX,010h[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 08Ch[EDX]
		test	EAX,EAX
		je	L415
		mov	dword ptr 0Ch[ESP],3
L415:		mov	EAX,0Ch[ESP]
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
		nop
?isEmpty@ExpStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		neg	EAX
		sbb	EAX,EAX
		inc	EAX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
??0CompileStatement@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7CompileStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@CompileStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		call	dword ptr 024h[EAX]
		mov	4[ESP],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L489
		mov	ECX,EBX
		push	dword ptr 4[ESP]
		mov	EDX,0Ch[ESP]
		push	dword ptr 8[EDX]
		push	dword ptr 4[EDX]
		call	near ptr ??0CompileStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L489:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?toCBuffer@CompileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[048h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	offset FLAT:_DATA[050h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ESI,014h[ESP]
		cmp	dword ptr 02Ch[ESI],0
		jne	L4D1
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
L4D1:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
?flatten@CompileStatement@@UAEPAUStatements@@PAUScope@@@Z:
		sub	ESP,0E8h
		push	EBX
		push	ESI
		push	EDI
		mov	EBX,0F8h[ESP]
		mov	078h[ESP],ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		call	dword ptr 028h[EAX]
		mov	EDX,078h[ESP]
		push	EAX
		mov	010h[EDX],EAX
		push	EBX
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ESI,080h[ESP]
		mov	ECX,EAX
		mov	010h[ESI],EAX
		mov	EDI,[EAX]
		push	6
		call	dword ptr 074h[EDI]
		mov	EDX,080h[ESP]
		mov	010h[EDX],EAX
		add	ESP,8
		cmp	dword ptr 0Ch[EAX],07Ah
		je	L557
		mov	EDX,078h[ESP]
		mov	ECX,010h[EDX]
		mov	EBX,[ECX]
		call	dword ptr 014h[EBX]
		push	EAX
		push	offset FLAT:_DATA[054h]
		push	dword ptr 080h[ESP]
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		xor	EAX,EAX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0E8h
		ret	4
L557:		mov	0F8h[ESP],EBX
		mov	ECX,EAX
		push	0
		push	dword ptr 0FCh[ESP]
		call	near ptr ?toUTF8@StringExp@@QAEPAU1@PAUScope@@@Z
		push	dword ptr 01Ch[EAX]
		push	dword ptr 018h[EAX]
		mov	EAX,0104h[ESP]
		push	dword ptr 4[EAX]
		lea	ECX,020h[ESP]
		call	near ptr ??0Parser@@QAE@PAUModule@@PAEIH@Z
		mov	ESI,078h[ESP]
		mov	EDX,8[ESI]
		mov	EAX,4[ESI]
		lea	ECX,010h[ESP]
		mov	010h[ESP],EAX
		mov	014h[ESP],EDX
		call	near ptr ?nextToken@Lexer@@QAE?AW4TOK@@XZ
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5BF
		mov	ECX,EBX
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EBX],offset FLAT:??_7Statements@@6B@
L5BF:		cmp	dword ptr 030h[ESP],0Bh
		je	L5E0
L5C6:		push	9
		lea	ECX,014h[ESP]
		call	near ptr ?parseStatement@Parser@@QAEPAUStatement@@H@Z
		mov	ECX,EBX
		push	EAX
		call	near ptr ?push@Array@@QAEXPAX@Z
		cmp	dword ptr 030h[ESP],0Bh
		jne	L5C6
L5E0:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0E8h
		ret	4
		nop
		nop
?semantic@CompileStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,ECX
		mov	EAX,[EBX]
		push	dword ptr 010h[ESP]
		call	dword ptr 05Ch[EAX]
		test	EAX,EAX
		mov	4[ESP],EAX
		jne	L60F
		pop	EBX
		add	ESP,8
		xor	EAX,EAX
		ret	4
L60F:		mov	8[ESP],EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L63A
		push	dword ptr 4[ESP]
		mov	ECX,0Ch[ESP]
		push	dword ptr 8[ECX]
		push	dword ptr 4[ECX]
		mov	ECX,EBX
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EBX,EAX
L63A:		mov	EDX,[EBX]
		mov	ECX,EBX
		push	dword ptr 010h[ESP]
		call	dword ptr 03Ch[EDX]
		pop	EBX
		add	ESP,8
		ret	4
		nop
		nop
		nop
		nop
??0DeclarationStatement@@QAE@ULoc@@PAUDsymbol@@@Z:
		push	ECX
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L67A
		mov	ECX,EBX
		push	dword ptr 018h[ESP]
		push	dword ptr 018h[ESP]
		push	dword ptr 018h[ESP]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	EBX,EAX
L67A:		mov	EDX,EBX
		mov	ECX,ESI
		push	EBX
		push	dword ptr 018h[ESP]
		push	dword ptr 018h[ESP]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EAX,ESI
		mov	dword ptr [ESI],offset FLAT:??_7DeclarationStatement@@6B@
		pop	ESI
		pop	EBX
		pop	ECX
		ret	0Ch
		nop
		nop
		nop
		nop
		nop
		nop
??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7DeclarationStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@DeclarationStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L6F3
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L6F3:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?scopeCode@DeclarationStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z:
		push	ECX
		mov	EDX,0Ch[ESP]
		xor	EAX,EAX
		push	ECX
		push	EBX
		mov	EBX,018h[ESP]
		push	ESI
		mov	ESI,020h[ESP]
		push	EDI
		mov	[EDX],EAX
		mov	[EBX],EAX
		mov	[ESI],EAX
		mov	EDI,010h[ECX]
		test	EDI,EDI
		je	L776
		cmp	dword ptr 0Ch[EDI],026h
		jne	L776
		mov	EBX,EDI
		mov	EAX,018h[EBX]
		mov	EDX,[EAX]
		mov	ECX,018h[EDI]
		call	dword ptr 0124h[EDX]
		test	EAX,EAX
		je	L776
		push	dword ptr 018h[ESP]
		mov	ECX,EAX
		call	near ptr ?callAutoDtor@VarDeclaration@@QAEPAUExpression@@PAUScope@@@Z
		test	EAX,EAX
		mov	0Ch[ESP],EAX
		je	L776
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L774
		mov	ECX,EBX
		push	dword ptr 0Ch[ESP]
		mov	EDI,014h[ESP]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L774:		mov	[ESI],EBX
L776:		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	010h
		nop
?toCBuffer@DeclarationStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	dword ptr 048h[EAX]
		pop	EAX
		ret	8
??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7CompoundStatement@@6B@
		pop	EBX
		ret	0Ch
??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	dword ptr [EBX],offset FLAT:??_7CompoundStatement@@6B@
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L7ED
		mov	ECX,ESI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [ESI],offset FLAT:??_7Statements@@6B@
L7ED:		mov	ECX,ESI
		mov	010h[EBX],ESI
		push	2
		call	near ptr ?reserve@Array@@QAEXI@Z
		mov	ECX,010h[EBX]
		push	dword ptr 018h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	ECX,010h[EBX]
		push	dword ptr 01Ch[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret	010h
		nop
		nop
		nop
		nop
		nop
		nop
		nop
??0CompoundStatement@@QAE@ULoc@@PAUStatement@@@Z:
		push	ECX
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	dword ptr [ESI],offset FLAT:??_7CompoundStatement@@6B@
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L855
		mov	ECX,EBX
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EBX],offset FLAT:??_7Statements@@6B@
L855:		mov	ECX,EBX
		mov	010h[ESI],EBX
		push	dword ptr 018h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EAX,ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	0Ch
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@CompoundStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L895
		mov	ECX,EBP
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr 0[EBP],offset FLAT:??_7Statements@@6B@
L895:		mov	EDX,010h[EDI]
		mov	ECX,EBP
		push	dword ptr 4[EDX]
		call	near ptr ?setDim@Array@@QAEXI@Z
		mov	EDX,010h[EDI]
		xor	EBX,EBX
		cmp	4[EDX],EBX
		je	L8D1
L8AC:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	L8C2
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 024h[EDX]
		mov	ESI,EAX
L8C2:		mov	ECX,8[EBP]
		mov	[EBX*4][ECX],ESI
		mov	EDX,010h[EDI]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L8AC
L8D1:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L8F1
		mov	ECX,EBX
		push	EBP
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EBX,EAX
L8F1:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?semantic@CompoundStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,0B4h
		push	EBX
		mov	EBX,ECX
		mov	EDX,010h[EBX]
		push	EBP
		push	ESI
		push	EDI
		xor	EDI,EDI
		mov	EBP,0C8h[ESP]
		cmp	4[EDX],EDI
		je	LE10
L921:		mov	ECX,010h[EBX]
		mov	EDX,8[ECX]
		mov	ESI,[EDI*4][EDX]
		test	ESI,ESI
		je	LE0A
		push	EBP
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 05Ch[EDX]
		test	EAX,EAX
		mov	014h[ESP],EAX
		je	L965
		push	EDI
		mov	ECX,010h[EBX]
		call	near ptr ?remove@Array@@QAEXI@Z
		mov	ECX,010h[EBX]
		push	dword ptr 014h[ESP]
		push	EDI
		call	near ptr ?insert@Array@@QAEXIPAU1@@Z
L958:		mov	EDX,010h[EBX]
		cmp	4[EDX],EDI
		ja	L921
		jmp	near ptr LE10
L965:		push	EBP
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 03Ch[EDX]
		mov	ECX,010h[EBX]
		mov	EDX,8[ECX]
		mov	ESI,EAX
		test	ESI,ESI
		mov	[EDI*4][EDX],ESI
		je	LE0A
		lea	ECX,020h[ESP]
		push	ECX
		lea	EDX,020h[ESP]
		push	EDX
		lea	ECX,020h[ESP]
		mov	EDX,[ESI]
		push	ECX
		mov	ECX,ESI
		push	EBP
		call	dword ptr 058h[EDX]
		cmp	dword ptr 018h[ESP],0
		je	L9B5
		push	EBP
		mov	ECX,01Ch[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	018h[ESP],EAX
		mov	ECX,010h[EBX]
		mov	EDX,8[ECX]
		mov	[EDI*4][EDX],EAX
L9B5:		cmp	dword ptr 01Ch[ESP],0
		je	LCD9
		mov	ECX,010h[EBX]
		lea	EDX,1[EDI]
		cmp	EDX,4[ECX]
		jne	L9E5
		cmp	dword ptr 020h[ESP],0
		jne	L9E5
		push	EBP
		mov	ECX,020h[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	01Ch[ESP],EAX
		jmp	near ptr LE0A
L9E5:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	024h[ESP],EAX
		je	LA08
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	EDX,024h[ESP]
		mov	dword ptr [EDX],offset FLAT:??_7Statements@@6B@
LA08:		mov	ECX,010h[EBX]
		lea	ESI,1[EDI]
		cmp	ESI,4[ECX]
		jae	LA2E
LA13:		mov	EDX,010h[EBX]
		mov	ECX,8[EDX]
		push	[ESI*4][ECX]
		mov	ECX,028h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,010h[EBX]
		inc	ESI
		cmp	4[EDX],ESI
		ja	LA13
LA2E:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	028h[ESP],EAX
		je	LA6B
		push	dword ptr 024h[ESP]
		mov	ECX,02Ch[ESP]
		mov	dword ptr 034h[ESP],0
		mov	dword ptr 030h[ESP],0
		mov	EDX,034h[ESP]
		mov	EAX,030h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	028h[ESP],EAX
LA6B:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	034h[ESP],EAX
		je	LAA8
		push	dword ptr 028h[ESP]
		mov	ECX,038h[ESP]
		mov	dword ptr 044h[ESP],0
		mov	dword ptr 040h[ESP],0
		mov	EDX,044h[ESP]
		mov	EAX,040h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ScopeStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	034h[ESP],EAX
LAA8:		push	offset FLAT:_DATA[084h]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
		mov	048h[ESP],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	058h[ESP],EAX
		je	LB31
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	04Ch[ESP],EAX
		je	LB05
		push	dword ptr 048h[ESP]
		mov	ECX,050h[ESP]
		mov	dword ptr 058h[ESP],0
		mov	dword ptr 054h[ESP],0
		mov	EDX,058h[ESP]
		mov	EAX,054h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0IdentifierExp@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	04Ch[ESP],EAX
LB05:		mov	EDX,04Ch[ESP]
		mov	ECX,058h[ESP]
		push	EDX
		mov	dword ptr 068h[ESP],0
		mov	dword ptr 064h[ESP],0
		mov	EDX,068h[ESP]
		mov	EAX,064h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ThrowStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	058h[ESP],EAX
LB31:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	068h[ESP],EAX
		je	LB72
		push	dword ptr 058h[ESP]
		push	dword ptr 024h[ESP]
		mov	ECX,070h[ESP]
		mov	dword ptr 07Ch[ESP],0
		mov	dword ptr 078h[ESP],0
		mov	EDX,07Ch[ESP]
		mov	EAX,078h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	068h[ESP],EAX
LB72:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	078h[ESP],EAX
		je	LB8F
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	078h[ESP],EAX
LB8F:		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	07Ch[ESP],EAX
		je	LBE1
		push	dword ptr 068h[ESP]
		push	dword ptr 04Ch[ESP]
		push	0
		mov	dword ptr 090h[ESP],0
		mov	dword ptr 08Ch[ESP],0
		mov	EDX,090h[ESP]
		mov	EAX,08Ch[ESP]
		push	EDX
		push	EAX
		mov	ECX,090h[ESP]
		call	near ptr ??0Catch@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUStatement@@@Z
		mov	07Ch[ESP],EAX
LBE1:		push	dword ptr 07Ch[ESP]
		mov	ECX,07Ch[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	088h[ESP],EAX
		je	LC44
		push	dword ptr 078h[ESP]
		push	dword ptr 03Ch[ESP]
		mov	dword ptr 09Ch[ESP],0
		mov	dword ptr 098h[ESP],0
		mov	EDX,09Ch[ESP]
		mov	EAX,098h[ESP]
		push	EDX
		push	EAX
		mov	ECX,098h[ESP]
		call	near ptr ??0TryCatchStatement@@QAE@ULoc@@PAUStatement@@PAUArray@@@Z
		mov	088h[ESP],EAX
LC44:		mov	ESI,088h[ESP]
		add	ESP,4
		cmp	dword ptr 020h[ESP],0
		je	LCB5
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	094h[ESP],EAX
		je	LCAE
		push	dword ptr 020h[ESP]
		push	dword ptr 088h[ESP]
		mov	dword ptr 0A8h[ESP],0
		mov	dword ptr 0A4h[ESP],0
		mov	EDX,0A8h[ESP]
		mov	EAX,0A4h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0A4h[ESP]
		call	near ptr ??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	094h[ESP],EAX
LCAE:		mov	ESI,094h[ESP]
LCB5:		push	EBP
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 03Ch[EDX]
		lea	ECX,1[EDI]
		mov	ESI,EAX
		push	ECX
		mov	ECX,010h[EBX]
		call	near ptr ?setDim@Array@@QAEXI@Z
		mov	ECX,010h[EBX]
		push	ESI
		call	near ptr ?push@Array@@QAEXPAX@Z
		jmp	near ptr LE10
LCD9:		cmp	dword ptr 020h[ESP],0
		je	LE0A
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A4h[ESP],EAX
		je	LD0D
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	EDX,0A4h[ESP]
		mov	dword ptr [EDX],offset FLAT:??_7Statements@@6B@
LD0D:		mov	ECX,010h[EBX]
		lea	ESI,1[EDI]
		cmp	ESI,4[ECX]
		jae	LD36
LD18:		mov	EDX,010h[EBX]
		mov	ECX,8[EDX]
		push	[ESI*4][ECX]
		mov	ECX,0A8h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,010h[EBX]
		inc	ESI
		cmp	4[EDX],ESI
		ja	LD18
LD36:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A8h[ESP],EAX
		je	LD8B
		push	dword ptr 0A4h[ESP]
		mov	dword ptr 0B4h[ESP],0
		mov	dword ptr 0B0h[ESP],0
		mov	EDX,0B4h[ESP]
		mov	EAX,0B0h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0B4h[ESP]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	0A8h[ESP],EAX
LD8B:		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B4h[ESP],EAX
		je	LDE4
		push	dword ptr 020h[ESP]
		push	dword ptr 0ACh[ESP]
		mov	dword ptr 0C8h[ESP],0
		mov	dword ptr 0C4h[ESP],0
		mov	EDX,0C8h[ESP]
		mov	EAX,0C4h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0C4h[ESP]
		call	near ptr ??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	0B4h[ESP],EAX
LDE4:		push	EBP
		mov	ECX,0B8h[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		lea	ECX,1[EDI]
		mov	ESI,EAX
		push	ECX
		mov	ECX,010h[EBX]
		call	near ptr ?setDim@Array@@QAEXI@Z
		mov	ECX,010h[EBX]
		push	ESI
		call	near ptr ?push@Array@@QAEXPAX@Z
		jmp short	LE10
LE0A:		inc	EDI
		jmp	near ptr L958
LE10:		mov	EAX,010h[EBX]
		cmp	dword ptr 4[EAX],1
		jne	LE2E
		mov	ESI,010h[EBX]
		mov	ECX,8[ESI]
		mov	EAX,[ECX]
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0B4h
		ret	4
LE2E:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0B4h
		ret	4
		nop
		nop
		nop
?flatten@CompoundStatement@@UAEPAUStatements@@PAUScope@@@Z:
		push	ECX
		mov	EAX,010h[ECX]
		pop	ECX
		ret	4
?isReturnStatement@CompoundStatement@@UAEPAUReturnStatement@@XZ:
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	EBP
		xor	EBP,EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],EBX
		je	LE7E
LE5B:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	LE75
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 07Ch[EDX]
		mov	EBP,EAX
		test	EAX,EAX
		jne	LE7E
LE75:		mov	ECX,010h[EDI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	LE5B
LE7E:		pop	EDI
		mov	EAX,EBP
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
?toCBuffer@CompoundStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	EBP
		mov	EBP,010h[ESP]
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],EBX
		je	LEBD
LE9B:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	LEB4
		push	dword ptr 01Ch[ESP]
		mov	EDX,[ESI]
		mov	ECX,ESI
		push	EBP
		call	dword ptr 028h[EDX]
LEB4:		mov	ECX,010h[EDI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	LE9B
LEBD:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	EAX
		ret	8
?usesEH@CompoundStatement@@UAEHXZ:
		push	EBX
		push	ESI
		xor	ESI,ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],ESI
		je	LEFE
LED4:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	EBX,[ESI*4][EDX]
		test	EBX,EBX
		je	LEF5
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 048h[EDX]
		test	EAX,EAX
		je	LEF5
		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBX
		ret
LEF5:		mov	ECX,010h[EDI]
		inc	ESI
		cmp	4[ECX],ESI
		ja	LED4
LEFE:		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBX
		ret
?blockExit@CompoundStatement@@UAEHXZ:
		push	ECX
		push	EBX
		push	EBP
		mov	EBP,ECX
		mov	EDX,010h[EBP]
		push	ESI
		mov	ESI,1
		push	EDI
		xor	EDI,EDI
		cmp	4[EDX],EDI
		je	LF79
LF1A:		mov	ECX,010h[EBP]
		mov	EDX,8[ECX]
		mov	EBX,[EDI*4][EDX]
		test	EBX,EBX
		je	LF70
		test	ESI,1
		jne	LF61
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 050h[EDX]
		test	EAX,EAX
		jne	LF61
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 04Ch[EDX]
		cmp	EAX,010h
		je	LF70
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 054h[EDX]
		test	EAX,EAX
		jne	LF70
		push	offset FLAT:_DATA[088h]
		push	EBX
		call	near ptr ?warning@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp short	LF70
LF61:		mov	EDX,[EBX]
		and	ESI,0FFFFFFFEh
		mov	ECX,EBX
		call	dword ptr 04Ch[EDX]
		or	ESI,EAX
LF70:		mov	ECX,010h[EBP]
		inc	EDI
		cmp	4[ECX],EDI
		ja	LF1A
LF79:		pop	EDI
		mov	EAX,ESI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
?comeFrom@CompoundStatement@@UAEHXZ:
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	EBP
		xor	EBP,EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],EBX
		je	LFB3
LF94:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	LFAA
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 050h[EDX]
		or	EBP,EAX
LFAA:		mov	ECX,010h[EDI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	LF94
LFB3:		pop	EDI
		mov	EAX,EBP
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
?isEmpty@CompoundStatement@@UAEHXZ:
		push	EBX
		push	ESI
		xor	ESI,ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],ESI
		je	LFF6
LFCF:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	EBX,[ESI*4][EDX]
		test	EBX,EBX
		je	LFED
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 054h[EDX]
		test	EAX,EAX
		jne	LFED
		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBX
		ret
LFED:		mov	ECX,010h[EDI]
		inc	ESI
		cmp	4[ECX],ESI
		ja	LFCF
LFF6:		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBX
		ret
		nop
??0CompoundDeclarationStatement@@QAE@ULoc@@PAUStatements@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7CompoundDeclarationStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@CompoundDeclarationStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L104C
		mov	ECX,EBP
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr 0[EBP],offset FLAT:??_7Statements@@6B@
L104C:		mov	EDX,010h[EDI]
		mov	ECX,EBP
		push	dword ptr 4[EDX]
		call	near ptr ?setDim@Array@@QAEXI@Z
		mov	EDX,010h[EDI]
		xor	EBX,EBX
		cmp	4[EDX],EBX
		je	L1088
L1063:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	L1079
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 024h[EDX]
		mov	ESI,EAX
L1079:		mov	ECX,8[EBP]
		mov	[EBX*4][ECX],ESI
		mov	EDX,010h[EDI]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L1063
L1088:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L10A8
		mov	ECX,EBX
		push	EBP
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundDeclarationStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EBX,EAX
L10A8:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
?toCBuffer@CompoundDeclarationStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		sub	ESP,0Ch
		xor	EDX,EDX
		push	EBX
		mov	EBX,014h[ESP]
		push	EBP
		push	ESI
		mov	ESI,EDX
		push	EDI
		mov	EDI,ECX
		mov	018h[ESP],ECX
		mov	014h[ESP],EDX
		mov	EDX,010h[EDI]
		cmp	dword ptr 4[EDX],0
		je	L11FB
L10D6:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	EAX,[ESI*4][EDX]
		test	EAX,EAX
		je	L11EE
		mov	018h[ESP],EDI
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 074h[EDX]
		test	EAX,EAX
		jne	L110A
		push	029Eh
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0A4h]
		call	near ptr __assert
L110A:		mov	ECX,010h[EAX]
		cmp	dword ptr 0Ch[ECX],026h
		je	L1127
		push	02A0h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0A8h]
		call	near ptr __assert
L1127:		mov	ECX,018h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 0E0h[EDX]
		mov	EDI,EAX
		test	EAX,EAX
		jne	L114C
		push	02A2h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0C4h]
		call	near ptr __assert
L114C:		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 0124h[EDX]
		mov	EBP,EAX
		test	EAX,EAX
		je	L11DA
		cmp	dword ptr 014h[ESP],0
		mov	EDI,018h[ESP]
		je	L1182
		push	02Ch
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,4[EBP]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		jmp short	L11B9
L1182:		push	dword ptr 034h[EBP]
		push	dword ptr 030h[EBP]
		push	EBX
		call	near ptr ?stcToCBuffer@StorageClassDeclaration@@SAXPAUOutBuffer@@_K@Z
		add	ESP,0Ch
		cmp	dword ptr 028h[EBP],0
		je	L11A9
		push	dword ptr 024h[ESP]
		mov	ECX,028h[EBP]
		mov	EDX,[ECX]
		push	dword ptr 4[EBP]
		push	EBX
		call	dword ptr 038h[EDX]
		jmp short	L11B9
L11A9:		mov	ECX,4[EBP]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L11B9:		cmp	dword ptr 048h[EBP],0
		je	L11EA
		push	offset FLAT:_DATA[0C8h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,048h[EBP]
		mov	EDX,[ECX]
		push	dword ptr 024h[ESP]
		push	EBX
		call	dword ptr 034h[EDX]
		jmp short	L11EA
L11DA:		push	dword ptr 024h[ESP]
		mov	EDX,[EDI]
		mov	ECX,EDI
		push	EBX
		call	dword ptr 05Ch[EDX]
		mov	EDI,018h[ESP]
L11EA:		inc	dword ptr 014h[ESP]
L11EE:		mov	ECX,010h[EDI]
		inc	ESI
		cmp	4[ECX],ESI
		ja	L10D6
L11FB:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	EAX,024h[ESP]
		cmp	dword ptr 02Ch[EAX],0
		jne	L1215
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
L1215:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret	8
		nop
??0UnrolledLoopStatement@@QAE@ULoc@@PAUStatements@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7UnrolledLoopStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@UnrolledLoopStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L1268
		mov	ECX,EBP
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr 0[EBP],offset FLAT:??_7Statements@@6B@
L1268:		mov	EDX,010h[EDI]
		mov	ECX,EBP
		push	dword ptr 4[EDX]
		call	near ptr ?setDim@Array@@QAEXI@Z
		mov	EDX,010h[EDI]
		xor	EBX,EBX
		cmp	4[EDX],EBX
		je	L12A4
L127F:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	L1295
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 024h[EDX]
		mov	ESI,EAX
L1295:		mov	ECX,8[EBP]
		mov	[EBX*4][ECX],ESI
		mov	EDX,010h[EDI]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L127F
L12A4:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L12C4
		mov	ECX,EBX
		push	EBP
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0UnrolledLoopStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EBX,EAX
L12C4:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?semantic@UnrolledLoopStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EDX,8[ESP]
		push	EBX
		push	EBP
		push	ESI
		mov	ESI,ECX
		mov	ECX,EDX
		push	EDI
		inc	dword ptr 044h[EDX]
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		mov	EBP,EAX
		xor	EBX,EBX
		mov	028h[EAX],ESI
		mov	02Ch[EBP],ESI
		mov	EDX,010h[ESI]
		cmp	4[EDX],EBX
		je	L131E
L12F7:		mov	ECX,010h[ESI]
		mov	EDX,8[ECX]
		mov	EDI,[EBX*4][EDX]
		test	EDI,EDI
		je	L1315
		push	EBP
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 03Ch[EDX]
		mov	ECX,010h[ESI]
		mov	EDX,8[ECX]
		mov	[EBX*4][EDX],EAX
L1315:		mov	ECX,010h[ESI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	L12F7
L131E:		mov	ECX,EBP
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,018h[ESP]
		dec	dword ptr 044h[EAX]
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
?toCBuffer@UnrolledLoopStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		push	EBP
		mov	EBP,010h[ESP]
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	ECX,EBP
		push	offset FLAT:_DATA[0CCh]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBP
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,010h[EDI]
		xor	EBX,EBX
		cmp	4[EDX],EBX
		je	L1380
L135E:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	L1377
		push	dword ptr 01Ch[ESP]
		mov	EDX,[ESI]
		mov	ECX,ESI
		push	EBP
		call	dword ptr 028h[EDX]
L1377:		mov	ECX,010h[EDI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	L135E
L1380:		push	07Dh
		mov	ECX,EBP
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBP
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	EAX
		ret	8
?hasBreak@UnrolledLoopStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?hasContinue@UnrolledLoopStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?usesEH@UnrolledLoopStatement@@UAEHXZ:
		push	EBX
		push	ESI
		xor	ESI,ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],ESI
		je	L13E1
L13B7:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	EBX,[ESI*4][EDX]
		test	EBX,EBX
		je	L13D8
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 048h[EDX]
		test	EAX,EAX
		je	L13D8
		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBX
		ret
L13D8:		mov	ECX,010h[EDI]
		inc	ESI
		cmp	4[ECX],ESI
		ja	L13B7
L13E1:		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBX
		ret
?blockExit@UnrolledLoopStatement@@UAEHXZ:
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	EBP
		mov	EBP,1
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],EBX
		je	L1421
L13FD:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	L1418
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 04Ch[EDX]
		and	EAX,0FFFFFF9Fh
		or	EBP,EAX
L1418:		mov	ECX,010h[EDI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	L13FD
L1421:		pop	EDI
		mov	EAX,EBP
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?comeFrom@UnrolledLoopStatement@@UAEHXZ:
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	EBP
		xor	EBP,EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,010h[EDI]
		cmp	4[EDX],EBX
		je	L1462
L1443:		mov	ECX,010h[EDI]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		test	ESI,ESI
		je	L1459
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 050h[EDX]
		or	EBP,EAX
L1459:		mov	ECX,010h[EDI]
		inc	EBX
		cmp	4[ECX],EBX
		ja	L1443
L1462:		pop	EDI
		mov	EAX,EBP
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
??0ScopeStatement@@QAE@ULoc@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ScopeStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@ScopeStatement@@UAEPAUStatement@@XZ:
		sub	ESP,0Ch
		push	EBX
		push	ESI
		mov	010h[ESP],ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L14AC
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		jmp short	L14AE
L14AC:		xor	EAX,EAX
L14AE:		mov	0Ch[ESP],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L14D9
		mov	ECX,EBX
		push	dword ptr 0Ch[ESP]
		mov	ESI,014h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ScopeStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	EBX,EAX
L14D9:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
?semantic@ScopeStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,010h
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,01Ch[ESP]
		push	EDI
		cmp	dword ptr 010h[EBX],0
		je	L15C3
		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L1510
		mov	ECX,EDI
		call	near ptr ??0ScopeDsymbol@@QAE@XZ
		mov	EDI,EAX
L1510:		mov	EDX,8[ESI]
		mov	ECX,ESI
		mov	0Ch[EDI],EDX
		push	EDI
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		push	EAX
		mov	ESI,EAX
		call	dword ptr 05Ch[EDX]
		test	EAX,EAX
		mov	0Ch[ESP],EAX
		je	L1557
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L1554
		mov	ECX,EDI
		push	dword ptr 0Ch[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EDI,EAX
L1554:		mov	010h[EBX],EDI
L1557:		push	ESI
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		test	EAX,EAX
		mov	010h[EBX],EAX
		je	L15BC
		lea	ECX,018h[ESP]
		push	ECX
		lea	EDX,018h[ESP]
		push	EDX
		lea	ECX,018h[ESP]
		mov	EDX,[EAX]
		push	ECX
		mov	ECX,EAX
		push	ESI
		call	dword ptr 058h[EDX]
		cmp	dword ptr 018h[ESP],0
		je	L15BC
		push	ESI
		mov	ECX,01Ch[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	018h[ESP],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L15B9
		mov	ECX,EDI
		push	dword ptr 018h[ESP]
		push	dword ptr 010h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	EDI,EAX
L15B9:		mov	010h[EBX],EDI
L15BC:		mov	ECX,ESI
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
L15C3:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,010h
		ret	4
		nop
		nop
?hasBreak@ScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L15E1
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 040h[EDX]
		jmp short	L15E3
L15E1:		xor	EAX,EAX
L15E3:		pop	ECX
		ret
?hasContinue@ScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L15F6
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 044h[EDX]
		jmp short	L15F8
L15F6:		xor	EAX,EAX
L15F8:		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?usesEH@ScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L1611
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		jmp short	L1613
L1611:		xor	EAX,EAX
L1613:		pop	ECX
		ret
?blockExit@ScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L1626
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 04Ch[EDX]
		jmp short	L162B
L1626:		mov	EAX,1
L162B:		pop	ECX
		ret
		nop
		nop
		nop
?comeFrom@ScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L1641
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 050h[EDX]
		jmp short	L1643
L1641:		xor	EAX,EAX
L1643:		pop	ECX
		ret
?isEmpty@ScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L1656
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 054h[EDX]
		jmp short	L165B
L1656:		mov	EAX,1
L165B:		pop	ECX
		ret
		nop
		nop
		nop
?toCBuffer@ScopeStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EAX,8[ESP]
		mov	EDX,010h[EAX]
		test	EDX,EDX
		je	L168E
		push	dword ptr 014h[ESP]
		mov	ESI,[EDX]
		mov	ECX,EDX
		push	EBX
		call	dword ptr 028h[ESI]
L168E:		push	07Dh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0WhileStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7WhileStatement@@6B@
		mov	014h[EBX],ECX
		pop	EBX
		ret	010h
		nop
		nop
?syntaxCopy@WhileStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L1716
		mov	EAX,010h[ESP]
		mov	ECX,014h[EAX]
		test	ECX,ECX
		je	L16F7
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		jmp short	L16F9
L16F7:		xor	EAX,EAX
L16F9:		mov	ESI,010h[ESP]
		mov	ECX,010h[ESI]
		push	EAX
		mov	EDI,[ECX]
		call	dword ptr 024h[EDI]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0WhileStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	EBX,EAX
L1716:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
		nop
?semantic@WhileStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L174E
		mov	ECX,EBX
		push	dword ptr 014h[ESI]
		push	0
		push	dword ptr 010h[ESI]
		push	0
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ForStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@21@Z
		mov	EBX,EAX
L174E:		mov	EDX,[EBX]
		mov	ECX,EBX
		push	dword ptr 010h[ESP]
		call	dword ptr 03Ch[EDX]
		pop	ESI
		pop	EBX
		pop	ECX
		ret	4
		nop
?hasBreak@WhileStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?hasContinue@WhileStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?usesEH@WhileStatement@@UAEHXZ:
		push	ECX
		push	03CEh
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0Ch]
		call	near ptr __assert
		mov	EAX,014h[ECX]
		test	EAX,EAX
		je	L1795
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		jmp short	L1797
L1795:		xor	EAX,EAX
L1797:		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?blockExit@WhileStatement@@UAEHXZ:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		push	03D4h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0Ch]
		call	near ptr __assert
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		xor	EBX,EBX
		call	dword ptr 08Ch[EAX]
		test	EAX,EAX
		je	L17CF
		mov	EBX,2
L17CF:		push	1
		mov	EDX,014h[ESP]
		mov	ECX,010h[EDX]
		mov	ESI,[ECX]
		call	dword ptr 080h[ESI]
		test	EAX,EAX
		je	L1802
		mov	EAX,010h[ESP]
		mov	EDX,014h[EAX]
		test	EDX,EDX
		je	L1831
		mov	ESI,[EDX]
		mov	ECX,EDX
		call	dword ptr 04Ch[ESI]
		or	EBX,EAX
		test	EBX,020h
		jne	L182B
		jmp short	L1831
L1802:		push	0
		mov	EDI,014h[ESP]
		mov	ECX,010h[EDI]
		mov	EAX,[ECX]
		call	dword ptr 080h[EAX]
		test	EAX,EAX
		jne	L182B
		mov	EDX,010h[ESP]
		mov	ESI,014h[EDX]
		test	ESI,ESI
		je	L182B
		mov	EDI,[ESI]
		mov	ECX,ESI
		call	dword ptr 04Ch[EDI]
		or	EBX,EAX
L182B:		or	EBX,1
L1831:		pop	EDI
		and	EBX,0FFFFFF9Fh
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?comeFrom@WhileStatement@@UAEHXZ:
		push	ECX
		push	03F3h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0Ch]
		call	near ptr __assert
		cmp	dword ptr 014h[ECX],0
		je	L1865
		mov	ECX,014h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 050h[EDX]
		pop	ECX
		ret
L1865:		pop	ECX
		xor	EAX,EAX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?toCBuffer@WhileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0D8h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EAX,8[ESP]
		mov	ESI,014h[EAX]
		test	ESI,ESI
		je	L18BB
		push	dword ptr 014h[ESP]
		mov	EDX,[ESI]
		mov	ECX,ESI
		push	EBX
		call	dword ptr 028h[EDX]
L18BB:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0DoStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7DoStatement@@6B@
		mov	014h[EBX],ECX
		pop	EBX
		ret	010h
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@DoStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L1938
		mov	EAX,010h[ESP]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,010h[ESP]
		mov	EDI,010h[ESI]
		push	EAX
		test	EDI,EDI
		je	L1926
		mov	EAX,[EDI]
		mov	ECX,EDI
		call	dword ptr 024h[EAX]
		jmp short	L1928
L1926:		xor	EAX,EAX
L1928:		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DoStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@@Z
		mov	EBX,EAX
L1938:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?semantic@DoStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,010h[ESP]
		inc	dword ptr 044h[ESI]
		mov	EDX,010h[EBX]
		test	EDX,EDX
		je	L1961
		push	EBX
		mov	ECX,EDX
		push	EBX
		push	ESI
		call	near ptr ?semanticScope@Statement@@QAEPAU1@PAUScope@@PAU1@1@Z
		mov	010h[EBX],EAX
L1961:		dec	dword ptr 044h[ESI]
		mov	ECX,014h[EBX]
		mov	EDX,[ECX]
		push	ESI
		call	dword ptr 028h[EDX]
		push	EAX
		mov	014h[EBX],EAX
		push	ESI
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	014h[EBX],EAX
		mov	EDX,[EAX]
		push	2
		call	dword ptr 074h[EDX]
		mov	ECX,EAX
		mov	014h[EBX],EAX
		mov	EDX,[EAX]
		call	dword ptr 06Ch[EDX]
		mov	014h[EBX],EAX
		add	ESP,8
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret	4
		nop
		nop
		nop
		nop
		nop
?hasBreak@DoStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?hasContinue@DoStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?usesEH@DoStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L19C1
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		jmp short	L19C3
L19C1:		xor	EAX,EAX
L19C3:		pop	ECX
		ret
?blockExit@DoStatement@@UAEHXZ:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		cmp	dword ptr 010h[ECX],0
		je	L19FB
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 04Ch[EAX]
		mov	EBX,EAX
		cmp	EAX,020h
		jne	L19EB
		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
L19EB:		test	EBX,040h
		je	L1A00
		or	EBX,1
		jmp short	L1A00
L19FB:		mov	EBX,1
L1A00:		test	EBX,1
		je	L1A44
		mov	EDX,010h[ESP]
		mov	ECX,014h[EDX]
		mov	ESI,[ECX]
		call	dword ptr 08Ch[ESI]
		test	EAX,EAX
		je	L1A21
		or	EBX,2
L1A21:		test	EBX,020h
		jne	L1A44
		push	1
		mov	EDI,014h[ESP]
		mov	ECX,014h[EDI]
		mov	EAX,[ECX]
		call	dword ptr 080h[EAX]
		test	EAX,EAX
		je	L1A44
		and	EBX,0FFFFFFFEh
L1A44:		pop	EDI
		and	EBX,0FFFFFF9Fh
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?comeFrom@DoStatement@@UAEHXZ:
		push	ECX
		cmp	dword ptr 010h[ECX],0
		je	L1A64
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 050h[EDX]
		pop	ECX
		ret
L1A64:		pop	ECX
		xor	EAX,EAX
		ret
?toCBuffer@DoStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0E0h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EAX,8[ESP]
		mov	EDX,010h[EAX]
		test	EDX,EDX
		je	L1A99
		push	dword ptr 014h[ESP]
		mov	ESI,[EDX]
		mov	ECX,EDX
		push	EBX
		call	dword ptr 028h[ESI]
L1A99:		push	offset FLAT:_DATA[0D8h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,014h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0ForStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@21@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,018h[ESP]
		mov	ECX,01Ch[ESP]
		mov	010h[EBX],EAX
		mov	EDX,020h[ESP]
		mov	ESI,024h[ESP]
		mov	dword ptr [EBX],offset FLAT:??_7ForStatement@@6B@
		mov	EAX,EBX
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		mov	01Ch[EBX],ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	018h
?syntaxCopy@ForStatement@@UAEPAUStatement@@XZ:
		push	ECX
		mov	EAX,010h[ECX]
		push	ECX
		push	EBX
		xor	EBX,EBX
		test	EAX,EAX
		push	ESI
		push	EDI
		je	L1B18
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		mov	EBX,EAX
L1B18:		mov	ECX,010h[ESP]
		xor	ESI,ESI
		mov	EDX,014h[ECX]
		test	EDX,EDX
		je	L1B2E
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 024h[EDX]
		mov	ESI,EAX
L1B2E:		mov	ECX,010h[ESP]
		xor	EDI,EDI
		mov	EDX,018h[ECX]
		test	EDX,EDX
		je	L1B44
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 024h[EDX]
		mov	EDI,EAX
L1B44:		mov	0Ch[ESP],EBX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L1B7E
		mov	ECX,010h[ESP]
		mov	ECX,01Ch[ECX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		push	EAX
		push	EDI
		push	ESI
		push	dword ptr 018h[ESP]
		mov	ECX,020h[ESP]
		push	dword ptr 8[ECX]
		push	dword ptr 4[ECX]
		mov	ECX,EBX
		call	near ptr ??0ForStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@21@Z
		mov	EBX,EAX
L1B7E:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?semantic@ForStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	EBX
		mov	EBX,8[ESP]
		push	ESI
		mov	ESI,ECX
		push	EDI
		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L1BA9
		mov	ECX,EDI
		call	near ptr ??0ScopeDsymbol@@QAE@XZ
		mov	EDI,EAX
L1BA9:		mov	EDX,8[EBX]
		mov	ECX,EBX
		mov	0Ch[EDI],EDX
		push	EDI
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	EDX,010h[ESI]
		mov	EBX,EAX
		test	EDX,EDX
		je	L1BCB
		push	EBX
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 03Ch[EDX]
		mov	010h[ESI],EAX
L1BCB:		inc	dword ptr 044h[EBX]
		mov	ECX,014h[ESI]
		test	ECX,ECX
		je	L1C01
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	EAX
		mov	014h[ESI],EAX
		push	EBX
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	014h[ESI],EAX
		mov	EDX,[EAX]
		push	2
		call	dword ptr 074h[EDX]
		mov	ECX,EAX
		mov	014h[ESI],EAX
		mov	EDX,[EAX]
		call	dword ptr 06Ch[EDX]
		mov	014h[ESI],EAX
		add	ESP,8
L1C01:		mov	ECX,018h[ESI]
		test	ECX,ECX
		je	L1C2A
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	EAX
		mov	018h[ESI],EAX
		push	EBX
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	018h[ESI],EAX
		mov	EDX,[EAX]
		push	0
		call	dword ptr 074h[EDX]
		mov	018h[ESI],EAX
		add	ESP,8
L1C2A:		mov	028h[EBX],ESI
		mov	02Ch[EBX],ESI
		mov	ECX,01Ch[ESI]
		test	ECX,ECX
		je	L1C40
		push	EBX
		call	near ptr ?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z
		mov	01Ch[ESI],EAX
L1C40:		dec	dword ptr 044h[EBX]
		mov	ECX,EBX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBX
		ret	4
?scopeCode@ForStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z:
		push	ECX
		cmp	dword ptr 010h[ECX],0
		je	L1C73
		push	dword ptr 014h[ESP]
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	dword ptr 058h[EAX]
		jmp short	L1C88
L1C73:		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
L1C88:		pop	EAX
		ret	010h
		nop
		nop
		nop
		nop
?hasBreak@ForStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?hasContinue@ForStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?usesEH@ForStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	ECX
		push	EBX
		je	L1CB5
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		test	EAX,EAX
		jne	L1CC9
L1CB5:		mov	EBX,8[ESP]
		mov	ECX,01Ch[EBX]
		mov	EAX,[ECX]
		call	dword ptr 048h[EAX]
		test	EAX,EAX
		jne	L1CC9
		xor	EAX,EAX
		jmp short	L1CCE
L1CC9:		mov	EAX,1
L1CCE:		pop	EBX
		add	ESP,8
		ret
?blockExit@ForStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	ECX
		push	EBX
		mov	EBX,1
		push	ESI
		push	EDI
		je	L1CF9
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 04Ch[EDX]
		mov	EBX,EAX
		test	EBX,1
		je	L1D97
L1CF9:		mov	ESI,010h[ESP]
		mov	EDI,014h[ESI]
		test	EDI,EDI
		je	L1D44
		mov	EAX,[EDI]
		mov	ECX,EDI
		call	dword ptr 08Ch[EAX]
		test	EAX,EAX
		je	L1D18
		or	EBX,2
L1D18:		push	1
		mov	EDX,014h[ESP]
		mov	ECX,014h[EDX]
		mov	ESI,[ECX]
		call	dword ptr 080h[ESI]
		test	EAX,EAX
		jne	L1D44
		push	0
		mov	EDI,014h[ESP]
		mov	ECX,014h[EDI]
		mov	EAX,[ECX]
		call	dword ptr 080h[EAX]
		test	EAX,EAX
		jne	L1D97
		jmp short	L1D4A
L1D44:		and	EBX,0FFFFFFFEh
L1D4A:		mov	EDX,010h[ESP]
		mov	ESI,01Ch[EDX]
		test	ESI,ESI
		je	L1D78
		mov	EDI,[ESI]
		mov	ECX,ESI
		call	dword ptr 04Ch[EDI]
		test	EAX,028h
		mov	0Ch[ESP],EAX
		je	L1D6D
		or	EBX,1
L1D6D:		mov	EAX,0Ch[ESP]
		and	EAX,0FFFFFF9Eh
		or	EBX,EAX
L1D78:		mov	EDX,010h[ESP]
		mov	ESI,018h[EDX]
		test	ESI,ESI
		je	L1D97
		mov	EDI,[ESI]
		mov	ECX,ESI
		call	dword ptr 08Ch[EDI]
		test	EAX,EAX
		je	L1D97
		or	EBX,2
L1D97:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?comeFrom@ForStatement@@UAEHXZ:
		push	ECX
		cmp	dword ptr 01Ch[ECX],0
		je	L1DB1
		mov	ECX,01Ch[ECX]
		mov	EDX,[ECX]
		call	dword ptr 050h[EDX]
		pop	ECX
		ret
L1DB1:		pop	ECX
		xor	EAX,EAX
		ret
?toCBuffer@ForStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	EBX
		mov	EBX,8[ESP]
		push	ESI
		mov	ESI,010h[ESP]
		push	EDI
		mov	EDI,ECX
		mov	ECX,EBX
		push	offset FLAT:_DATA[0E4h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		cmp	dword ptr 010h[EDI],0
		je	L1DE6
		push	ESI
		inc	dword ptr 02Ch[ESI]
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
		dec	dword ptr 02Ch[ESI]
		jmp short	L1DEF
L1DE6:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L1DEF:		cmp	dword ptr 014h[EDI],0
		je	L1E08
		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,014h[EDI]
		mov	EDX,[ECX]
		push	ESI
		push	EBX
		call	dword ptr 048h[EDX]
L1E08:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		cmp	dword ptr 018h[EDI],0
		je	L1E2A
		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,018h[EDI]
		mov	EDX,[ECX]
		push	ESI
		push	EBX
		call	dword ptr 048h[EDX]
L1E2A:		push	029h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,EBX
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,01Ch[EDI]
		mov	EDX,[ECX]
		push	ESI
		push	EBX
		call	dword ptr 028h[EDX]
		mov	ECX,EBX
		push	07Dh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EDI
		pop	ESI
		pop	EBX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
??0ForeachStatement@@QAE@ULoc@@W4TOK@@PAUParameters@@PAUExpression@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	EDI
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,018h[ESP]
		mov	ECX,01Ch[ESP]
		mov	EDX,020h[ESP]
		mov	ESI,024h[ESP]
		xor	EDI,EDI
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ForeachStatement@@6B@
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		mov	01Ch[EBX],ESI
		mov	020h[EBX],EDI
		mov	024h[EBX],EDI
		mov	028h[EBX],EDI
		mov	02Ch[EBX],EDI
		mov	030h[EBX],EDI
		pop	EDI
		pop	ESI
		pop	EBX
		ret	018h
		nop
		nop
		nop
?syntaxCopy@ForeachStatement@@UAEPAUStatement@@XZ:
		sub	ESP,0Ch
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	dword ptr 014h[ECX]
		call	near ptr ?arraySyntaxCopy@Parameter@@SAPAUParameters@@PAU2@@Z
		mov	ECX,018h[ESI]
		mov	EDX,[ECX]
		mov	010h[ESP],EAX
		call	dword ptr 024h[EDX]
		mov	014h[ESP],EAX
		push	034h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L1F1A
		mov	ECX,01Ch[ESI]
		test	ECX,ECX
		je	L1EFD
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		jmp short	L1EFF
L1EFD:		xor	EAX,EAX
L1EFF:		mov	ECX,EBX
		push	EAX
		push	dword ptr 018h[ESP]
		push	dword ptr 018h[ESP]
		push	dword ptr 010h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ForeachStatement@@QAE@ULoc@@W4TOK@@PAUParameters@@PAUExpression@@PAUStatement@@@Z
		mov	EBX,EAX
L1F1A:		add	ESP,4
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,0210h
		push	EBX
		push	ESI
		mov	ESI,ECX
		mov	EDX,014h[ESI]
		push	EDI
		mov	EDX,4[EDX]
		mov	EDI,ECX
		mov	010h[ESP],EDX
		xor	EDX,EDX
		mov	014h[ESP],EDX
		mov	018h[ESP],EDX
		mov	01Ch[ESP],EDX
		mov	EDX,0220h[ESP]
		mov	EDX,010h[EDX]
		mov	028h[ESI],EDX
		mov	EDX,0BCh[EDX]
		test	EDX,EDX
		je	L1F67
		mov	EDX,028h[EDX]
		mov	028h[ESI],EDX
L1F67:		push	dword ptr 0220h[ESP]
		mov	ECX,018h[ESI]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	EAX
		mov	018h[ESI],EAX
		push	dword ptr 0224h[ESP]
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	018h[ESI],EAX
		mov	EDX,[EAX]
		push	2
		call	dword ptr 074h[EDX]
		mov	018h[ESI],EAX
		add	ESP,8
		cmp	dword ptr 010h[EAX],0
		jne	L1FC2
		mov	ECX,EAX
		mov	EAX,[EAX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[0108h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0210h
		ret	4
L1FC2:		push	dword ptr 018h[ESI]
		push	dword ptr 014h[ESI]
		push	dword ptr 010h[ESI]
		call	near ptr ?inferApplyArgTypes@@YAXW4TOK@@PAUParameters@@PAUExpression@@@Z
		add	ESP,0Ch
		mov	EDX,014h[ESI]
		mov	ECX,4[EDX]
		cmp	ECX,010h[ESP]
		je	L1FFB
		push	offset FLAT:_DATA[0128h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0210h
		ret	4
L1FFB:		mov	EDX,018h[ESI]
		mov	ECX,010h[EDX]
		mov	EDX,[ECX]
		call	dword ptr 070h[EDX]
		mov	020h[ESP],EAX
		cmp	dword ptr 4[EAX],027h
		jne	L2533
		mov	EBX,010h[ESP]
		cmp	EBX,1
		jb	L2022
		cmp	EBX,2
		jbe	L203E
L2022:		push	offset FLAT:_DATA[0158h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0210h
		ret	4
L203E:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L205B
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Statements@@6B@
L205B:		mov	EDX,018h[ESI]
		mov	ECX,0Ch[EDX]
		mov	dword ptr 02Ch[ESP],0
		cmp	ECX,07Eh
		jne	L2081
		mov	ECX,018h[ESI]
		mov	EDX,018h[ECX]
		mov	02Ch[ESP],ECX
		mov	ECX,4[EDX]
		mov	028h[ESP],ECX
		jmp short	L20AF
L2081:		cmp	ECX,014h
		jne	L209B
		mov	EDX,020h[ESP]
		push	dword ptr 028h[EDX]
		call	near ptr ?dim@Parameter@@SAIPAUParameters@@@Z
		mov	02Ch[ESP],EAX
		add	ESP,4
		jmp short	L20AF
L209B:		push	0552h
		push	offset FLAT:_DATA[0198h]
		push	offset FLAT:_DATA[01A4h]
		call	near ptr __assert
L20AF:		mov	024h[ESP],EDI
		xor	EDI,EDI
		cmp	028h[ESP],EDI
		je	L24F5
L20BF:		cmp	dword ptr 010h[ESI],0CCh
		jne	L20CC
		mov	EBX,EDI
		jmp short	L20D3
L20CC:		mov	EBX,028h[ESP]
		dec	EBX
		sub	EBX,EDI
L20D3:		cmp	dword ptr 02Ch[ESP],0
		je	L20ED
		mov	EDX,02Ch[ESP]
		mov	ECX,018h[EDX]
		mov	EDX,8[ECX]
		mov	ECX,[EBX*4][EDX]
		mov	034h[ESP],ECX
		jmp short	L2106
L20ED:		push	0
		mov	EDX,024h[ESP]
		push	EBX
		push	dword ptr 028h[EDX]
		call	near ptr ?getNth@Parameter@@SAPAU1@PAUParameters@@IPAI@Z
		mov	ECX,010h[EAX]
		mov	044h[ESP],ECX
		add	ESP,0Ch
L2106:		mov	030h[ESP],EBX
		mov	EDX,014h[ESI]
		mov	ECX,8[EDX]
		push	014h
		mov	EBX,[ECX]
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	03Ch[ESP],EAX
		je	L2135
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	EDX,03Ch[ESP]
		mov	dword ptr [EDX],offset FLAT:??_7Statements@@6B@
L2135:		cmp	dword ptr 010h[ESP],2
		jne	L22BA
		mov	EAX,8[EBX]
		mov	EDX,0Ch[EBX]
		and	EAX,0203000h
		xor	EDX,EDX
		or	EDX,EAX
		je	L2168
		mov	ECX,014h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[01A8h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L2168:		mov	ECX,010h[EBX]
		mov	EAX,4[ECX]
		cmp	EAX,012h
		je	L21B8
		cmp	EAX,013h
		je	L21B8
		cmp	byte ptr ?global@@3UGlobal@@A[04Eh],0
		je	L21A4
		cmp	EAX,014h
		je	L21B8
		cmp	EAX,015h
		je	L21B8
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[01C4h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L21B8
L21A4:		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0204h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L21B8:		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	044h[ESP],EAX
		je	L221D
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	040h[ESP],EAX
		je	L21F1
		mov	EAX,030h[ESP]
		xor	ECX,ECX
		push	ECX
		mov	ECX,044h[ESP]
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	040h[ESP],EAX
L21F1:		mov	EDX,040h[ESP]
		mov	ECX,044h[ESP]
		push	EDX
		mov	dword ptr 054h[ESP],0
		mov	dword ptr 050h[ESP],0
		mov	EDX,054h[ESP]
		mov	EAX,050h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	044h[ESP],EAX
L221D:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	054h[ESP],EAX
		je	L224A
		mov	ECX,EAX
		push	dword ptr 044h[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 010h[EBX]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	054h[ESP],EAX
L224A:		mov	EDX,054h[ESP]
		or	dword ptr 030h[EDX],4
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	058h[ESP],EAX
		je	L227C
		mov	ECX,EAX
		push	dword ptr 054h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	058h[ESP],EAX
L227C:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	05Ch[ESP],EAX
		je	L22A3
		mov	ECX,EAX
		push	dword ptr 058h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	05Ch[ESP],EAX
L22A3:		mov	EDX,05Ch[ESP]
		mov	ECX,03Ch[ESP]
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,014h[ESI]
		mov	ECX,8[EDX]
		mov	EBX,4[ECX]
L22BA:		mov	EAX,8[EBX]
		mov	EDX,0Ch[EBX]
		and	EAX,0203000h
		xor	EDX,EDX
		or	EDX,EAX
		je	L22E2
		mov	ECX,014h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0234h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L22E2:		cmp	dword ptr 02Ch[ESP],0
		je	L23E4
		mov	ECX,034h[ESP]
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 070h[EDX]
		mov	ECX,4[EAX]
		cmp	ECX,5
		je	L2306
		cmp	ECX,1
		jne	L234A
L2306:		mov	EDX,034h[ESP]
		cmp	dword ptr 0Ch[EDX],01Ah
		jne	L234A
		push	060h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	064h[ESP],EAX
		je	L233D
		mov	ECX,034h[ESP]
		push	dword ptr 018h[ECX]
		mov	ECX,EAX
		push	dword ptr 014h[EBX]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUDsymbol@@@Z
		mov	064h[ESP],EAX
L233D:		mov	EDX,064h[ESP]
		mov	060h[ESP],EDX
		jmp	near ptr L2416
L234A:		mov	ECX,034h[ESP]
		mov	EDX,010h[ECX]
		mov	010h[EBX],EDX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	068h[ESP],EAX
		je	L2391
		push	dword ptr 034h[ESP]
		mov	ECX,06Ch[ESP]
		mov	dword ptr 074h[ESP],0
		mov	dword ptr 070h[ESP],0
		mov	EDX,074h[ESP]
		mov	EAX,070h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	068h[ESP],EAX
L2391:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	074h[ESP],EAX
		je	L23BE
		mov	ECX,EAX
		push	dword ptr 068h[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 010h[EBX]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	074h[ESP],EAX
L23BE:		mov	EDX,034h[ESP]
		mov	EDX,[EDX]
		mov	ECX,034h[ESP]
		call	dword ptr 07Ch[EDX]
		test	EAX,EAX
		je	L23DA
		mov	ECX,074h[ESP]
		or	dword ptr 030h[ECX],4
L23DA:		mov	EDX,074h[ESP]
		mov	060h[ESP],EDX
		jmp short	L2416
L23E4:		push	060h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	078h[ESP],EAX
		je	L240E
		mov	ECX,EAX
		push	dword ptr 038h[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUType@@@Z
		mov	078h[ESP],EAX
L240E:		mov	EDX,078h[ESP]
		mov	060h[ESP],EDX
L2416:		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2439
		mov	ECX,EBX
		push	dword ptr 060h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	EBX,EAX
L2439:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	07Ch[ESP],EAX
		je	L245D
		mov	ECX,EAX
		push	EBX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	07Ch[ESP],EAX
L245D:		mov	EDX,07Ch[ESP]
		mov	ECX,03Ch[ESP]
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	ECX,01Ch[ESI]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ECX,03Ch[ESP]
		push	EAX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	080h[ESP],EAX
		je	L24AA
		mov	ECX,EAX
		push	dword ptr 03Ch[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	080h[ESP],EAX
L24AA:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	084h[ESP],EAX
		je	L24DA
		mov	ECX,EAX
		push	dword ptr 080h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ScopeStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	084h[ESP],EAX
L24DA:		push	dword ptr 084h[ESP]
		mov	ECX,028h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		inc	EDI
		cmp	EDI,028h[ESP]
		jb	L20BF
L24F5:		mov	EDI,024h[ESP]
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2519
		mov	ECX,EBX
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0UnrolledLoopStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EBX,EAX
L2519:		mov	EDX,[EBX]
		mov	ECX,EBX
		push	dword ptr 0220h[ESP]
		call	dword ptr 03Ch[EDX]
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0210h
		ret	4
L2533:		xor	EDX,EDX
		cmp	010h[ESP],EDX
		je	L2576
L253B:		mov	ECX,014h[ESI]
		mov	ECX,8[ECX]
		mov	EBX,[EDX*4][ECX]
		cmp	dword ptr 010h[EBX],0
		jne	L256F
		mov	ECX,014h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0254h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0210h
		ret	4
L256F:		inc	EDX
		cmp	EDX,010h[ESP]
		jb	L253B
L2576:		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	088h[ESP],EAX
		je	L2599
		mov	ECX,EAX
		call	near ptr ??0ScopeDsymbol@@QAE@XZ
		mov	088h[ESP],EAX
L2599:		mov	EDX,0220h[ESP]
		mov	EBX,088h[ESP]
		push	EBX
		mov	ECX,8[EDX]
		mov	0Ch[EBX],ECX
		mov	ECX,EDX
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	EDX,020h[ESP]
		inc	dword ptr 044h[EAX]
		mov	EBX,4[EDX]
		cmp	EBX,0Bh
		mov	0220h[ESP],EAX
		ja	L3BBB
		jmp	dword ptr FLAT:_DATA[0478h][EBX*4]
		mov	EDX,010h[ESP]
		mov	ECX,1
		cmp	EDX,ECX
		jb	L25E8
		cmp	EDX,2
		jbe	L25FB
L25E8:		push	offset FLAT:_DATA[0270h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp	near ptr L3BD7
L25FB:		mov	EAX,020h[ESP]
		mov	EBX,024h[EAX]
		mov	EDI,[EBX]
		mov	ECX,EBX
		call	dword ptr 070h[EDI]
		mov	018h[ESP],EAX
		mov	EDX,018h[ESP]
		mov	ECX,4[EDX]
		mov	EDX,021h
		cmp	ECX,EDX
		je	L262B
		cmp	ECX,022h
		je	L262B
		cmp	ECX,023h
		jne	L26DD
L262B:		push	dword ptr 0220h[ESP]
		mov	ECX,1
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		cmp	dword ptr 01Ch[ESP],1
		jne	L2646
		xor	ECX,ECX
L2646:		mov	EAX,014h[ESI]
		mov	EDI,8[EAX]
		mov	EBX,[ECX*4][EDI]
		mov	EAX,010h[EBX]
		mov	EDI,[EAX]
		mov	ECX,010h[EBX]
		call	dword ptr 030h[EDI]
		mov	ECX,EAX
		mov	010h[EBX],EAX
		mov	EDX,[EAX]
		call	dword ptr 070h[EDX]
		mov	EDX,018h[ESP]
		mov	ECX,4[EAX]
		mov	01Ch[ESP],EAX
		cmp	ECX,4[EDX]
		je	L26DD
		cmp	ECX,021h
		je	L2683
		cmp	ECX,022h
		je	L2683
		cmp	ECX,023h
		jne	L26DD
L2683:		mov	EAX,8[EBX]
		mov	EDX,0Ch[EBX]
		and	EAX,0200000h
		xor	EDX,EDX
		or	EDX,EAX
		je	L26A2
		push	offset FLAT:_DATA[029Ch]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L26A2:		cmp	dword ptr 010h[ESP],2
		jne	L2E36
		mov	EBX,014h[ESI]
		mov	EDI,8[EBX]
		mov	ECX,[EDI]
		mov	EAX,8[ECX]
		mov	EDX,0Ch[ECX]
		and	EAX,0200000h
		xor	EDX,EDX
		or	EDX,EAX
		je	L2E36
		push	offset FLAT:_DATA[02CCh]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp	near ptr L2E36
L26DD:		xor	EBX,EBX
		cmp	010h[ESP],EBX
		je	L278F
L26E9:		mov	08Ch[ESP],EBX
		mov	EDX,014h[ESI]
		mov	EDX,8[EDX]
		push	dword ptr 0220h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,098h[ESP]
		mov	EDI,[ECX*4][EDX]
		mov	EDX,010h[EDI]
		mov	EDX,[EDX]
		mov	ECX,010h[EDI]
		call	dword ptr 030h[EDX]
		mov	090h[ESP],EAX
		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L274A
		mov	ECX,EBX
		push	0
		push	dword ptr 014h[EDI]
		push	dword ptr 098h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EBX,EAX
L274A:		or	dword ptr 030h[EBX],04000h
		mov	EAX,8[EDI]
		mov	EDX,0Ch[EDI]
		and	EAX,0201800h
		xor	EDX,EDX
		or	030h[EBX],EAX
		or	034h[EBX],EDX
		cmp	dword ptr 010h[ESP],2
		jne	L277A
		cmp	dword ptr 08Ch[ESP],0
		jne	L277A
		mov	020h[ESI],EBX
		jmp short	L277D
L277A:		mov	024h[ESI],EBX
L277D:		mov	EBX,08Ch[ESP]
		inc	EBX
		cmp	EBX,010h[ESP]
		jb	L26E9
L278F:		push	offset FLAT:_DATA[02E8h]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
		mov	098h[ESP],EAX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	09Ch[ESP],EAX
		je	L27F7
		push	028h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L27DB
		mov	ECX,EDI
		push	0
		push	0
		push	dword ptr 018h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0SliceExp@@QAE@ULoc@@PAUExpression@@11@Z
		mov	EDI,EAX
L27DB:		mov	EDX,EDI
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0A8h[ESP]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	09Ch[ESP],EAX
L27F7:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2831
		push	dword ptr 09Ch[ESP]
		push	dword ptr 09Ch[ESP]
		mov	EDX,02Ch[ESP]
		mov	ECX,024h[EDX]
		call	near ptr ?arrayOf@Type@@QAEPAU1@XZ
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EBX,EAX
L2831:		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A4h[ESP],EAX
		je	L2897
		push	dword ptr ?length@Id@@2PAUIdentifier@@A
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A4h[ESP],EAX
		je	L2876
		mov	ECX,EAX
		push	EBX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0A4h[ESP],EAX
L2876:		mov	EDX,0A4h[ESP]
		push	EDX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0B4h[ESP]
		call	near ptr ??0DotIdExp@@QAE@ULoc@@PAUExpression@@PAUIdentifier@@@Z
		mov	0A4h[ESP],EAX
L2897:		add	ESP,4
		cmp	dword ptr 020h[ESI],0
		jne	L28EC
		push	offset FLAT:_DATA[02F0h]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
		mov	0A8h[ESP],EAX
		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L28E6
		mov	EDX,?Tsize_t@@3HA
		push	0
		mov	ECX,EDI
		push	dword ptr 0ACh[ESP]
		push	dword ptr ?basic@Type@@2QAPAU1@A[EDX*4]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EDI,EAX
L28E6:		mov	020h[ESI],EDI
		add	ESP,4
L28EC:		cmp	dword ptr 010h[ESI],0CDh
		jne	L2923
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L291B
		mov	ECX,EDI
		push	dword ptr 0A0h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	EDI,EAX
L291B:		mov	EDX,020h[ESI]
		mov	048h[EDX],EDI
		jmp short	L297E
L2923:		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A8h[ESP],EAX
		je	L2971
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L2955
		mov	ECX,EDI
		push	0
		push	0
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EDI,EAX
L2955:		mov	EDX,EDI
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0B4h[ESP]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	0A8h[ESP],EAX
L2971:		mov	ECX,020h[ESI]
		mov	EDX,0A8h[ESP]
		mov	048h[ECX],EDX
L297E:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L299B
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Statements@@6B@
L299B:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B0h[ESP],EAX
		je	L29FB
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0ACh[ESP],EAX
		je	L29DA
		mov	ECX,EAX
		push	EBX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	0ACh[ESP],EAX
L29DA:		mov	EDX,0ACh[ESP]
		push	EDX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0BCh[ESP]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0B0h[ESP],EAX
L29FB:		mov	EDX,0B0h[ESP]
		mov	ECX,EDI
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B8h[ESP],EAX
		je	L2A6C
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B4h[ESP],EAX
		je	L2A4B
		mov	ECX,EAX
		push	dword ptr 020h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	0B4h[ESP],EAX
L2A4B:		mov	EDX,0B4h[ESP]
		push	EDX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0C4h[ESP]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0B8h[ESP],EAX
L2A6C:		mov	EDX,0B8h[ESP]
		mov	ECX,EDI
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0BCh[ESP],EAX
		je	L2AA5
		mov	ECX,EAX
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CompoundDeclarationStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	0BCh[ESP],EAX
L2AA5:		cmp	dword ptr 010h[ESI],0CDh
		jne	L2B13
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C4h[ESP],EAX
		je	L2B03
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L2AE5
		mov	ECX,EDI
		push	dword ptr 020h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	EDI,EAX
L2AE5:		mov	EDX,EDI
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		push	061h
		mov	ECX,0D4h[ESP]
		call	near ptr ??0PostExp@@QAE@W4TOK@@ULoc@@PAUExpression@@@Z
		mov	0C4h[ESP],EAX
L2B03:		mov	EDX,0C4h[ESP]
		mov	0C0h[ESP],EDX
		jmp short	L2B7D
L2B13:		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C8h[ESP],EAX
		je	L2B6F
		push	dword ptr 0A0h[ESP]
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L2B51
		mov	ECX,EDI
		push	dword ptr 020h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	EDI,EAX
L2B51:		mov	EDX,EDI
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		push	032h
		mov	ECX,0DCh[ESP]
		call	near ptr ??0CmpExp@@QAE@W4TOK@@ULoc@@PAUExpression@@2@Z
		mov	0C8h[ESP],EAX
L2B6F:		mov	EDX,0C8h[ESP]
		mov	0C0h[ESP],EDX
L2B7D:		mov	dword ptr 0CCh[ESP],0
		cmp	dword ptr 010h[ESI],0CCh
		jne	L2C25
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0D4h[ESP],EAX
		je	L2C17
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0D0h[ESP],EAX
		je	L2BD1
		mov	ECX,EAX
		push	0
		push	1
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	0D0h[ESP],EAX
L2BD1:		mov	EDX,0D0h[ESP]
		push	EDX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L2BFB
		mov	ECX,EDI
		push	dword ptr 020h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	EDI,EAX
L2BFB:		mov	EDX,EDI
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0E4h[ESP]
		call	near ptr ??0AddAssignExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	0D4h[ESP],EAX
L2C17:		mov	EDX,0D4h[ESP]
		mov	0CCh[ESP],EDX
L2C25:		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0E4h[ESP],EAX
		je	L2CF3
		push	028h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0E0h[ESP],EAX
		je	L2CD2
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0DCh[ESP],EAX
		je	L2C7F
		mov	ECX,EAX
		push	dword ptr 020h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0DCh[ESP],EAX
L2C7F:		mov	EDX,0DCh[ESP]
		push	EDX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0DCh[ESP],EAX
		je	L2CB1
		mov	ECX,EAX
		push	EBX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0DCh[ESP],EAX
L2CB1:		mov	EDX,0DCh[ESP]
		push	EDX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0F0h[ESP]
		call	near ptr ??0IndexExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	0E0h[ESP],EAX
L2CD2:		mov	EDX,0E0h[ESP]
		push	EDX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0F0h[ESP]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	0E4h[ESP],EAX
L2CF3:		mov	ECX,024h[ESI]
		mov	EDX,0E4h[ESP]
		mov	048h[ECX],EDX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0ECh[ESP],EAX
		je	L2D62
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0E8h[ESP],EAX
		je	L2D41
		mov	ECX,EAX
		push	dword ptr 024h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	0E8h[ESP],EAX
L2D41:		mov	EDX,0E8h[ESP]
		push	EDX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		mov	ECX,0F8h[ESP]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0ECh[ESP],EAX
L2D62:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0F0h[ESP],EAX
		je	L2D95
		mov	ECX,EAX
		push	dword ptr 01Ch[ESI]
		push	dword ptr 0F0h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	0F0h[ESP],EAX
L2D95:		mov	EDX,0F0h[ESP]
		mov	01Ch[ESI],EDX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0F4h[ESP],EAX
		je	L2DE0
		mov	ECX,EAX
		push	dword ptr 01Ch[ESI]
		push	dword ptr 0D0h[ESP]
		push	dword ptr 0C8h[ESP]
		push	dword ptr 0C8h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ForStatement@@QAE@ULoc@@PAUStatement@@PAUExpression@@21@Z
		mov	0F4h[ESP],EAX
L2DE0:		push	dword ptr 0220h[ESP]
		mov	ECX,0F8h[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	EDI,EAX
		jmp	near ptr L3BD7
		mov	014h[ESP],EDX
		mov	ECX,010h[ESP]
		cmp	ECX,1
		jb	L2E0C
		cmp	ECX,2
		jbe	L2E1F
L2E0C:		push	offset FLAT:_DATA[02F8h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp	near ptr L3BD7
L2E1F:		cmp	dword ptr 010h[ESI],0CDh
		jne	L2E36
		push	offset FLAT:_DATA[0330h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L2E36:		mov	ECX,028h[ESI]
		mov	EDX,028h[ECX]
		mov	ECX,0220h[ESP]
		mov	EDI,024h[EDX]
		mov	EDX,010h[ECX]
		cmp	dword ptr 078h[EDX],0
		jne	L2EDF
		test	EDI,EDI
		je	L2EDF
		cmp	EDI,?basic@Type@@2QAPAU1@A[034h]
		je	L2EDF
		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2E8B
		mov	ECX,EBX
		push	0
		push	dword ptr ?result@Id@@2PAUIdentifier@@A
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EBX,EAX
L2E8B:		mov	EDX,[EBX]
		mov	ECX,EBX
		mov	dword ptr 050h[EBX],1
		push	dword ptr 0220h[ESP]
		call	dword ptr 040h[EDX]
		push	EBX
		mov	ECX,0224h[ESP]
		call	near ptr ?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
		test	EAX,EAX
		jne	L2EC5
		push	06A5h
		push	offset FLAT:_DATA[0198h]
		push	offset FLAT:_DATA[01A4h]
		call	near ptr __assert
L2EC5:		mov	EDX,0220h[ESP]
		mov	ECX,010h[EDX]
		mov	0Ch[EBX],ECX
		mov	EDX,0220h[ESP]
		mov	ECX,010h[EDX]
		mov	078h[ECX],EBX
L2EDF:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0FCh[ESP],EAX
		je	L2F08
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	EDX,0FCh[ESP]
		mov	dword ptr [EDX],offset FLAT:??_7Parameters@@6B@
L2F08:		xor	EDI,EDI
		cmp	010h[ESP],EDI
		je	L315D
L2F14:		push	dword ptr 0220h[ESP]
		mov	ECX,014h[ESI]
		mov	EDX,8[ECX]
		push	dword ptr 8[ESI]
		mov	EBX,[EDI*4][EDX]
		mov	EDX,010h[EBX]
		push	dword ptr 4[ESI]
		mov	EDX,[EDX]
		mov	ECX,010h[EBX]
		call	dword ptr 030h[EDX]
		mov	EDX,0Ch[EBX]
		xor	EDX,EDX
		mov	010h[EBX],EAX
		mov	EAX,8[EBX]
		and	EAX,0200000h
		or	EDX,EAX
		je	L2F58
		mov	ECX,014h[EBX]
		mov	0100h[ESP],ECX
		jmp	near ptr L3109
L2F58:		push	EDI
		push	offset FLAT:_DATA[035Ch]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBDH@Z
		mov	0108h[ESP],EAX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	011Ch[ESP],EAX
		je	L3019
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	010Ch[ESP],EAX
		je	L2FD8
		push	dword ptr 0108h[ESP]
		mov	dword ptr 011Ch[ESP],0
		mov	dword ptr 0118h[ESP],0
		mov	EDX,011Ch[ESP]
		mov	EAX,0118h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0118h[ESP]
		call	near ptr ??0IdentifierExp@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	010Ch[ESP],EAX
L2FD8:		mov	EDX,010Ch[ESP]
		push	EDX
		mov	dword ptr 012Ch[ESP],0
		mov	dword ptr 0128h[ESP],0
		mov	EDX,012Ch[ESP]
		mov	EAX,0128h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0128h[ESP]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	011Ch[ESP],EAX
L3019:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	012Ch[ESP],EAX
		je	L3074
		push	dword ptr 011Ch[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 010h[EBX]
		mov	dword ptr 0144h[ESP],0
		mov	dword ptr 0140h[ESP],0
		mov	EDX,0144h[ESP]
		mov	EAX,0140h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0140h[ESP]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	012Ch[ESP],EAX
L3074:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	013Ch[ESP],EAX
		je	L30C9
		push	dword ptr 012Ch[ESP]
		mov	dword ptr 014Ch[ESP],0
		mov	dword ptr 0148h[ESP],0
		mov	EDX,014Ch[ESP]
		mov	EAX,0148h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0148h[ESP]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	013Ch[ESP],EAX
L30C9:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	014Ch[ESP],EAX
		je	L30FC
		mov	ECX,EAX
		push	dword ptr 01Ch[ESI]
		push	dword ptr 0140h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	014Ch[ESP],EAX
L30FC:		mov	EDX,014Ch[ESP]
		mov	01Ch[ESI],EDX
		add	ESP,8
L3109:		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0148h[ESP],EAX
		je	L313F
		mov	ECX,EAX
		push	0
		push	dword ptr 0104h[ESP]
		push	dword ptr 010h[EBX]
		push	0
		push	0200000h
		call	near ptr ??0Parameter@@QAE@_KPAUType@@PAUIdentifier@@PAUExpression@@@Z
		mov	0148h[ESP],EAX
L313F:		push	dword ptr 0148h[ESP]
		mov	ECX,0100h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		inc	EDI
		cmp	EDI,010h[ESP]
		jb	L2F14
L315D:		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	014Ch[ESP],EAX
		je	L3191
		mov	ECX,EAX
		push	1
		push	0
		push	dword ptr ?basic@Type@@2QAPAU1@A[048h]
		push	dword ptr 0108h[ESP]
		call	near ptr ??0TypeFunction@@QAE@PAUParameters@@PAUType@@HW4LINK@@@Z
		mov	014Ch[ESP],EAX
L3191:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0150h[ESP],EAX
		je	L31B4
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	0150h[ESP],EAX
L31B4:		mov	EDX,0150h[ESP]
		mov	02Ch[ESI],EDX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0154h[ESP],EAX
		je	L31E1
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	0154h[ESP],EAX
L31E1:		mov	EDX,0154h[ESP]
		mov	030h[ESI],EDX
		push	0E8h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L3240
		mov	ECX,EDI
		push	ESI
		push	0A2h
		push	dword ptr 0154h[ESP]
		mov	dword ptr 016Ch[ESP],0
		mov	dword ptr 0168h[ESP],0
		mov	EDX,016Ch[ESP]
		mov	EAX,0168h[ESP]
		push	EDX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0FuncLiteralDeclaration@@QAE@ULoc@@0PAUType@@W4TOK@@PAUForeachStatement@@@Z
		mov	EDI,EAX
L3240:		mov	EDX,01Ch[ESI]
		mov	054h[EDI],EDX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0168h[ESP],EAX
		je	L3270
		mov	ECX,EAX
		push	EDI
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0FuncExp@@QAE@ULoc@@PAUFuncLiteralDeclaration@@@Z
		mov	0168h[ESP],EAX
L3270:		push	dword ptr 0220h[ESP]
		mov	ECX,016Ch[ESP]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		mov	ECX,030h[ESI]
		xor	EBX,EBX
		mov	0164h[ESP],EAX
		cmp	4[ECX],EBX
		je	L335E
L3298:		mov	ECX,030h[ESI]
		mov	ECX,8[ECX]
		mov	EAX,[EBX*4][ECX]
		mov	ECX,010h[EAX]
		mov	ECX,8[ECX]
		mov	EDX,[ECX]
		mov	ECX,014h[EDX]
		cmp	dword ptr 028h[ECX],0
		jne	L3351
		mov	016Ch[ESP],EAX
		mov	ECX,02Ch[ESI]
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0170h[ESP],EAX
		je	L333B
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L32FF
		mov	EDX,02Ch[ESI]
		mov	EAX,4[EDX]
		xor	ECX,ECX
		inc	EAX
		push	ECX
		mov	ECX,EDI
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EDI,EAX
L32FF:		mov	EDX,EDI
		push	EDI
		mov	dword ptr 017Ch[ESP],0
		mov	dword ptr 0178h[ESP],0
		mov	EDX,017Ch[ESP]
		mov	EAX,0178h[ESP]
		push	EDX
		push	EAX
		mov	ECX,017Ch[ESP]
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0170h[ESP],EAX
L333B:		mov	ECX,016Ch[ESP]
		mov	ECX,010h[ECX]
		mov	ECX,8[ECX]
		mov	EDX,0170h[ESP]
		mov	[ECX],EDX
L3351:		mov	EDX,030h[ESI]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L3298
L335E:		mov	EAX,020h[ESP]
		mov	EBX,4[EAX]
		cmp	EBX,2
		jne	L35BE
		mov	EDX,014h[ESI]
		mov	ECX,8[EDX]
		mov	EBX,[ECX]
		cmp	dword ptr 010h[ESP],2
		jne	L33DC
		mov	EAX,8[EBX]
		mov	EDX,0Ch[EBX]
		and	EAX,0200000h
		xor	EDX,EDX
		or	EDX,EAX
		je	L339C
		push	offset FLAT:_DATA[0368h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L339C:		mov	ECX,014h[ESP]
		push	dword ptr 028h[ECX]
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 4[EDX]
		test	EAX,EAX
		jne	L33D3
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,014h[ESP]
		mov	ECX,028h[ECX]
		push	EAX
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0388h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,010h
L33D3:		mov	ECX,014h[ESI]
		mov	EDX,8[ECX]
		mov	EBX,4[EDX]
L33DC:		mov	ECX,014h[ESP]
		push	dword ptr 024h[ECX]
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 4[EDX]
		test	EAX,EAX
		jne	L3415
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,014h[ESP]
		mov	EDI,024h[ECX]
		push	EAX
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[03B0h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,010h
L3415:		cmp	dword ptr 010h[ESP],2
		jne	L3433
		push	offset FLAT:_DATA[03D8h]
		push	dword ptr ?basic@Type@@2QAPAU1@A[048h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PBD@Z
		mov	EBX,EAX
		add	ESP,8
		jmp short	L3448
L3433:		push	offset FLAT:_DATA[03E4h]
		push	dword ptr ?basic@Type@@2QAPAU1@A[048h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PBD@Z
		mov	EBX,EAX
		add	ESP,8
L3448:		mov	017Ch[ESP],EBX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0180h[ESP],EAX
		je	L34A4
		push	dword ptr 017Ch[ESP]
		mov	dword ptr 018Ch[ESP],0
		mov	dword ptr 0188h[ESP],0
		mov	EDX,018Ch[ESP]
		mov	EAX,0188h[ESP]
		push	EDX
		push	EAX
		mov	ECX,018Ch[ESP]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0180h[ESP],EAX
L34A4:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L34C1
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Expressions@@6B@
L34C1:		mov	ECX,EDI
		push	dword ptr 018h[ESI]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,014h[ESP]
		mov	ECX,02Ch[EDX]
		call	near ptr ?size@Type@@QAE_KXZ
		mov	EDX,?PTRSIZE@@3HA
		lea	ECX,-1[EAX][EDX]
		mov	018Ch[ESP],EAX
		lea	EDX,-1[EDX]
		not	EDX
		and	ECX,EDX
		mov	018Ch[ESP],ECX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0190h[ESP],EAX
		je	L3554
		xor	EDX,EDX
		mov	ECX,?Tsize_t@@3HA
		push	dword ptr ?basic@Type@@2QAPAU1@A[ECX*4]
		mov	EAX,0190h[ESP]
		push	EDX
		push	EAX
		mov	01A4h[ESP],EDX
		mov	01A0h[ESP],EDX
		mov	EDX,01A4h[ESP]
		mov	EAX,01A0h[ESP]
		push	EDX
		push	EAX
		mov	ECX,01A4h[ESP]
		call	near ptr ??0IntegerExp@@QAE@ULoc@@_KPAUType@@@Z
		mov	0190h[ESP],EAX
L3554:		mov	EDX,0190h[ESP]
		mov	ECX,EDI
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	ECX,EDI
		push	dword ptr 0164h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	019Ch[ESP],EAX
		je	L35A2
		mov	ECX,EAX
		push	EDI
		push	dword ptr 0184h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@PAUExpressions@@@Z
		mov	019Ch[ESP],EAX
L35A2:		mov	ECX,019Ch[ESP]
		mov	EDX,?basic@Type@@2QAPAU1@A[048h]
		mov	010h[ECX],EDX
		mov	EBX,019Ch[ESP]
		jmp	near ptr L397D
L35BE:		test	EBX,EBX
		je	L35CB
		cmp	EBX,1
		jne	L37C5
L35CB:		mov	EAX,018h[ESP]
		mov	EBX,4[EAX]
		cmp	EBX,021h
		je	L35E3
		cmp	EBX,022h
		je	L35F0
		cmp	EBX,023h
		je	L35FD
		jmp short	L360A
L35E3:		mov	dword ptr 01B8h[ESP],0
		jmp short	L361E
L35F0:		mov	dword ptr 01B8h[ESP],3
		jmp short	L361E
L35FD:		mov	dword ptr 01B8h[ESP],6
		jmp short	L361E
L360A:		push	070Ah
		push	offset FLAT:_DATA[0198h]
		push	offset FLAT:_DATA[01A4h]
		call	near ptr __assert
L361E:		mov	EDI,01Ch[ESP]
		mov	ECX,4[EDI]
		cmp	ECX,021h
		je	L365D
		cmp	ECX,022h
		je	L3636
		cmp	ECX,023h
		je	L363F
		jmp short	L3649
L3636:		inc	dword ptr 01B8h[ESP]
		jmp short	L365D
L363F:		add	dword ptr 01B8h[ESP],2
		jmp short	L365D
L3649:		push	0711h
		push	offset FLAT:_DATA[0198h]
		push	offset FLAT:_DATA[01A4h]
		call	near ptr __assert
L365D:		push	dword ptr 010h[ESP]
		mov	EDX,01BCh[ESP]
		cmp	dword ptr 010h[ESI],0CDh
		lea	ECX,FLAT:_DATA[0ECh][EDX*2][EDX]
		push	ECX
		push	2
		jne	L3682
		mov	EDX,offset FLAT:_DATA[03F0h]
		jmp short	L3687
L3682:		mov	EDX,offset FLAT:_DATA[03F4h]
L3687:		push	EDX
		push	offset FLAT:_DATA[03F8h]
		lea	ECX,01B4h[ESP]
		push	ECX
		call	near ptr _sprintf
		add	ESP,018h
		cmp	EAX,017h
		jb	L36B6
		push	0715h
		push	offset FLAT:_DATA[0198h]
		push	offset FLAT:_DATA[040Ch]
		call	near ptr __assert
L36B6:		lea	EDX,01A0h[ESP]
		push	EDX
		push	dword ptr ?basic@Type@@2QAPAU1@A[048h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PBD@Z
		mov	EBX,EAX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01C4h[ESP],EAX
		je	L371A
		push	EBX
		mov	dword ptr 01D4h[ESP],0
		mov	dword ptr 01D0h[ESP],0
		mov	EDX,01D4h[ESP]
		mov	EAX,01D0h[ESP]
		push	EDX
		push	EAX
		mov	ECX,01D0h[ESP]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	01C4h[ESP],EAX
L371A:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L3737
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Expressions@@6B@
L3737:		add	ESP,8
		mov	EDX,020h[ESP]
		cmp	dword ptr 4[EDX],1
		jne	L3760
		mov	ECX,018h[ESP]
		call	near ptr ?arrayOf@Type@@QAEPAU1@XZ
		mov	ECX,018h[ESI]
		mov	EDX,[ECX]
		push	EAX
		push	dword ptr 0224h[ESP]
		call	dword ptr 060h[EDX]
		mov	018h[ESI],EAX
L3760:		push	dword ptr 018h[ESI]
		mov	ECX,EDI
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	ECX,EDI
		push	dword ptr 0164h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01CCh[ESP],EAX
		je	L37A9
		mov	ECX,EAX
		push	EDI
		push	dword ptr 01C0h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@PAUExpressions@@@Z
		mov	01CCh[ESP],EAX
L37A9:		mov	ECX,01CCh[ESP]
		mov	EDX,?basic@Type@@2QAPAU1@A[048h]
		mov	010h[ECX],EDX
		mov	EBX,01CCh[ESP]
		jmp	near ptr L397D
L37C5:		cmp	EBX,0Bh
		jne	L38A5
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L37EB
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Expressions@@6B@
L37EB:		mov	ECX,EDI
		push	dword ptr 0164h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,018h[ESI]
		cmp	dword ptr 0Ch[EDX],0A2h
		jne	L384D
		mov	ECX,01Ch[EDX]
		mov	EDX,[ECX]
		call	dword ptr 0174h[EDX]
		test	EAX,EAX
		je	L384D
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01D0h[ESP],EAX
		je	L3844
		mov	EDX,018h[ESI]
		push	EDI
		mov	ECX,EAX
		push	dword ptr 018h[EDX]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@PAUExpressions@@@Z
		mov	01D0h[ESP],EAX
L3844:		mov	EBX,01D0h[ESP]
		jmp short	L3881
L384D:		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01D4h[ESP],EAX
		je	L387A
		mov	ECX,EAX
		push	EDI
		push	dword ptr 018h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@PAUExpressions@@@Z
		mov	01D4h[ESP],EAX
L387A:		mov	EBX,01D4h[ESP]
L3881:		push	dword ptr 0220h[ESP]
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 028h[EDX]
		mov	ECX,010h[EAX]
		mov	EBX,EAX
		cmp	ECX,?basic@Type@@2QAPAU1@A[048h]
		jne	L3965
		jmp	near ptr L397D
L38A5:		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01D8h[ESP],EAX
		je	L38E9
		cmp	dword ptr 010h[ESI],0CDh
		jne	L38CB
		mov	ECX,?applyReverse@Id@@2PAUIdentifier@@A
		jmp short	L38D1
L38CB:		mov	ECX,?apply@Id@@2PAUIdentifier@@A
L38D1:		push	ECX
		mov	ECX,EAX
		push	dword ptr 018h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DotIdExp@@QAE@ULoc@@PAUExpression@@PAUIdentifier@@@Z
		mov	01D8h[ESP],EAX
L38E9:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L3906
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Expressions@@6B@
L3906:		mov	ECX,EDI
		push	dword ptr 0164h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01DCh[ESP],EAX
		je	L3945
		mov	ECX,EAX
		push	EDI
		push	dword ptr 01DCh[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@PAUExpressions@@@Z
		mov	01DCh[ESP],EAX
L3945:		push	dword ptr 0220h[ESP]
		mov	ECX,01E0h[ESP]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		mov	ECX,010h[EAX]
		mov	EBX,EAX
		cmp	ECX,?basic@Type@@2QAPAU1@A[048h]
		je	L397D
L3965:		mov	ECX,020h[ESP]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0420h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L397D:		mov	EDX,02Ch[ESI]
		cmp	dword ptr 4[EDX],0
		jne	L39BC
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01E0h[ESP],EAX
		je	L39B0
		mov	ECX,EAX
		push	EBX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	01E0h[ESP],EAX
L39B0:		mov	EDI,01E0h[ESP]
		jmp	near ptr L3BD7
L39BC:		mov	0F8h[ESP],EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01E4h[ESP],EAX
		je	L39EC
		mov	ECX,EAX
		call	near ptr ??0Array@@QAE@XZ
		mov	EDX,01E4h[ESP]
		mov	dword ptr [EDX],offset FLAT:??_7Statements@@6B@
L39EC:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L3A2D
		mov	ECX,EDI
		push	0
		mov	dword ptr 01F4h[ESP],0
		mov	dword ptr 01F0h[ESP],0
		mov	EDX,01F4h[ESP]
		mov	EAX,01F0h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0BreakStatement@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EDI,EAX
L3A2D:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01F4h[ESP],EAX
		je	L3A7C
		push	EDI
		mov	dword ptr 0204h[ESP],0
		mov	dword ptr 0200h[ESP],0
		mov	EDX,0204h[ESP]
		mov	EAX,0200h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0200h[ESP]
		call	near ptr ??0DefaultStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	01F4h[ESP],EAX
L3A7C:		push	dword ptr 01F4h[ESP]
		mov	ECX,01E8h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,02Ch[ESI]
		xor	EBX,EBX
		cmp	4[EDX],EBX
		je	L3B38
		mov	0210h[ESP],EBX
		mov	020Ch[ESP],EBX
L3AAB:		mov	ECX,02Ch[ESI]
		mov	EDX,8[ECX]
		mov	ECX,[EBX*4][EDX]
		mov	0Ch[ESP],ECX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0204h[ESP],EAX
		je	L3B18
		push	dword ptr 0Ch[ESP]
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L3AF4
		lea	EAX,2[EBX]
		mov	EDX,EAX
		sar	EDX,01Fh
		mov	ECX,EDI
		push	EDX
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EDI,EAX
L3AF4:		mov	EDX,EDI
		push	EDI
		push	dword ptr 0218h[ESP]
		push	dword ptr 0218h[ESP]
		mov	ECX,0214h[ESP]
		call	near ptr ??0CaseStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	0204h[ESP],EAX
L3B18:		push	dword ptr 0204h[ESP]
		mov	ECX,01E8h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,02Ch[ESI]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L3AAB
L3B38:		mov	EDI,0Ch[ESP]
		mov	EBX,0F8h[ESP]
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0214h[ESP],EAX
		je	L3B73
		mov	ECX,EAX
		push	dword ptr 01E4h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	0214h[ESP],EAX
L3B73:		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0218h[ESP],EAX
		je	L3BA4
		mov	ECX,EAX
		push	dword ptr 0214h[ESP]
		push	EBX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0SwitchStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	0218h[ESP],EAX
L3BA4:		push	dword ptr 0220h[ESP]
		mov	ECX,021Ch[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	EDI,EAX
		jmp short	L3BD7
L3BBB:		mov	ECX,018h[ESI]
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0450h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		xor	EDI,EDI
		add	ESP,0Ch
L3BD7:		mov	ESI,0220h[ESP]
		mov	ECX,ESI
		dec	dword ptr 044h[ESI]
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0210h
		ret	4
?hasBreak@ForeachStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
		nop
		nop
?hasContinue@ForeachStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?usesEH@ForeachStatement@@UAEHXZ:
		push	ECX
		mov	ECX,01Ch[ECX]
		mov	EAX,[ECX]
		call	dword ptr 048h[EAX]
		pop	ECX
		ret
?blockExit@ForeachStatement@@UAEHXZ:
		push	ECX
		push	ECX
		mov	ECX,018h[ECX]
		mov	EAX,[ECX]
		push	EBX
		mov	EBX,1
		push	ESI
		push	EDI
		call	dword ptr 08Ch[EAX]
		test	EAX,EAX
		je	L3C31
		mov	EBX,3
L3C31:		mov	EDX,010h[ESP]
		mov	ESI,01Ch[EDX]
		test	ESI,ESI
		je	L3C4A
		mov	EDI,[ESI]
		mov	ECX,ESI
		call	dword ptr 04Ch[EDI]
		and	EAX,0FFFFFF9Fh
		or	EBX,EAX
L3C4A:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?comeFrom@ForeachStatement@@UAEHXZ:
		push	ECX
		cmp	dword ptr 01Ch[ECX],0
		je	L3C64
		mov	ECX,01Ch[ECX]
		mov	EDX,[ECX]
		call	dword ptr 050h[EDX]
		pop	ECX
		ret
L3C64:		pop	ECX
		xor	EAX,EAX
		ret
?toCBuffer@ForeachStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		push	EBP
		mov	EBP,ECX
		push	ESI
		mov	ESI,014h[ESP]
		push	EDI
		push	dword ptr 010h[EBP]
		call	near ptr ?toChars@Token@@SAPBDW4TOK@@@Z
		add	ESP,4
		mov	ECX,ESI
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,ESI
		push	offset FLAT:_DATA[04A8h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EDX,014h[EBP]
		xor	EBX,EBX
		cmp	4[EDX],EBX
		je	L3D14
L3C9C:		mov	ECX,014h[EBP]
		mov	EDX,8[ECX]
		mov	EDI,[EBX*4][EDX]
		test	EBX,EBX
		je	L3CB5
		push	offset FLAT:_DATA[04ACh]
		mov	ECX,ESI
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L3CB5:		mov	EAX,8[EDI]
		mov	EDX,0Ch[EDI]
		and	EAX,0200000h
		xor	EDX,EDX
		or	EDX,EAX
		je	L3CE3
		cmp	byte ptr ?global@@3UGlobal@@A[065h],1
		jne	L3CD6
		mov	ECX,offset FLAT:_DATA[04B0h]
		jmp short	L3CDB
L3CD6:		mov	ECX,offset FLAT:_DATA[04B8h]
L3CDB:		push	ECX
		mov	ECX,ESI
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L3CE3:		cmp	dword ptr 010h[EDI],0
		je	L3CFB
		push	dword ptr 01Ch[ESP]
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	dword ptr 014h[EDI]
		push	ESI
		call	dword ptr 038h[EDX]
		jmp short	L3D0B
L3CFB:		mov	ECX,014h[EDI]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,ESI
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L3D0B:		mov	ECX,014h[EBP]
		inc	EBX
		cmp	4[ECX],EBX
		ja	L3C9C
L3D14:		mov	EBX,01Ch[ESP]
		mov	ECX,ESI
		push	offset FLAT:_DATA[04C0h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,018h[EBP]
		mov	EDX,[ECX]
		push	EBX
		push	ESI
		call	dword ptr 048h[EDX]
		mov	ECX,ESI
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,ESI
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,ESI
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,ESI
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,01Ch[EBP]
		test	EDX,EDX
		je	L3D5E
		push	EBX
		mov	ECX,EDX
		mov	EDX,[EDX]
		push	ESI
		call	dword ptr 028h[EDX]
L3D5E:		push	07Dh
		mov	ECX,ESI
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,ESI
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	EAX
		ret	8
??0IfStatement@@QAE@ULoc@@PAUParameter@@PAUExpression@@PAUStatement@@3@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,018h[ESP]
		mov	ECX,01Ch[ESP]
		mov	010h[EBX],EAX
		mov	EDX,020h[ESP]
		mov	ESI,024h[ESP]
		mov	dword ptr [EBX],offset FLAT:??_7IfStatement@@6B@
		mov	EAX,EBX
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		mov	01Ch[EBX],ESI
		mov	dword ptr 020h[EBX],0
		pop	ESI
		pop	EBX
		pop	ECX
		ret	018h
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@IfStatement@@UAEPAUStatement@@XZ:
		sub	ESP,010h
		push	EBX
		xor	EBX,EBX
		push	ESI
		push	EDI
		mov	018h[ESP],ECX
		mov	EAX,018h[ECX]
		test	EAX,EAX
		je	L3DDC
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		mov	EBX,EAX
L3DDC:		mov	ECX,018h[ESP]
		xor	ESI,ESI
		mov	EDX,01Ch[ECX]
		test	EDX,EDX
		je	L3DF2
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 024h[EDX]
		mov	ESI,EAX
L3DF2:		mov	010h[ESP],EBX
		mov	ECX,018h[ESP]
		mov	EDX,010h[ECX]
		test	EDX,EDX
		je	L3E0A
		mov	ECX,EDX
		call	near ptr ?syntaxCopy@Parameter@@QAEPAU1@XZ
		jmp short	L3E0C
L3E0A:		xor	EAX,EAX
L3E0C:		mov	014h[ESP],EAX
		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L3E49
		push	ESI
		push	dword ptr 014h[ESP]
		mov	EDX,020h[ESP]
		mov	ECX,014h[EDX]
		mov	EDI,[ECX]
		call	dword ptr 024h[EDI]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 020h[ESP]
		mov	EDX,028h[ESP]
		push	dword ptr 8[EDX]
		push	dword ptr 4[EDX]
		call	near ptr ??0IfStatement@@QAE@ULoc@@PAUParameter@@PAUExpression@@PAUStatement@@3@Z
		mov	EBX,EAX
L3E49:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,010h
		ret
?semantic@IfStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,01Ch
		push	EBX
		mov	EBX,ECX
		mov	ECX,014h[EBX]
		push	EBP
		mov	EDX,[ECX]
		push	ESI
		mov	ESI,02Ch[ESP]
		push	EDI
		push	ESI
		call	dword ptr 028h[EDX]
		push	EAX
		mov	014h[EBX],EAX
		push	ESI
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	014h[EBX],EAX
		mov	EDX,[EAX]
		call	dword ptr 06Ch[EDX]
		mov	ECX,EAX
		mov	014h[EBX],EAX
		mov	EDX,[EAX]
		push	1
		call	dword ptr 074h[EDX]
		mov	014h[EBX],EAX
		mov	ECX,058h[ESI]
		mov	018h[ESP],ECX
		add	ESP,8
		cmp	dword ptr 010h[EBX],0
		je	L3FBE
		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L3EB8
		mov	ECX,EBP
		call	near ptr ??0ScopeDsymbol@@QAE@XZ
		mov	EBP,EAX
L3EB8:		mov	EDX,8[ESI]
		mov	ECX,ESI
		mov	0Ch[EBP],EDX
		push	EBP
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	EDX,010h[EBX]
		mov	ECX,010h[EDX]
		mov	EDI,EAX
		test	ECX,ECX
		jne	L3ED8
		mov	EDX,014h[EBX]
		mov	ECX,010h[EDX]
L3ED8:		mov	014h[ESP],ECX
		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	018h[ESP],EAX
		je	L3F0B
		mov	EDX,010h[EBX]
		push	0
		mov	ECX,EAX
		push	dword ptr 014h[EDX]
		push	dword ptr 01Ch[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	018h[ESP],EAX
L3F0B:		mov	EDX,018h[ESP]
		mov	020h[EBX],EDX
		mov	dword ptr 050h[EDX],1
		mov	ECX,020h[EBX]
		mov	EDX,[ECX]
		push	EDI
		call	dword ptr 040h[EDX]
		mov	ECX,EDI
		push	dword ptr 020h[EBX]
		call	near ptr ?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
		test	EAX,EAX
		jne	L3F44
		push	08B5h
		push	offset FLAT:_DATA[0198h]
		push	offset FLAT:_DATA[01A4h]
		call	near ptr __assert
L3F44:		push	01Ch
		mov	ECX,020h[EBX]
		mov	EDX,010h[ESI]
		mov	0Ch[ECX],EDX
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L3F83
		mov	ECX,EBP
		push	dword ptr 020h[EBX]
		mov	dword ptr 028h[ESP],0
		mov	dword ptr 024h[ESP],0
		mov	EDX,028h[ESP]
		mov	EAX,024h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	EBP,EAX
L3F83:		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	028h[ESP],EAX
		je	L3FAA
		mov	ECX,EAX
		push	dword ptr 014h[EBX]
		push	EBP
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0AssignExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	028h[ESP],EAX
L3FAA:		mov	EDX,028h[ESP]
		mov	ECX,EDX
		mov	014h[EBX],EDX
		mov	EDX,[EDX]
		push	EDI
		call	dword ptr 028h[EDX]
		mov	014h[EBX],EAX
		jmp short	L3FC7
L3FBE:		mov	ECX,ESI
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		mov	EDI,EAX
L3FC7:		push	EDI
		mov	ECX,018h[EBX]
		call	near ptr ?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z
		mov	ECX,EDI
		mov	018h[EBX],EAX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EBP,058h[ESI]
		mov	EDX,010h[ESP]
		mov	058h[ESI],EDX
		mov	ECX,01Ch[EBX]
		test	ECX,ECX
		je	L3FF8
		push	0
		push	0
		push	ESI
		call	near ptr ?semanticScope@Statement@@QAEPAU1@PAUScope@@PAU1@1@Z
		mov	01Ch[EBX],EAX
L3FF8:		push	EBP
		mov	ECX,ESI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ?mergeCallSuper@Scope@@QAEXULoc@@I@Z
		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
?usesEH@IfStatement@@UAEHXZ:
		push	ECX
		mov	EAX,018h[ECX]
		test	EAX,EAX
		push	EBX
		push	ESI
		je	L4027
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		test	EAX,EAX
		jne	L4041
L4027:		mov	EBX,8[ESP]
		mov	ESI,01Ch[EBX]
		test	ESI,ESI
		je	L403D
		mov	EAX,[ESI]
		mov	ECX,ESI
		call	dword ptr 048h[EAX]
		test	EAX,EAX
		jne	L4041
L403D:		xor	EAX,EAX
		jmp short	L4046
L4041:		mov	EAX,1
L4046:		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?blockExit@IfStatement@@UAEHXZ:
		push	ECX
		push	ECX
		mov	ECX,014h[ECX]
		mov	EAX,[ECX]
		push	EBX
		xor	EBX,EBX
		push	ESI
		push	EDI
		call	dword ptr 08Ch[EAX]
		test	EAX,EAX
		je	L406B
		mov	EBX,2
L406B:		push	1
		mov	EDX,014h[ESP]
		mov	ECX,014h[EDX]
		mov	ESI,[ECX]
		call	dword ptr 080h[ESI]
		test	EAX,EAX
		je	L409A
		mov	EDI,010h[ESP]
		cmp	dword ptr 018h[EDI],0
		je	L40E5
		mov	EAX,010h[ESP]
		mov	ECX,018h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 04Ch[EDX]
		or	EBX,EAX
		jmp short	L40EB
L409A:		push	0
		mov	EDI,014h[ESP]
		mov	ECX,014h[EDI]
		mov	EAX,[ECX]
		call	dword ptr 080h[EAX]
		test	EAX,EAX
		jne	L40CF
		mov	EDX,010h[ESP]
		cmp	dword ptr 018h[EDX],0
		je	L40C9
		mov	ESI,010h[ESP]
		mov	ECX,018h[ESI]
		mov	EDI,[ECX]
		call	dword ptr 04Ch[EDI]
		or	EBX,EAX
		jmp short	L40CF
L40C9:		or	EBX,1
L40CF:		mov	EAX,010h[ESP]
		mov	EDX,01Ch[EAX]
		test	EDX,EDX
		je	L40E5
		mov	ESI,[EDX]
		mov	ECX,EDX
		call	dword ptr 04Ch[ESI]
		or	EBX,EAX
		jmp short	L40EB
L40E5:		or	EBX,1
L40EB:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?toCBuffer@IfStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		mov	ESI,014h[ESP]
		push	offset FLAT:_DATA[04C4h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EDX,8[ESP]
		mov	ECX,010h[EDX]
		test	ECX,ECX
		je	L4161
		cmp	dword ptr 010h[ECX],0
		je	L4132
		push	ESI
		mov	EDX,0Ch[ESP]
		mov	ECX,010h[EDX]
		push	dword ptr 014h[ECX]
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 038h[EDX]
		jmp short	L4155
L4132:		push	offset FLAT:_DATA[04CCh]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EDX,8[ESP]
		mov	ECX,010h[EDX]
		mov	ECX,014h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L4155:		push	offset FLAT:_DATA[04D4h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L4161:		push	ESI
		mov	EDX,0Ch[ESP]
		mov	ECX,014h[EDX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	ECX,018h[EDX]
		push	ESI
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
		mov	ECX,8[ESP]
		cmp	dword ptr 01Ch[ECX],0
		je	L41B8
		push	offset FLAT:_DATA[04D8h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	ECX,01Ch[EDX]
		push	ESI
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
L41B8:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
??0ConditionalStatement@@QAE@ULoc@@PAUCondition@@PAUStatement@@2@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EDX,018h[ESP]
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ConditionalStatement@@6B@
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		pop	EBX
		ret	014h
?syntaxCopy@ConditionalStatement@@UAEPAUStatement@@XZ:
		sub	ESP,0Ch
		push	EBX
		xor	EBX,EBX
		push	ESI
		mov	010h[ESP],ECX
		mov	EAX,018h[ECX]
		test	EAX,EAX
		je	L420C
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		mov	EBX,EAX
L420C:		mov	0Ch[ESP],EBX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4248
		push	dword ptr 0Ch[ESP]
		mov	ESI,014h[ESP]
		mov	ECX,014h[ESI]
		mov	EAX,[ECX]
		call	dword ptr 024h[EAX]
		mov	ECX,010h[ESI]
		mov	EDX,[ECX]
		push	EAX
		call	dword ptr [EDX]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ConditionalStatement@@QAE@ULoc@@PAUCondition@@PAUStatement@@2@Z
		mov	EBX,EAX
L4248:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
?semantic@ConditionalStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		push	ESI
		push	EDI
		push	0
		push	dword ptr 01Ch[ESP]
		call	dword ptr 4[EAX]
		test	EAX,EAX
		je	L4287
		push	dword ptr 018h[ESP]
		mov	ECX,014h[ESP]
		mov	ECX,014h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	EBX,010h[ESP]
		mov	014h[EBX],EAX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	4
L4287:		mov	EDX,010h[ESP]
		mov	EBX,018h[EDX]
		test	EBX,EBX
		je	L42A4
		push	dword ptr 018h[ESP]
		mov	ESI,[EBX]
		mov	ECX,EBX
		call	dword ptr 03Ch[ESI]
		mov	EDI,010h[ESP]
		mov	018h[EDI],EAX
L42A4:		mov	EAX,010h[ESP]
		mov	EAX,018h[EAX]
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	4
?flatten@ConditionalStatement@@UAEPAUStatements@@PAUScope@@@Z:
		push	ECX
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		push	0
		push	dword ptr 014h[ESP]
		call	dword ptr 4[EAX]
		test	EAX,EAX
		je	L42D2
		mov	EBX,8[ESP]
		mov	ECX,014h[EBX]
		jmp short	L42D9
L42D2:		mov	EDX,8[ESP]
		mov	ECX,018h[EDX]
L42D9:		mov	4[ESP],ECX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L42FA
		mov	ECX,EBX
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EBX],offset FLAT:??_7Statements@@6B@
L42FA:		mov	ECX,EBX
		push	dword ptr 4[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret	4
		nop
		nop
?usesEH@ConditionalStatement@@UAEHXZ:
		push	ECX
		mov	EAX,014h[ECX]
		test	EAX,EAX
		push	EBX
		push	ESI
		je	L4325
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		test	EAX,EAX
		jne	L433F
L4325:		mov	EBX,8[ESP]
		mov	ESI,018h[EBX]
		test	ESI,ESI
		je	L433B
		mov	EAX,[ESI]
		mov	ECX,ESI
		call	dword ptr 048h[EAX]
		test	EAX,EAX
		jne	L433F
L433B:		xor	EAX,EAX
		jmp short	L4344
L433F:		mov	EAX,1
L4344:		pop	ESI
		pop	EBX
		pop	ECX
		ret
?blockExit@ConditionalStatement@@UAEHXZ:
		push	ECX
		push	ECX
		mov	ECX,014h[ECX]
		mov	EAX,[ECX]
		push	EBX
		push	ESI
		push	EDI
		call	dword ptr 04Ch[EAX]
		mov	EDX,010h[ESP]
		mov	ESI,018h[EDX]
		mov	EBX,EAX
		test	ESI,ESI
		je	L436B
		mov	EDI,[ESI]
		mov	ECX,ESI
		call	dword ptr 04Ch[EDI]
		or	EBX,EAX
L436B:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?toCBuffer@ConditionalStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		push	EBX
		mov	EBX,0Ch[ESP]
		push	ESI
		mov	ESI,014h[ESP]
		push	ESI
		push	EBX
		call	dword ptr 8[EDX]
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,EBX
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	ECX,014h[EDX]
		test	ECX,ECX
		je	L43B2
		push	ESI
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
L43B2:		push	07Dh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		cmp	dword ptr 018h[EDX],0
		je	L440D
		push	offset FLAT:_DATA[04D8h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,EBX
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	ECX,018h[EDX]
		push	ESI
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
		mov	ECX,EBX
		push	07Dh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
L440D:		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
??0PragmaStatement@@QAE@ULoc@@PAUIdentifier@@PAUExpressions@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EDX,018h[ESP]
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7PragmaStatement@@6B@
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		pop	EBX
		ret	014h
?syntaxCopy@PragmaStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	ESI
		mov	ESI,ECX
		mov	EDX,018h[ESI]
		test	EDX,EDX
		je	L4468
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 024h[EDX]
		mov	EBX,EAX
L4468:		mov	8[ESP],EBX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L449E
		push	dword ptr 8[ESP]
		push	dword ptr 014h[ESI]
		call	near ptr ?arraySyntaxCopy@Expression@@SAPAUExpressions@@PAU2@@Z
		add	ESP,4
		mov	ECX,EBX
		push	EAX
		push	dword ptr 010h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0PragmaStatement@@QAE@ULoc@@PAUIdentifier@@PAUExpressions@@PAUStatement@@@Z
		mov	EBX,EAX
L449E:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?semantic@PragmaStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		push	EBP
		mov	EBP,010h[ESP]
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EAX,010h[EDI]
		cmp	EAX,?msg@Id@@2PAUIdentifier@@A
		jne	L4545
		mov	EBX,014h[EDI]
		test	EBX,EBX
		je	L4573
		xor	ESI,ESI
		cmp	4[EBX],ESI
		je	L4531
L44D0:		push	6
		mov	ECX,014h[EDI]
		mov	EDX,8[ECX]
		push	EBP
		mov	EBX,[ESI*4][EDX]
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 028h[EDX]
		mov	EBX,EAX
		mov	EDX,[EBX]
		mov	ECX,EAX
		call	dword ptr 074h[EDX]
		mov	EBX,EAX
		cmp	dword ptr 0Ch[EAX],07Ah
		jne	L450E
		push	dword ptr 018h[EBX]
		push	dword ptr 01Ch[EBX]
		push	offset FLAT:_DATA[04E0h]
		push	offset FLAT:__iob[040h]
		call	near ptr _fprintf
		add	ESP,010h
		jmp short	L4528
L450E:		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[04E8h]
		push	offset FLAT:__iob[040h]
		call	near ptr _fprintf
		add	ESP,0Ch
L4528:		mov	ECX,014h[EDI]
		inc	ESI
		cmp	4[ECX],ESI
		ja	L44D0
L4531:		push	offset FLAT:_DATA[04ECh]
		push	offset FLAT:__iob[040h]
		call	near ptr _fprintf
		add	ESP,8
		jmp short	L4573
L4545:		cmp	EAX,?lib@Id@@2PAUIdentifier@@A
		jne	L455D
		push	offset FLAT:_DATA[04F0h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp short	L4573
L455D:		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0518h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L4573:		mov	EAX,018h[EDI]
		test	EAX,EAX
		je	L4585
		push	EBP
		mov	EBX,[EAX]
		mov	ECX,EAX
		call	dword ptr 03Ch[EBX]
		mov	018h[EDI],EAX
L4585:		mov	EAX,018h[EDI]
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
?usesEH@PragmaStatement@@UAEHXZ:
		push	ECX
		mov	EAX,018h[ECX]
		test	EAX,EAX
		je	L45A3
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		test	EAX,EAX
		jne	L45A7
L45A3:		xor	EAX,EAX
		jmp short	L45AC
L45A7:		mov	EAX,1
L45AC:		pop	ECX
		ret
		nop
		nop
?blockExit@PragmaStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?toCBuffer@PragmaStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0530h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ESI,8[ESP]
		mov	EAX,014h[ESI]
		test	EAX,EAX
		je	L4610
		cmp	dword ptr 4[EAX],0
		je	L4610
		push	offset FLAT:_DATA[04ACh]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EDX,0Ch[ESP]
		push	dword ptr 014h[EDX]
		push	EBX
		call	near ptr ?argsToCBuffer@@YAXPAUOutBuffer@@PAUExpressions@@PAUHdrGenState@@@Z
		add	ESP,0Ch
L4610:		push	029h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ESI,8[ESP]
		cmp	dword ptr 018h[ESI],0
		je	L465D
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,EBX
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,018h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		mov	ECX,EBX
		push	07Dh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		jmp short	L466D
L465D:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
L466D:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0StaticAssertStatement@@QAE@PAUStaticAssert@@@Z:
		push	EBX
		mov	EAX,8[ESP]
		mov	EBX,ECX
		push	dword ptr 020h[EAX]
		push	dword ptr 01Ch[EAX]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	ECX,8[ESP]
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7StaticAssertStatement@@6B@
		mov	010h[EBX],ECX
		pop	EBX
		ret	4
?syntaxCopy@StaticAssertStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L46C6
		push	0
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 0A0h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ??0StaticAssertStatement@@QAE@PAUStaticAssert@@@Z
		mov	EBX,EAX
L46C6:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
		nop
		nop
		nop
?semantic@StaticAssertStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	dword ptr 8[ESP]
		call	dword ptr 044h[EAX]
		xor	EAX,EAX
		pop	ECX
		ret	4
?blockExit@StaticAssertStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
?toCBuffer@StaticAssertStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	dword ptr 05Ch[EAX]
		pop	EAX
		ret	8
??0SwitchStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		lea	ECX,01Ch[EBX]
		call	near ptr ??0Array@@QAE@XZ
		mov	EAX,018h[ESP]
		mov	EDX,01Ch[ESP]
		mov	010h[EBX],EAX
		xor	ESI,ESI
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7SwitchStatement@@6B@
		mov	014h[EBX],EDX
		mov	018h[EBX],ESI
		mov	030h[EBX],ESI
		mov	034h[EBX],ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	010h
?syntaxCopy@SwitchStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4782
		mov	EAX,8[ESP]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,010h[ESI]
		push	EAX
		mov	EAX,[ECX]
		call	dword ptr 024h[EAX]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0SwitchStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	EBX,EAX
L4782:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?semantic@SwitchStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,014h
		push	EBX
		mov	EBX,01Ch[ESP]
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	020h[ESP],ECX
		cmp	dword ptr 030h[EDI],0
		je	L47B3
		push	0A39h
		push	offset FLAT:_DATA[053Ch]
		push	offset FLAT:_DATA[0548h]
		call	near ptr __assert
L47B3:		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
		push	EAX
		mov	010h[EDI],EAX
		push	EBX
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	010h[EDI],EAX
		add	ESP,8
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 064h[EDX]
		test	EAX,EAX
		je	L47FB
		mov	EDX,010h[EDI]
		mov	ECX,010h[EDX]
		cmp	dword ptr 4[ECX],0
		je	L480E
		mov	ECX,024h[ECX]
		call	near ptr ?arrayOf@Type@@QAEPAU1@XZ
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	EAX
		push	EBX
		call	dword ptr 058h[EDX]
		mov	010h[EDI],EAX
		jmp short	L480E
L47FB:		push	EBX
		mov	ECX,010h[EDI]
		call	near ptr ?integralPromotions@Expression@@QAEPAU1@PAUScope@@@Z
		mov	ECX,EAX
		mov	010h[EDI],EAX
		call	near ptr ?checkIntegral@Expression@@QAEPAU1@XZ
L480E:		mov	028h[ESP],EBX
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	2
		call	dword ptr 074h[EDX]
		mov	ECX,028h[ESP]
		mov	010h[EDI],EAX
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		mov	028h[ESP],EAX
		mov	EDX,028h[ESP]
		mov	028h[EAX],EDI
		mov	01Ch[EDX],EDI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L484F
		mov	ECX,ESI
		call	near ptr ??0Array@@QAE@XZ
		mov	ESI,EAX
L484F:		mov	EDX,028h[ESP]
		mov	030h[EDI],ESI
		inc	dword ptr 044h[EDX]
		mov	ECX,014h[EDI]
		mov	EDX,[ECX]
		push	dword ptr 028h[ESP]
		call	dword ptr 03Ch[EDX]
		mov	ECX,028h[ESP]
		xor	EBX,EBX
		mov	014h[EDI],EAX
		dec	dword ptr 044h[ECX]
		cmp	020h[EDI],EBX
		je	L492B
L487A:		mov	EDX,024h[EDI]
		mov	EBP,[EBX*4][EDX]
		cmp	dword ptr 010h[EBP],0
		jne	L48A1
		mov	EBX,028h[ESP]
		push	offset FLAT:_DATA[0550h]
		push	EBP
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		mov	028h[ESP],EBX
		jmp	near ptr L492B
L48A1:		mov	020h[ESP],EDI
		mov	EDI,028h[ESP]
		mov	014h[ESP],EBX
		cmp	dword ptr 028h[ESP],0
		je	L4902
L48B4:		mov	EAX,01Ch[EDI]
		test	EAX,EAX
		je	L48FC
		mov	ECX,030h[EAX]
		xor	EBX,EBX
		cmp	4[ECX],EBX
		je	L48FC
L48C5:		mov	EDX,01Ch[EDI]
		mov	ECX,030h[EDX]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		mov	EDX,010h[ESI]
		mov	EDX,[EDX]
		push	dword ptr 010h[EBP]
		mov	ECX,010h[ESI]
		call	dword ptr 4[EDX]
		test	EAX,EAX
		je	L48F0
		mov	EDI,020h[ESP]
		mov	EBX,014h[ESP]
		mov	014h[EBP],ESI
		jmp short	L4921
L48F0:		mov	ECX,01Ch[EDI]
		mov	EDX,030h[ECX]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L48C5
L48FC:		mov	EDI,[EDI]
		test	EDI,EDI
		jne	L48B4
L4902:		mov	ECX,010h[EBP]
		mov	EDX,[ECX]
		mov	EDI,020h[ESP]
		mov	EBX,014h[ESP]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0578h]
		push	EBP
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L4921:		inc	EBX
		cmp	020h[EDI],EBX
		ja	L487A
L492B:		mov	EAX,028h[ESP]
		mov	EBX,01Ch[EAX]
		cmp	dword ptr 018h[EBX],0
		jne	L4A7D
		push	offset FLAT:_DATA[058Ch]
		mov	dword ptr 034h[EDI],1
		push	EDI
		call	near ptr ?warning@Statement@@QAAXPBDZZ
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L496B
		mov	ECX,EBX
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EBX],offset FLAT:??_7Statements@@6B@
L496B:		add	ESP,8
		cmp	byte ptr ?global@@3UGlobal@@A[05Ch],0
		je	L499C
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L4996
		mov	ECX,ESI
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0SwitchErrorStatement@@QAE@ULoc@@@Z
		mov	ESI,EAX
L4996:		mov	018h[ESP],ESI
		jmp short	L49DF
L499C:		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L49BB
		mov	ECX,ESI
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0HaltExp@@QAE@ULoc@@@Z
		mov	ESI,EAX
L49BB:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L49DB
		mov	ECX,EBP
		push	ESI
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBP,EAX
L49DB:		mov	018h[ESP],EBP
L49DF:		push	4
		mov	ECX,EBX
		call	near ptr ?reserve@Array@@QAEXI@Z
		mov	ECX,EBX
		push	dword ptr 014h[EDI]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L4A13
		mov	ECX,ESI
		push	0
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0BreakStatement@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	ESI,EAX
L4A13:		mov	EDX,ESI
		mov	ECX,EBX
		push	ESI
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L4A40
		mov	ECX,EBP
		push	dword ptr 018h[ESP]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0DefaultStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	EBP,EAX
L4A40:		mov	EDX,028h[ESP]
		mov	ECX,01Ch[EDX]
		mov	018h[ECX],EBP
		mov	ECX,EBX
		push	EBP
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01Ch[ESP],EAX
		je	L4A76
		mov	ECX,EAX
		push	EBX
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	01Ch[ESP],EAX
L4A76:		mov	EDX,01Ch[ESP]
		mov	014h[EDI],EDX
L4A7D:		mov	EBX,028h[ESP]
		mov	ECX,EBX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
?hasBreak@SwitchStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?usesEH@SwitchStatement@@UAEHXZ:
		push	ECX
		mov	EAX,014h[ECX]
		test	EAX,EAX
		je	L4AB1
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		jmp short	L4AB3
L4AB1:		xor	EAX,EAX
L4AB3:		pop	ECX
		ret
?blockExit@SwitchStatement@@UAEHXZ:
		push	ECX
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		xor	EBX,EBX
		push	ESI
		push	EDI
		call	dword ptr 08Ch[EAX]
		test	EAX,EAX
		je	L4AD0
		mov	EBX,2
L4AD0:		mov	EDX,010h[ESP]
		cmp	dword ptr 014h[EDX],0
		je	L4AFE
		mov	ESI,010h[ESP]
		mov	ECX,014h[ESI]
		mov	EDI,[ECX]
		call	dword ptr 04Ch[EDI]
		or	EBX,EAX
		test	EBX,020h
		je	L4B04
		or	EBX,1
		and	EBX,0FFFFFFDFh
		jmp short	L4B04
L4AFE:		or	EBX,1
L4B04:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
		nop
		nop
		nop
?toCBuffer@SwitchStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		mov	ESI,014h[ESP]
		push	offset FLAT:_DATA[05ACh]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EDX,8[ESP]
		mov	ECX,010h[EDX]
		push	ESI
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	ECX,014h[EDX]
		test	ECX,ECX
		je	L4B97
		mov	EDX,[ECX]
		call	dword ptr 038h[EDX]
		test	EAX,EAX
		jne	L4B89
		push	07Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	ECX,014h[EDX]
		push	ESI
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 028h[EDX]
		mov	ECX,EBX
		push	07Dh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		jmp short	L4B97
L4B89:		push	ESI
		mov	EDX,0Ch[ESP]
		mov	ECX,014h[EDX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
L4B97:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
		nop
??0CaseStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7CaseStatement@@6B@
		mov	014h[EBX],ECX
		mov	dword ptr 01Ch[EBX],0
		pop	EBX
		ret	010h
?syntaxCopy@CaseStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4C0D
		mov	EAX,8[ESP]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,010h[ESI]
		push	EAX
		mov	EAX,[ECX]
		call	dword ptr 024h[EAX]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0CaseStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	EBX,EAX
L4C0D:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?semantic@CaseStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EAX,8[ESP]
		push	EBX
		mov	EBX,01Ch[EAX]
		push	EBP
		mov	EBP,ECX
		mov	ECX,010h[EBP]
		push	ESI
		mov	EDX,[ECX]
		push	EDI
		push	EAX
		call	dword ptr 028h[EDX]
		test	EBX,EBX
		mov	010h[EBP],EAX
		je	L4D13
		mov	ESI,010h[EBX]
		mov	ECX,010h[EBP]
		mov	EAX,[ECX]
		push	dword ptr 010h[ESI]
		push	dword ptr 01Ch[ESP]
		call	dword ptr 058h[EAX]
		mov	ECX,EAX
		mov	010h[EBP],EAX
		mov	EDX,[EAX]
		push	6
		call	dword ptr 074h[EDX]
		mov	010h[EBP],EAX
		mov	ESI,0Ch[EAX]
		cmp	ESI,07Ah
		je	L4C9C
		cmp	ESI,087h
		je	L4C9C
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[05B8h]
		push	EBP
		call	near ptr ?error@Statement@@QAAXPBDZZ
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L4C96
		mov	ECX,ESI
		push	0
		push	0
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	ESI,EAX
L4C96:		mov	010h[EBP],ESI
		add	ESP,0Ch
L4C9C:		mov	EDX,030h[EBX]
		xor	ESI,ESI
		cmp	4[EDX],ESI
		je	L4CE3
L4CA6:		mov	ECX,030h[EBX]
		mov	EDX,8[ECX]
		mov	EDI,[ESI*4][EDX]
		push	dword ptr 010h[EBP]
		mov	EDX,010h[EDI]
		mov	EDX,[EDX]
		mov	ECX,010h[EDI]
		call	dword ptr 4[EDX]
		test	EAX,EAX
		je	L4CDA
		mov	ECX,010h[EBP]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[05F0h]
		push	EBP
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L4CE3
L4CDA:		mov	ECX,030h[EBX]
		inc	ESI
		cmp	4[ECX],ESI
		ja	L4CA6
L4CE3:		push	EBP
		mov	ECX,030h[EBX]
		call	near ptr ?push@Array@@QAEXPAX@Z
		xor	ESI,ESI
		cmp	020h[EBX],ESI
		je	L4D21
L4CF3:		mov	EDX,024h[EBX]
		mov	EDI,[ESI*4][EDX]
		cmp	dword ptr 010h[EDI],0
		jne	L4D0B
		mov	014h[EDI],EBP
		lea	ECX,01Ch[EBX]
		push	ESI
		call	near ptr ?remove@Array@@QAEXI@Z
L4D0B:		inc	ESI
		cmp	020h[EBX],ESI
		ja	L4CF3
		jmp short	L4D21
L4D13:		push	offset FLAT:_DATA[0618h]
		push	EBP
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L4D21:		push	dword ptr 018h[ESP]
		mov	ECX,014h[EBP]
		mov	EAX,[ECX]
		call	dword ptr 03Ch[EAX]
		mov	014h[EBP],EAX
		mov	EAX,EBP
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
		nop
		nop
		nop
		nop
		nop
		nop
?compare@CaseStatement@@UAEHPAUObject@@@Z:
		push	ECX
		mov	EAX,8[ESP]
		mov	ECX,010h[ECX]
		push	dword ptr 010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 0Ch[EDX]
		pop	ECX
		ret	4
?usesEH@CaseStatement@@UAEHXZ:
		push	ECX
		mov	ECX,014h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 048h[EAX]
		pop	ECX
		ret
		nop
?blockExit@CaseStatement@@UAEHXZ:
		push	ECX
		mov	ECX,014h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 04Ch[EAX]
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
?comeFrom@CaseStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?toCBuffer@CaseStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,010h[ESP]
		mov	ECX,EBX
		push	offset FLAT:_DATA[0638h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	03Ah
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,014h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		pop	EBX
		add	ESP,8
		ret	8
??0DefaultStatement@@QAE@ULoc@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7DefaultStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@DefaultStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4E1A
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0DefaultStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	EBX,EAX
L4E1A:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?semantic@DefaultStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,010h[ESP]
		cmp	dword ptr 01Ch[ESI],0
		je	L4E4E
		mov	EDX,01Ch[ESI]
		cmp	dword ptr 018h[EDX],0
		je	L4E46
		push	offset FLAT:_DATA[0640h]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L4E46:		mov	ECX,01Ch[ESI]
		mov	018h[ECX],EBX
		jmp short	L4E5C
L4E4E:		push	offset FLAT:_DATA[0668h]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L4E5C:		push	ESI
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret	4
?usesEH@DefaultStatement@@UAEHXZ:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 048h[EAX]
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
?blockExit@DefaultStatement@@UAEHXZ:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 04Ch[EAX]
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
?comeFrom@DefaultStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?toCBuffer@DefaultStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	offset FLAT:_DATA[0688h]
		mov	ECX,0Ch[ESP]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		pop	EAX
		ret	8
		nop
??0GotoDefaultStatement@@QAE@ULoc@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7GotoDefaultStatement@@6B@
		mov	dword ptr 010h[EBX],0
		pop	EBX
		ret	8
?syntaxCopy@GotoDefaultStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4F09
		mov	EAX,8[ESP]
		push	dword ptr 8[EAX]
		mov	ECX,EBX
		push	dword ptr 4[EAX]
		call	near ptr ??0GotoDefaultStatement@@QAE@ULoc@@@Z
		mov	EBX,EAX
L4F09:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?semantic@GotoDefaultStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EAX,8[ESP]
		mov	EDX,01Ch[EAX]
		mov	010h[ECX],EDX
		test	EDX,EDX
		jne	L4F2D
		push	offset FLAT:_DATA[0694h]
		push	ECX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L4F2D:		mov	EAX,[ESP]
		pop	ECX
		ret	4
?blockExit@GotoDefaultStatement@@UAEHXZ:
		push	ECX
		mov	EAX,8
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?toCBuffer@GotoDefaultStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	offset FLAT:_DATA[06BCh]
		mov	ECX,0Ch[ESP]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		pop	EAX
		ret	8
??0GotoCaseStatement@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7GotoCaseStatement@@6B@
		mov	dword ptr 014h[EBX],0
		pop	EBX
		ret	0Ch
		nop
		nop
		nop
?syntaxCopy@GotoCaseStatement@@UAEPAUStatement@@XZ:
		sub	ESP,0Ch
		push	EBX
		push	ESI
		mov	010h[ESP],ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L4F99
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		jmp short	L4F9B
L4F99:		xor	EAX,EAX
L4F9B:		mov	0Ch[ESP],EAX
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4FC6
		mov	ECX,EBX
		push	dword ptr 0Ch[ESP]
		mov	ESI,014h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0GotoCaseStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L4FC6:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
		nop
		nop
?semantic@GotoCaseStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		mov	EDX,010h[EBX]
		push	ESI
		mov	ESI,010h[ESP]
		test	EDX,EDX
		je	L4FEB
		push	ESI
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 028h[EDX]
		mov	010h[EBX],EAX
L4FEB:		cmp	dword ptr 01Ch[ESI],0
		jne	L5001
		push	offset FLAT:_DATA[06CCh]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp short	L5034
L5001:		push	EBX
		mov	ECX,01Ch[ESI]
		add	ECX,01Ch
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EDX,010h[EBX]
		test	EDX,EDX
		je	L5034
		mov	ECX,01Ch[ESI]
		mov	ECX,010h[ECX]
		push	dword ptr 010h[ECX]
		mov	ECX,EDX
		mov	EDX,[EDX]
		push	ESI
		call	dword ptr 058h[EDX]
		mov	ECX,EAX
		mov	010h[EBX],EAX
		mov	EDX,[EAX]
		push	2
		call	dword ptr 074h[EDX]
		mov	010h[EBX],EAX
L5034:		pop	ESI
		mov	EAX,EBX
		pop	EBX
		pop	ECX
		ret	4
		nop
		nop
		nop
		nop
?blockExit@GotoCaseStatement@@UAEHXZ:
		push	ECX
		mov	EAX,8
		pop	ECX
		ret
?toCBuffer@GotoCaseStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[06F0h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		cmp	dword ptr 010h[EAX],0
		je	L507F
		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		push	dword ptr 014h[ESP]
		mov	EDX,0Ch[ESP]
		mov	ECX,010h[EDX]
		push	EBX
		mov	ESI,[ECX]
		call	dword ptr 048h[ESI]
L507F:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0SwitchErrorStatement@@QAE@ULoc@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7SwitchErrorStatement@@6B@
		pop	EBX
		ret	8
?blockExit@SwitchErrorStatement@@UAEHXZ:
		push	ECX
		mov	EAX,2
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?toCBuffer@SwitchErrorStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	offset FLAT:_DATA[06FCh]
		mov	ECX,0Ch[ESP]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,8[ESP]
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ReturnStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@ReturnStatement@@UAEPAUStatement@@XZ:
		sub	ESP,0Ch
		push	EBX
		xor	EBX,EBX
		push	ESI
		mov	010h[ESP],ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L511E
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		mov	EBX,EAX
L511E:		mov	0Ch[ESP],EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5149
		mov	ECX,EBX
		push	dword ptr 0Ch[ESP]
		mov	ESI,014h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L5149:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret
?semantic@ReturnStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,0DCh
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EBP,0F0h[ESP]
		mov	EDI,ECX
		mov	ECX,014h[EBP]
		mov	EDX,[ECX]
		call	dword ptr 0F8h[EDX]
		mov	ESI,EAX
		mov	EBX,EBP
		mov	dword ptr 028h[ESP],0
		cmp	dword ptr 030h[EBP],0
		je	L51C4
		test	EBP,EBP
		jne	L5199
		push	0C4Fh
		push	offset FLAT:_DATA[053Ch]
		push	offset FLAT:_DATA[0720h]
		call	near ptr __assert
L5199:		cmp	010h[EBP],ESI
		je	L51A3
L519E:		mov	ESI,010h[EBX]
		jmp short	L51C4
L51A3:		mov	EBX,[EBX]
		test	EBX,EBX
		jne	L51BD
		push	0C4Fh
		push	offset FLAT:_DATA[053Ch]
		push	offset FLAT:_DATA[0720h]
		call	near ptr __assert
L51BD:		cmp	010h[EBX],ESI
		jne	L519E
		jmp short	L51A3
L51C4:		mov	ECX,028h[ESI]
		mov	EDX,024h[ECX]
		mov	ECX,0C4h[ESI]
		mov	02Ch[ESP],EDX
		test	ECX,ECX
		je	L51DF
		mov	EDX,024h[ECX]
		mov	02Ch[ESP],EDX
L51DF:		mov	dword ptr 030h[ESP],0
		cmp	dword ptr 02Ch[ESP],0
		je	L51FB
		mov	ECX,02Ch[ESP]
		mov	EDX,[ECX]
		call	dword ptr 070h[EDX]
		mov	030h[ESP],EAX
L51FB:		cmp	dword ptr 010h[EDI],0
		jne	L524D
		cmp	dword ptr 030h[ESP],0
		je	L5212
		mov	ECX,030h[ESP]
		cmp	dword ptr 4[ECX],0Dh
		jne	L524D
L5212:		mov	ECX,ESI
		call	near ptr ?isMain@FuncDeclaration@@QAEHXZ
		test	EAX,EAX
		je	L524D
		mov	dword ptr 028h[ESP],1
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	034h[ESP],EAX
		je	L5246
		mov	ECX,EAX
		push	0
		push	0
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	034h[ESP],EAX
L5246:		mov	EDX,034h[ESP]
		mov	010h[EDI],EDX
L524D:		cmp	dword ptr 03Ch[EBP],0
		jne	L5259
		cmp	dword ptr 03Ch[EBX],0
		je	L5267
L5259:		push	offset FLAT:_DATA[0724h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L5267:		cmp	dword ptr 020h[EBP],0
		jne	L5273
		cmp	dword ptr 020h[EBX],0
		je	L5281
L5273:		push	offset FLAT:_DATA[0750h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L5281:		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 0104h[EDX]
		test	EAX,EAX
		je	L52EA
		mov	ECX,010h[EDI]
		test	ECX,ECX
		je	L52AA
		cmp	dword ptr 0Ch[ECX],07Bh
		je	L52AA
		push	offset FLAT:_DATA[07A0h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L52AA:		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	038h[ESP],EAX
		je	L52E3
		mov	ECX,038h[ESP]
		mov	dword ptr 044h[ESP],0
		mov	dword ptr 040h[ESP],0
		mov	EDX,044h[ESP]
		mov	EAX,040h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ThisExp@@QAE@ULoc@@@Z
		mov	038h[ESP],EAX
L52E3:		mov	EDX,038h[ESP]
		mov	010h[EDI],EDX
L52EA:		cmp	dword ptr 010h[EDI],0
		jne	L52FA
		mov	dword ptr 0D0h[ESI],0
L52FA:		cmp	dword ptr 010h[EDI],0
		je	L54B6
		or	dword ptr 0CCh[ESI],1
		push	EBP
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	EAX
		mov	010h[EDI],EAX
		push	EBP
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	ECX,EAX
		mov	010h[EDI],EAX
		mov	EDX,[EAX]
		push	2
		call	dword ptr 074h[EDX]
		mov	010h[EDI],EAX
		add	ESP,8
		cmp	dword ptr 0D0h[ESI],0
		je	L53DB
		cmp	dword ptr 0Ch[EAX],01Ah
		jne	L53DB
		mov	EDX,018h[EAX]
		mov	EDX,[EDX]
		mov	ECX,018h[EAX]
		call	dword ptr 0124h[EDX]
		test	EAX,EAX
		mov	048h[ESP],EAX
		je	L53DB
		mov	EDX,034h[EAX]
		mov	024h[ESP],EDX
		mov	EAX,030h[EAX]
		xor	EDX,EDX
		mov	020h[ESP],EAX
		and	EAX,01000h
		test	EAX,EAX
		jne	L53DB
		mov	EAX,020h[ESP]
		mov	ECX,024h[ESP]
		and	EAX,0200000h
		xor	ECX,ECX
		test	EAX,EAX
		jne	L53DB
		cmp	dword ptr 0D4h[ESI],0
		jne	L53CF
		mov	ECX,048h[ESP]
		mov	EDX,[ECX]
		call	dword ptr 0168h[EDX]
		test	EAX,EAX
		jne	L53DB
		mov	ECX,048h[ESP]
		mov	EAX,030h[ECX]
		mov	EDX,034h[ECX]
		and	EAX,020h
		xor	EDX,EDX
		test	EAX,EAX
		jne	L53DB
		call	near ptr ?toParent2@Dsymbol@@QAEPAU1@XZ
		cmp	EAX,ESI
		jne	L53DB
		mov	ECX,048h[ESP]
		mov	0D4h[ESI],ECX
		jmp short	L53E5
L53CF:		mov	EDX,0D4h[ESI]
		cmp	EDX,048h[ESP]
		je	L53E5
L53DB:		mov	dword ptr 0D0h[ESI],0
L53E5:		cmp	dword ptr 07Ch[ESI],0
		je	L53F9
		mov	ECX,030h[ESP]
		cmp	dword ptr 4[ECX],0Dh
		jne	L5539
L53F9:		cmp	dword ptr 0C8h[ESI],0
		je	L5493
		mov	ECX,028h[ESI]
		cmp	dword ptr 024h[ECX],0
		je	L5453
		mov	ECX,028h[ESI]
		mov	EDX,010h[EDI]
		push	dword ptr 024h[ECX]
		mov	ECX,010h[EDX]
		mov	EDX,[ECX]
		call	dword ptr 4[EDX]
		test	EAX,EAX
		jne	L5539
		mov	ECX,028h[ESI]
		mov	ECX,024h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,010h[EDI]
		mov	ECX,010h[ECX]
		push	EAX
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[07CCh]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,010h
		jmp	near ptr L5539
L5453:		mov	EDX,010h[EDI]
		mov	ECX,010h[EDX]
		mov	EDX,028h[ESI]
		push	EBP
		mov	024h[EDX],ECX
		mov	ECX,028h[ESI]
		mov	EDX,[ECX]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	dword ptr 030h[EDX]
		mov	028h[ESI],EAX
		cmp	dword ptr 0C4h[ESI],0
		jne	L5539
		mov	ECX,024h[EAX]
		mov	EDX,[ECX]
		mov	02Ch[ESP],ECX
		call	dword ptr 070h[EDX]
		mov	030h[ESP],EAX
		jmp	near ptr L5539
L5493:		mov	EDX,030h[ESP]
		cmp	dword ptr 4[EDX],0Dh
		je	L5539
		push	dword ptr 02Ch[ESP]
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	EBP
		call	dword ptr 058h[EDX]
		mov	010h[EDI],EAX
		jmp	near ptr L5539
L54B6:		cmp	dword ptr 0C8h[ESI],0
		je	L5521
		mov	EDX,028h[ESI]
		cmp	dword ptr 024h[EDX],0
		je	L54EA
		mov	EDX,028h[ESI]
		mov	ECX,024h[EDX]
		cmp	dword ptr 4[ECX],0Dh
		je	L5539
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0804h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L5539
L54EA:		push	EBP
		mov	EDX,028h[ESI]
		mov	ECX,?basic@Type@@2QAPAU1@A[034h]
		mov	024h[EDX],ECX
		mov	ECX,028h[ESI]
		mov	EDX,[ECX]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	dword ptr 030h[EDX]
		mov	028h[ESI],EAX
		cmp	dword ptr 0C4h[ESI],0
		jne	L5539
		mov	ECX,?basic@Type@@2QAPAU1@A[034h]
		mov	02Ch[ESP],ECX
		mov	030h[ESP],ECX
		jmp short	L5539
L5521:		mov	ECX,030h[ESP]
		cmp	dword ptr 4[ECX],0Dh
		je	L5539
		push	offset FLAT:_DATA[0840h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L5539:		cmp	dword ptr 030h[EBP],0
		je	L5A09
		mov	EDX,010h[EDI]
		test	EDX,EDX
		je	L5560
		cmp	dword ptr 028h[ESP],0
		jne	L5560
		push	dword ptr 02Ch[ESP]
		mov	ECX,EDX
		mov	EDX,[EDX]
		push	EBP
		call	dword ptr 058h[EDX]
		mov	010h[EDI],EAX
L5560:		mov	ECX,010h[EDI]
		test	ECX,ECX
		je	L559E
		mov	EDX,0Ch[ECX]
		cmp	EDX,087h
		je	L559E
		cmp	EDX,08Ah
		je	L559E
		cmp	EDX,08Eh
		je	L559E
		cmp	EDX,091h
		je	L559E
		cmp	EDX,07Bh
		je	L559E
		cmp	EDX,07Ch
		je	L559E
		cmp	EDX,0Dh
		je	L559E
		cmp	EDX,07Ah
		jne	L5616
L559E:		push	EDI
		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	04Ch[ESP],EAX
		je	L560D
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L55E3
		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		mov	EAX,4[ECX]
		xor	EDX,EDX
		push	EDX
		inc	EAX
		mov	ECX,ESI
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	ESI,EAX
L55E3:		mov	EDX,ESI
		mov	ECX,04Ch[ESP]
		push	ESI
		mov	dword ptr 058h[ESP],0
		mov	dword ptr 054h[ESP],0
		mov	EDX,058h[ESP]
		mov	EAX,054h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	04Ch[ESP],EAX
L560D:		mov	EBX,04Ch[ESP]
		jmp	near ptr L59FA
L5616:		mov	ECX,028h[ESI]
		mov	ECX,024h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 070h[EDX]
		cmp	EAX,?basic@Type@@2QAPAU1@A[034h]
		jne	L5733
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L5662
		mov	ECX,ESI
		push	0
		mov	dword ptr 060h[ESP],0
		mov	dword ptr 05Ch[ESP],0
		mov	EDX,060h[ESP]
		mov	EAX,05Ch[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L5662:		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		push	ESI
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	060h[ESP],EAX
		je	L5694
		mov	ECX,EAX
		push	dword ptr 010h[EDI]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	060h[ESP],EAX
L5694:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	068h[ESP],EAX
		je	L56FF
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	064h[ESP],EAX
		je	L56D3
		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		mov	EAX,4[ECX]
		xor	EDX,EDX
		push	EDX
		inc	EAX
		mov	ECX,068h[ESP]
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	064h[ESP],EAX
L56D3:		mov	EDX,064h[ESP]
		mov	ECX,068h[ESP]
		push	EDX
		mov	dword ptr 078h[ESP],0
		mov	dword ptr 074h[ESP],0
		mov	EDX,078h[ESP]
		mov	EAX,074h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	068h[ESP],EAX
L56FF:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	078h[ESP],EAX
		je	L572A
		mov	ECX,EAX
		push	dword ptr 068h[ESP]
		push	dword ptr 064h[ESP]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	078h[ESP],EAX
L572A:		mov	EBX,078h[ESP]
		jmp	near ptr L59FA
L5733:		cmp	dword ptr 078h[ESI],0
		jne	L57A8
		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	07Ch[ESP],EAX
		je	L5768
		mov	ECX,EAX
		push	0
		push	dword ptr ?result@Id@@2PAUIdentifier@@A
		push	dword ptr 034h[ESP]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	07Ch[ESP],EAX
L5768:		mov	EDX,07Ch[ESP]
		mov	EAX,[EDX]
		mov	dword ptr 050h[EDX],1
		mov	ECX,EDX
		push	EBX
		call	dword ptr 040h[EAX]
		mov	ECX,EBX
		push	dword ptr 07Ch[ESP]
		call	near ptr ?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
		test	EAX,EAX
		jne	L579E
		push	0CE7h
		push	offset FLAT:_DATA[053Ch]
		push	offset FLAT:_DATA[085Ch]
		call	near ptr __assert
L579E:		mov	EDX,07Ch[ESP]
		mov	0Ch[EDX],ESI
		mov	078h[ESI],EDX
L57A8:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	090h[ESP],EAX
		je	L5853
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	080h[ESP],EAX
		je	L5812
		push	dword ptr 078h[ESI]
		mov	dword ptr 090h[ESP],0
		mov	dword ptr 08Ch[ESP],0
		mov	EDX,090h[ESP]
		mov	EAX,08Ch[ESP]
		push	EDX
		push	EAX
		mov	ECX,08Ch[ESP]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	080h[ESP],EAX
L5812:		mov	EDX,080h[ESP]
		push	EDX
		mov	dword ptr 0A0h[ESP],0
		mov	dword ptr 09Ch[ESP],0
		mov	EDX,0A0h[ESP]
		mov	EAX,09Ch[ESP]
		push	EDX
		push	EAX
		mov	ECX,09Ch[ESP]
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	090h[ESP],EAX
L5853:		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		push	dword ptr 090h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B0h[ESP],EAX
		je	L58EF
		push	dword ptr 010h[EDI]
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A4h[ESP],EAX
		je	L58CE
		push	dword ptr 078h[ESI]
		mov	dword ptr 0B4h[ESP],0
		mov	dword ptr 0B0h[ESP],0
		mov	EDX,0B4h[ESP]
		mov	EAX,0B0h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0B0h[ESP]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0A4h[ESP],EAX
L58CE:		mov	EDX,0A4h[ESP]
		push	EDX
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		mov	ECX,0C0h[ESP]
		call	near ptr ??0ConstructExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	0B0h[ESP],EAX
L58EF:		mov	EDX,0B0h[ESP]
		mov	ECX,EDX
		mov	010h[EDI],EDX
		mov	EDX,[EDX]
		push	EBP
		call	dword ptr 028h[EDX]
		mov	010h[EDI],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B4h[ESP],EAX
		je	L5930
		mov	ECX,EAX
		push	dword ptr 010h[EDI]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0B4h[ESP],EAX
L5930:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0BCh[ESP],EAX
		je	L59BC
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B8h[ESP],EAX
		je	L597B
		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		mov	EAX,4[ECX]
		xor	EDX,EDX
		push	EDX
		inc	EAX
		push	EAX
		mov	ECX,0C0h[ESP]
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	0B8h[ESP],EAX
L597B:		mov	EDX,0B8h[ESP]
		push	EDX
		mov	dword ptr 0C8h[ESP],0
		mov	dword ptr 0C4h[ESP],0
		mov	EDX,0C8h[ESP]
		mov	EAX,0C4h[ESP]
		push	EDX
		push	EAX
		mov	ECX,0C8h[ESP]
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0BCh[ESP],EAX
L59BC:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C8h[ESP],EAX
		je	L59F3
		mov	ECX,EAX
		push	dword ptr 0BCh[ESP]
		push	dword ptr 0B8h[ESP]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	0C8h[ESP],EAX
L59F3:		mov	EBX,0C8h[ESP]
L59FA:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0DCh
		ret	4
L5A09:		cmp	dword ptr 010h[EDI],0
		je	L5AD9
		cmp	dword ptr 07Ch[ESI],0
		je	L5AD1
		mov	ECX,030h[ESP]
		cmp	dword ptr 4[ECX],0Dh
		je	L5AD1
		cmp	dword ptr 078h[ESI],0
		jne	L5A45
		push	0CFDh
		push	offset FLAT:_DATA[053Ch]
		push	offset FLAT:_DATA[0860h]
		call	near ptr __assert
L5A45:		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5A87
		mov	ECX,EBX
		push	dword ptr 078h[ESI]
		mov	dword ptr 0D8h[ESP],0
		mov	dword ptr 0D4h[ESP],0
		mov	EDX,0D8h[ESP]
		mov	EAX,0D4h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	EBX,EAX
L5A87:		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0D8h[ESP],EAX
		je	L5AB4
		mov	ECX,EAX
		push	dword ptr 010h[EDI]
		push	EBX
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0AssignExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	0D8h[ESP],EAX
L5AB4:		mov	EDX,0D8h[ESP]
		mov	010h[EDI],EDX
		mov	dword ptr 0Ch[EDX],062h
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		push	EBP
		call	dword ptr 028h[EDX]
		mov	010h[EDI],EAX
L5AD1:		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		call	dword ptr 064h[EDX]
L5AD9:		mov	ECX,058h[EBP]
		test	ECX,040h
		je	L5AFA
		test	ECX,3
		jne	L5AFA
		push	offset FLAT:_DATA[086Ch]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L5AFA:		or	dword ptr 058h[EBP],020h
		cmp	dword ptr 07Ch[ESI],0
		je	L5BBD
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5B30
		mov	ECX,EBX
		push	dword ptr ?returnLabel@Id@@2PAUIdentifier@@A
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0GotoStatement@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EBX,EAX
L5B30:		mov	EDX,07Ch[ESI]
		mov	014h[EBX],EDX
		cmp	dword ptr 010h[EDI],0
		je	L5BAE
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L5B7E
		mov	ECX,ESI
		push	dword ptr 010h[EDI]
		mov	dword ptr 0E8h[ESP],0
		mov	dword ptr 0E4h[ESP],0
		mov	EDX,0E8h[ESP]
		mov	EAX,0E4h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L5B7E:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L5B9F
		mov	ECX,EBP
		push	EBX
		push	ESI
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	EBP,EAX
L5B9F:		mov	EAX,EBP
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0DCh
		ret	4
L5BAE:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0DCh
		ret	4
L5BBD:		cmp	dword ptr 010h[EDI],0
		je	L5C42
		mov	EAX,030h[ESP]
		cmp	dword ptr 4[EAX],0Dh
		jne	L5C42
		cmp	dword ptr 028h[ESP],0
		jne	L5C42
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5BF6
		mov	ECX,EBX
		push	dword ptr 010h[EDI]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L5BF6:		mov	ECX,EBX
		mov	dword ptr 010h[EDI],0
		mov	EDX,[EBX]
		push	EBP
		call	dword ptr 03Ch[EDX]
		mov	0E8h[ESP],EAX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L5C33
		mov	ECX,ESI
		push	EDI
		push	dword ptr 0ECh[ESP]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	ESI,EAX
L5C33:		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0DCh
		ret	4
L5C42:		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0DCh
		ret	4
?blockExit@ReturnStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	ECX
		push	EBX
		mov	EBX,4
		je	L5C73
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 08Ch[EDX]
		test	EAX,EAX
		je	L5C73
		mov	EBX,6
L5C73:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?toCBuffer@ReturnStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,010h[ESP]
		push	offset FLAT:_DATA[0890h]
		push	EBX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,8
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		test	ECX,ECX
		je	L5CAA
		push	dword ptr 014h[ESP]
		mov	EDX,[ECX]
		push	EBX
		call	dword ptr 048h[EDX]
L5CAA:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EBX
		add	ESP,8
		ret	8
??0BreakStatement@@QAE@ULoc@@PAUIdentifier@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7BreakStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@BreakStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5D0D
		mov	EAX,8[ESP]
		push	dword ptr 010h[EAX]
		mov	ECX,EBX
		push	dword ptr 8[EAX]
		push	dword ptr 4[EAX]
		call	near ptr ??0BreakStatement@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EBX,EAX
L5D0D:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?semantic@BreakStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,014h
		push	EBX
		push	EBP
		mov	EBP,020h[ESP]
		push	ESI
		push	EDI
		mov	EDI,ECX
		cmp	dword ptr 010h[EDI],0
		je	L5E32
		mov	ESI,010h[EBP]
		mov	EDX,EBP
		test	EBP,EBP
		je	L5E19
L5D38:		cmp	010h[EDX],ESI
		je	L5DBC
		cmp	dword ptr 030h[EBP],0
		je	L5E19
		push	EDI
		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L5DB0
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5D8A
		mov	EDX,030h[EBP]
		mov	ECX,02Ch[EDX]
		mov	EAX,4[ECX]
		xor	EDX,EDX
		push	EDX
		inc	EAX
		mov	ECX,EBX
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EBX,EAX
L5D8A:		mov	EDX,EBX
		mov	ECX,ESI
		push	EBX
		mov	dword ptr 01Ch[ESP],0
		mov	dword ptr 018h[ESP],0
		mov	EDX,01Ch[ESP]
		mov	EAX,018h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L5DB0:		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
L5DBC:		mov	EBX,018h[EDX]
		test	EBX,EBX
		je	L5E0F
		mov	ECX,010h[EBX]
		cmp	ECX,010h[EDI]
		jne	L5E0F
		mov	ESI,014h[EBX]
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 040h[EDX]
		test	EAX,EAX
		jne	L5DF0
		mov	ECX,010h[EDI]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0898h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L5DF0:		mov	ECX,018h[EBX]
		cmp	ECX,020h[EBP]
		je	L5EAB
		push	offset FLAT:_DATA[08B0h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp	near ptr L5EAB
L5E0F:		mov	EDX,[EDX]
		test	EDX,EDX
		jne	L5D38
L5E19:		mov	ECX,010h[EDI]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[08D4h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L5EAB
L5E32:		cmp	dword ptr 028h[EBP],0
		jne	L5EAB
		cmp	dword ptr 030h[EBP],0
		je	L5E9D
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L5E91
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5E6B
		mov	ECX,EBX
		push	0
		push	1
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EBX,EAX
L5E6B:		mov	EDX,EBX
		mov	ECX,ESI
		push	EBX
		mov	dword ptr 024h[ESP],0
		mov	dword ptr 020h[ESP],0
		mov	EDX,024h[ESP]
		mov	EAX,020h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L5E91:		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
L5E9D:		push	offset FLAT:_DATA[0900h]
		push	EDI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L5EAB:		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
?blockExit@BreakStatement@@UAEHXZ:
		cmp	dword ptr 010h[ECX],1
		sbb	EAX,EAX
		and	EAX,018h
		add	EAX,8
		push	ECX
		pop	ECX
		ret
?toCBuffer@BreakStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0928h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		cmp	dword ptr 010h[EAX],0
		je	L5F02
		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	EDX,8[ESP]
		mov	ECX,010h[EDX]
		mov	ESI,[ECX]
		call	dword ptr 014h[ESI]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L5F02:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0ContinueStatement@@QAE@ULoc@@PAUIdentifier@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ContinueStatement@@6B@
		pop	EBX
		ret	0Ch
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@ContinueStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5F69
		mov	EAX,8[ESP]
		push	dword ptr 010h[EAX]
		mov	ECX,EBX
		push	dword ptr 8[EAX]
		push	dword ptr 4[EAX]
		call	near ptr ??0ContinueStatement@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EBX,EAX
L5F69:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?semantic@ContinueStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,01Ch
		push	EBX
		push	EBP
		push	ESI
		mov	ESI,ECX
		push	EDI
		mov	EDI,030h[ESP]
		cmp	dword ptr 010h[ESI],0
		je	L611B
		mov	EBP,010h[EDI]
		mov	EDX,EDI
		test	EDI,EDI
		je	L6102
L5F94:		cmp	010h[EDX],EBP
		je	L60A4
		cmp	dword ptr 030h[EDI],0
		je	L6102
		test	EDX,EDX
		je	L602F
L5FAF:		mov	EBX,018h[EDX]
		test	EBX,EBX
		je	L6025
		mov	ECX,010h[EBX]
		cmp	ECX,010h[ESI]
		jne	L6025
		mov	ECX,014h[EBX]
		cmp	ECX,030h[EDI]
		jne	L6025
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L6019
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L5FF3
		mov	ECX,EBX
		push	0
		push	0
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EBX,EAX
L5FF3:		mov	EDX,EBX
		mov	ECX,ESI
		push	EBX
		mov	dword ptr 01Ch[ESP],0
		mov	dword ptr 018h[ESP],0
		mov	EDX,01Ch[ESP]
		mov	EAX,018h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L6019:		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
L6025:		mov	EDX,[EDX]
		test	EDX,EDX
		jne	L5FAF
L602F:		push	ESI
		mov	EDX,030h[EDI]
		mov	ECX,02Ch[EDX]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L6098
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L6072
		mov	EDX,030h[EDI]
		mov	ECX,02Ch[EDX]
		mov	EAX,4[ECX]
		xor	EDX,EDX
		push	EDX
		inc	EAX
		mov	ECX,EBX
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EBX,EAX
L6072:		mov	EDX,EBX
		mov	ECX,EBP
		push	EBX
		mov	dword ptr 024h[ESP],0
		mov	dword ptr 020h[ESP],0
		mov	EDX,024h[ESP]
		mov	EAX,020h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBP,EAX
L6098:		mov	EAX,EBP
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
L60A4:		mov	EBX,018h[EDX]
		test	EBX,EBX
		je	L60F8
		mov	ECX,010h[EBX]
		cmp	ECX,010h[ESI]
		jne	L60F8
		mov	EBP,014h[EBX]
		mov	EDX,0[EBP]
		mov	ECX,EBP
		call	dword ptr 044h[EDX]
		test	EAX,EAX
		jne	L60D9
		mov	ECX,010h[ESI]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0930h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L60D9:		mov	ECX,018h[EBX]
		cmp	ECX,020h[EDI]
		je	L6194
		push	offset FLAT:_DATA[094Ch]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
		jmp	near ptr L6194
L60F8:		mov	EDX,[EDX]
		test	EDX,EDX
		jne	L5F94
L6102:		mov	ECX,010h[ESI]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[0974h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L6194
L611B:		cmp	dword ptr 02Ch[EDI],0
		jne	L6194
		cmp	dword ptr 030h[EDI],0
		je	L6186
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L617A
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L6154
		mov	ECX,EBX
		push	0
		push	0
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EBX,EAX
L6154:		mov	EDX,EBX
		mov	ECX,ESI
		push	EBX
		mov	dword ptr 02Ch[ESP],0
		mov	dword ptr 028h[ESP],0
		mov	EDX,02Ch[ESP]
		mov	EAX,028h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ReturnStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L617A:		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
L6186:		push	offset FLAT:_DATA[09A0h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L6194:		pop	EDI
		mov	EAX,ESI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
?blockExit@ContinueStatement@@UAEHXZ:
		cmp	dword ptr 010h[ECX],1
		sbb	EAX,EAX
		and	EAX,038h
		add	EAX,8
		push	ECX
		pop	ECX
		ret
?toCBuffer@ContinueStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[09C0h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		cmp	dword ptr 010h[EAX],0
		je	L61EB
		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	EDX,8[ESP]
		mov	ECX,010h[EDX]
		mov	ESI,[ECX]
		call	dword ptr 014h[ESI]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L61EB:		push	03Bh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0SynchronizedStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7SynchronizedStatement@@6B@
		mov	014h[EBX],ECX
		mov	dword ptr 018h[EBX],0
		pop	EBX
		ret	010h
??0SynchronizedStatement@@QAE@ULoc@@PAUelem@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,014h[ESP]
		mov	ECX,010h[ESP]
		mov	014h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7SynchronizedStatement@@6B@
		mov	dword ptr 010h[EBX],0
		mov	018h[EBX],ECX
		pop	EBX
		ret	010h
?syntaxCopy@SynchronizedStatement@@UAEPAUStatement@@XZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		je	L6278
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 024h[EDX]
		jmp short	L627A
L6278:		xor	EAX,EAX
L627A:		mov	0Ch[ESP],EAX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L62B8
		mov	ESI,010h[ESP]
		mov	EDI,014h[ESI]
		test	EDI,EDI
		je	L62A2
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 024h[EDX]
		jmp short	L62A4
L62A2:		xor	EAX,EAX
L62A4:		mov	ECX,EBX
		push	EAX
		push	dword ptr 010h[ESP]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0SynchronizedStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	EBX,EAX
L62B8:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?semantic@SynchronizedStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,0ACh
		push	EBX
		mov	EBX,ECX
		push	EBP
		push	ESI
		push	EDI
		mov	ESI,0C0h[ESP]
		cmp	dword ptr 010h[EBX],0
		je	L66AA
		push	ESI
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	EAX
		mov	010h[EBX],EAX
		push	ESI
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	010h[EBX],EAX
		add	ESP,8
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 07Ch[EDX]
		mov	EDI,EAX
		test	EAX,EAX
		jne	L6324
		mov	ECX,010h[EBX]
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[09CCh]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp	near ptr L63CA
L6324:		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 0134h[EDX]
		test	EAX,EAX
		je	L63CA
		push	048h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L636F
		mov	ECX,EDI
		push	dword ptr ?Object@Id@@2PAUIdentifier@@A
		mov	dword ptr 024h[ESP],0
		mov	dword ptr 020h[ESP],0
		mov	EDX,024h[ESP]
		mov	EAX,020h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0TypeIdentifier@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EDI,EAX
L636F:		mov	ECX,EDI
		push	ESI
		mov	dword ptr 02Ch[ESP],0
		mov	dword ptr 028h[ESP],0
		mov	EDX,02Ch[ESP]
		mov	EAX,028h[ESP]
		push	EDX
		mov	EDX,[EDI]
		push	EAX
		call	dword ptr 030h[EDX]
		mov	014h[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L63BB
		mov	ECX,EBP
		push	dword ptr 014h[ESP]
		push	dword ptr 010h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CastExp@@QAE@ULoc@@PAUExpression@@PAUType@@@Z
		mov	EBP,EAX
L63BB:		mov	ECX,EBP
		mov	010h[EBX],EBP
		mov	EDX,0[EBP]
		push	ESI
		call	dword ptr 028h[EDX]
		mov	010h[EBX],EAX
L63CA:		push	offset FLAT:_DATA[09FCh]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
		mov	030h[ESP],EAX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	034h[ESP],EAX
		je	L63FE
		mov	ECX,EAX
		push	dword ptr 010h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	034h[ESP],EAX
L63FE:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L642B
		mov	EDX,010h[EBX]
		push	dword ptr 034h[ESP]
		mov	ECX,EBP
		push	dword ptr 034h[ESP]
		push	dword ptr 010h[EDX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EBP,EAX
L642B:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L6448
		mov	ECX,EDI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [EDI],offset FLAT:??_7Statements@@6B@
L6448:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	03Ch[ESP],EAX
		je	L6496
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	038h[ESP],EAX
		je	L647E
		mov	ECX,EAX
		push	EBP
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	038h[ESP],EAX
L647E:		mov	EDX,038h[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,048h[ESP]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	03Ch[ESP],EAX
L6496:		mov	EDX,03Ch[ESP]
		mov	ECX,EDI
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	dword ptr ?monitorenter@Id@@2PAUIdentifier@@A
		push	dword ptr ?basic@Type@@2QAPAU1@A[034h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PAUIdentifier@@@Z
		mov	048h[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	054h[ESP],EAX
		je	L6531
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	050h[ESP],EAX
		je	L64ED
		mov	ECX,EAX
		push	EBP
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	050h[ESP],EAX
L64ED:		mov	EDX,050h[ESP]
		push	EDX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	050h[ESP],EAX
		je	L6519
		mov	ECX,EAX
		push	dword ptr 04Ch[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	050h[ESP],EAX
L6519:		mov	EDX,050h[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,064h[ESP]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	054h[ESP],EAX
L6531:		mov	ECX,054h[ESP]
		mov	EDX,?basic@Type@@2QAPAU1@A[034h]
		mov	010h[ECX],EDX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	058h[ESP],EAX
		je	L6565
		mov	ECX,EAX
		push	dword ptr 054h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	058h[ESP],EAX
L6565:		mov	EDX,058h[ESP]
		mov	ECX,EDI
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	dword ptr ?monitorexit@Id@@2PAUIdentifier@@A
		push	dword ptr ?basic@Type@@2QAPAU1@A[034h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PAUIdentifier@@@Z
		mov	064h[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	070h[ESP],EAX
		je	L6603
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	06Ch[ESP],EAX
		je	L65BC
		mov	ECX,EAX
		push	EBP
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	06Ch[ESP],EAX
L65BC:		mov	EDX,06Ch[ESP]
		push	EDX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	06Ch[ESP],EAX
		je	L65E8
		mov	ECX,EAX
		push	dword ptr 068h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	06Ch[ESP],EAX
L65E8:		mov	EDX,06Ch[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,080h[ESP]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	070h[ESP],EAX
L6603:		mov	ECX,070h[ESP]
		mov	EDX,?basic@Type@@2QAPAU1@A[034h]
		mov	010h[ECX],EDX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	074h[ESP],EAX
		je	L6637
		mov	ECX,EAX
		push	dword ptr 070h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	074h[ESP],EAX
L6637:		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	078h[ESP],EAX
		je	L6661
		mov	ECX,EAX
		push	dword ptr 074h[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	078h[ESP],EAX
L6661:		mov	ECX,EDI
		push	dword ptr 078h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	07Ch[ESP],EAX
		je	L6690
		mov	ECX,EAX
		push	EDI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	07Ch[ESP],EAX
L6690:		add	ESP,014h
		mov	ECX,068h[ESP]
		push	ESI
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0ACh
		ret	4
L66AA:		push	offset FLAT:_DATA[0A04h]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
		mov	070h[ESP],EAX
		push	02Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	078h[ESP],EAX
		je	L6716
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	074h[ESP],EAX
		je	L66FB
		call	near ptr ?os_critsecsize@@YAHXZ
		mov	ECX,074h[ESP]
		add	EAX,?PTRSIZE@@3HA
		mov	EDX,EAX
		sar	EDX,01Fh
		push	EDX
		push	EAX
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	074h[ESP],EAX
L66FB:		mov	EDX,074h[ESP]
		push	EDX
		push	dword ptr ?basic@Type@@2QAPAU1@A[038h]
		mov	ECX,080h[ESP]
		call	near ptr ??0TypeSArray@@QAE@PAUType@@PAUExpression@@@Z
		mov	078h[ESP],EAX
L6716:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L6742
		mov	ECX,EDI
		push	0
		push	dword ptr 074h[ESP]
		push	dword ptr 080h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EDI,EAX
L6742:		or	dword ptr 030h[EDI],040000001h
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L6767
		mov	ECX,EBP
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr 0[EBP],offset FLAT:??_7Statements@@6B@
L6767:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	080h[ESP],EAX
		je	L67BE
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	07Ch[ESP],EAX
		je	L67A0
		mov	ECX,EAX
		push	EDI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0DeclarationExp@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	07Ch[ESP],EAX
L67A0:		mov	EDX,07Ch[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,08Ch[ESP]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	080h[ESP],EAX
L67BE:		mov	EDX,080h[ESP]
		mov	ECX,EBP
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	dword ptr ?criticalenter@Id@@2PAUIdentifier@@A
		push	dword ptr ?basic@Type@@2QAPAU1@A[034h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PAUIdentifier@@@Z
		mov	08Ch[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	098h[ESP],EAX
		je	L684B
		push	dword ptr ?ptr@Id@@2PAUIdentifier@@A
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	098h[ESP],EAX
		je	L682A
		mov	ECX,EAX
		push	EDI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	098h[ESP],EAX
L682A:		mov	EDX,098h[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,0A8h[ESP]
		call	near ptr ??0DotIdExp@@QAE@ULoc@@PAUExpression@@PAUIdentifier@@@Z
		mov	098h[ESP],EAX
L684B:		push	ESI
		mov	ECX,09Ch[ESP]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		mov	090h[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A0h[ESP],EAX
		je	L68CC
		push	dword ptr 090h[ESP]
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A0h[ESP],EAX
		je	L68AB
		mov	ECX,EAX
		push	dword ptr 090h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0A0h[ESP],EAX
L68AB:		mov	EDX,0A0h[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,0B0h[ESP]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	0A0h[ESP],EAX
L68CC:		mov	ECX,0A0h[ESP]
		mov	EDX,?basic@Type@@2QAPAU1@A[034h]
		mov	010h[ECX],EDX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0A4h[ESP],EAX
		je	L690C
		mov	ECX,EAX
		push	dword ptr 0A0h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0A4h[ESP],EAX
L690C:		mov	EDX,0A4h[ESP]
		mov	ECX,EBP
		push	EDX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	dword ptr ?criticalexit@Id@@2PAUIdentifier@@A
		push	dword ptr ?basic@Type@@2QAPAU1@A[034h]
		call	near ptr ?genCfunc@FuncDeclaration@@SAPAU1@PAUType@@PAUIdentifier@@@Z
		mov	0B0h[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B8h[ESP],EAX
		je	L6999
		push	dword ptr ?ptr@Id@@2PAUIdentifier@@A
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0B8h[ESP],EAX
		je	L6978
		mov	ECX,EAX
		push	EDI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0B8h[ESP],EAX
L6978:		mov	EDX,0B8h[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,0C8h[ESP]
		call	near ptr ??0DotIdExp@@QAE@ULoc@@PAUExpression@@PAUIdentifier@@@Z
		mov	0B8h[ESP],EAX
L6999:		push	ESI
		mov	ECX,0BCh[ESP]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		mov	098h[ESP],EAX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C0h[ESP],EAX
		je	L6A1A
		push	dword ptr 098h[ESP]
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C0h[ESP],EAX
		je	L69F9
		mov	ECX,EAX
		push	dword ptr 0B4h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	0C0h[ESP],EAX
L69F9:		mov	EDX,0C0h[ESP]
		push	EDX
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		mov	ECX,0D0h[ESP]
		call	near ptr ??0CallExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	0C0h[ESP],EAX
L6A1A:		mov	ECX,0C0h[ESP]
		mov	EDX,?basic@Type@@2QAPAU1@A[034h]
		mov	010h[ECX],EDX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C4h[ESP],EAX
		je	L6A5A
		mov	ECX,EAX
		push	dword ptr 0C0h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	0C4h[ESP],EAX
L6A5A:		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0C8h[ESP],EAX
		je	L6A8D
		mov	ECX,EAX
		push	dword ptr 0C4h[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	0C8h[ESP],EAX
L6A8D:		mov	ECX,EBP
		push	dword ptr 0C8h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	0CCh[ESP],EAX
		je	L6AC5
		mov	ECX,EAX
		push	EBP
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	0CCh[ESP],EAX
L6AC5:		add	ESP,014h
		push	ESI
		mov	ECX,0BCh[ESP]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0ACh
		ret	4
?hasBreak@SynchronizedStatement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?hasContinue@SynchronizedStatement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?usesEH@SynchronizedStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?blockExit@SynchronizedStatement@@UAEHXZ:
		push	ECX
		mov	EAX,014h[ECX]
		test	EAX,EAX
		je	L6B09
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 04Ch[EDX]
		jmp short	L6B0E
L6B09:		mov	EAX,1
L6B0E:		pop	ECX
		ret
?toCBuffer@SynchronizedStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0A10h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		cmp	dword ptr 010h[EAX],0
		je	L6B50
		push	028h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		push	dword ptr 014h[ESP]
		mov	EDX,0Ch[ESP]
		mov	ECX,010h[EDX]
		push	EBX
		mov	ESI,[ECX]
		call	dword ptr 048h[ESI]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L6B50:		mov	EAX,8[ESP]
		cmp	dword ptr 014h[EAX],0
		je	L6B74
		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		push	dword ptr 014h[ESP]
		mov	EDX,0Ch[ESP]
		mov	ECX,014h[EDX]
		push	EBX
		mov	ESI,[ECX]
		call	dword ptr 028h[ESI]
L6B74:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
??0WithStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7WithStatement@@6B@
		mov	014h[EBX],ECX
		mov	dword ptr 018h[EBX],0
		pop	EBX
		ret	010h
?syntaxCopy@WithStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L6BF7
		mov	EAX,010h[ESP]
		mov	ECX,014h[EAX]
		test	ECX,ECX
		je	L6BD8
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		jmp short	L6BDA
L6BD8:		xor	EAX,EAX
L6BDA:		mov	ESI,010h[ESP]
		mov	ECX,010h[ESI]
		push	EAX
		mov	EDI,[ECX]
		call	dword ptr 024h[EDI]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0WithStatement@@QAE@ULoc@@PAUExpression@@PAUStatement@@@Z
		mov	EBX,EAX
L6BF7:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
?semantic@WithStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,01Ch
		push	EBX
		mov	EBX,ECX
		mov	ECX,010h[EBX]
		push	EBP
		mov	EDX,[ECX]
		push	ESI
		mov	ESI,02Ch[ESP]
		push	EDI
		push	ESI
		call	dword ptr 028h[EDX]
		push	EAX
		mov	010h[EBX],EAX
		push	ESI
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	010h[EBX],EAX
		add	ESP,8
		mov	ECX,0Ch[EAX]
		cmp	ECX,09Eh
		jne	L6C3C
		mov	ECX,010h[EBX]
		mov	EDI,018h[ECX]
		jmp	near ptr L6E3E
L6C3C:		mov	EDX,014h
		cmp	ECX,EDX
		jne	L6CB1
		push	ESI
		mov	ECX,010h[EBX]
		mov	018h[ESP],ECX
		mov	EDX,018h[ESP]
		mov	EAX,010h[EDX]
		mov	EAX,[EAX]
		mov	ECX,010h[ECX]
		call	dword ptr 06Ch[EAX]
		mov	EBP,EAX
		test	EAX,EAX
		je	L6C73
		mov	EDX,0[EBP]
		mov	ECX,EBP
		call	dword ptr 0138h[EDX]
		mov	EDI,EAX
		test	EAX,EAX
		jmp short	L6C75
L6C73:		xor	EDI,EDI
L6C75:		jne	L6E3E
		mov	EDI,014h[ESP]
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0A20h]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		mov	ECX,014h[EBX]
		test	ECX,ECX
		je	L6CA5
		push	ESI
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	014h[EBX],EAX
L6CA5:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
L6CB1:		mov	EDI,010h[EAX]
		test	EDI,EDI
		jne	L6CCC
		push	0ECAh
		push	offset FLAT:_DATA[0A3Ch]
		push	offset FLAT:_DATA[0A48h]
		call	near ptr __assert
L6CCC:		mov	EAX,[EDI]
		mov	ECX,EDI
		call	dword ptr 070h[EAX]
		mov	EDI,EAX
		mov	EDX,[EDI]
		mov	ECX,EAX
		call	dword ptr 07Ch[EDX]
		test	EAX,EAX
		je	L6D73
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	018h[ESP],EAX
		je	L6D0A
		mov	ECX,EAX
		push	dword ptr 010h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	018h[ESP],EAX
L6D0A:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01Ch[ESP],EAX
		je	L6D3D
		mov	EDX,010h[EBX]
		push	dword ptr 018h[ESP]
		mov	ECX,EAX
		push	dword ptr ?withSym@Id@@2PAUIdentifier@@A
		push	dword ptr 010h[EDX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	01Ch[ESP],EAX
L6D3D:		mov	EDX,01Ch[ESP]
		mov	ECX,EDX
		mov	018h[EBX],EDX
		mov	EDX,[EDX]
		push	ESI
		call	dword ptr 040h[EDX]
		push	03Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L6D66
		mov	ECX,EBP
		push	EBX
		call	near ptr ??0WithScopeSymbol@@QAE@PAUWithStatement@@@Z
		mov	EBP,EAX
L6D66:		mov	EDX,8[ESI]
		mov	EDI,EBP
		mov	0Ch[EBP],EDX
		jmp	near ptr L6E3E
L6D73:		cmp	dword ptr 4[EDI],8
		jne	L6E18
		push	ESI
		mov	ECX,010h[EBX]
		call	near ptr ?addressOf@Expression@@QAEPAU1@PAUScope@@@Z
		mov	020h[ESP],EAX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	024h[ESP],EAX
		je	L6DB1
		mov	ECX,EAX
		push	dword ptr 020h[ESP]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	024h[ESP],EAX
L6DB1:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	028h[ESP],EAX
		je	L6DE5
		mov	ECX,EAX
		push	dword ptr 024h[ESP]
		push	dword ptr ?withSym@Id@@2PAUIdentifier@@A
		mov	EDX,028h[ESP]
		push	dword ptr 010h[EDX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	028h[ESP],EAX
L6DE5:		mov	EDX,028h[ESP]
		mov	ECX,EDX
		mov	018h[EBX],EDX
		mov	EDX,[EDX]
		push	ESI
		call	dword ptr 040h[EDX]
		push	03Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L6E0E
		mov	ECX,EBP
		push	EBX
		call	near ptr ??0WithScopeSymbol@@QAE@PAUWithStatement@@@Z
		mov	EBP,EAX
L6E0E:		mov	EDX,8[ESI]
		mov	EDI,EBP
		mov	0Ch[EBP],EDX
		jmp short	L6E3E
L6E18:		mov	ESI,010h[EBX]
		mov	ECX,010h[ESI]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[0A4Ch]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		xor	EAX,EAX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
L6E3E:		push	EDI
		mov	ECX,ESI
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	EDX,014h[EBX]
		mov	ESI,EAX
		test	EDX,EDX
		je	L6E5A
		push	ESI
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 03Ch[EDX]
		mov	014h[EBX],EAX
L6E5A:		mov	ECX,ESI
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,01Ch
		ret	4
		nop
		nop
		nop
?toCBuffer@WithStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0A80h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	offset FLAT:_DATA[0A88h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ESI,8[ESP]
		mov	EAX,014h[ESI]
		test	EAX,EAX
		je	L6EB7
		push	dword ptr 014h[ESP]
		mov	EDX,[EAX]
		mov	ECX,EAX
		push	EBX
		call	dword ptr 028h[EDX]
L6EB7:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
		nop
?usesEH@WithStatement@@UAEHXZ:
		push	ECX
		mov	EAX,014h[ECX]
		test	EAX,EAX
		je	L6ED1
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		jmp short	L6ED3
L6ED1:		xor	EAX,EAX
L6ED3:		pop	ECX
		ret
?blockExit@WithStatement@@UAEHXZ:
		push	ECX
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		xor	EBX,EBX
		push	ESI
		push	EDI
		call	dword ptr 08Ch[EAX]
		test	EAX,EAX
		je	L6EF0
		mov	EBX,2
L6EF0:		mov	EDX,010h[ESP]
		cmp	dword ptr 014h[EDX],0
		je	L6F0A
		mov	ESI,010h[ESP]
		mov	ECX,014h[ESI]
		mov	EDI,[ECX]
		call	dword ptr 04Ch[EDI]
		or	EBX,EAX
		jmp short	L6F10
L6F0A:		or	EBX,1
L6F10:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
??0TryCatchStatement@@QAE@ULoc@@PAUStatement@@PAUArray@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7TryCatchStatement@@6B@
		mov	014h[EBX],ECX
		pop	EBX
		ret	010h
		nop
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@TryCatchStatement@@UAEPAUStatement@@XZ:
		push	EBX
		push	ESI
		push	EDI
		mov	EDI,ECX
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L6F6E
		mov	ECX,ESI
		call	near ptr ??0Array@@QAE@XZ
		mov	ESI,EAX
L6F6E:		mov	EDX,014h[EDI]
		mov	ECX,ESI
		push	dword ptr 4[EDX]
		call	near ptr ?setDim@Array@@QAEXI@Z
		xor	EBX,EBX
		cmp	4[ESI],EBX
		je	L6F9C
L6F82:		mov	EDX,014h[EDI]
		mov	ECX,8[EDX]
		mov	ECX,[EBX*4][ECX]
		call	near ptr ?syntaxCopy@Catch@@QAEPAU1@XZ
		mov	EDX,8[ESI]
		mov	[EBX*4][EDX],EAX
		inc	EBX
		cmp	4[ESI],EBX
		ja	L6F82
L6F9C:		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L6FC5
		mov	ECX,010h[EDI]
		push	ESI
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0TryCatchStatement@@QAE@ULoc@@PAUStatement@@PAUArray@@@Z
		mov	EBX,EAX
L6FC5:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		ret
		nop
		nop
		nop
		nop
		nop
?semantic@TryCatchStatement@@UAEPAUStatement@@PAUScope@@@Z:
		sub	ESP,014h
		push	EBX
		push	EBP
		mov	EBP,ECX
		mov	ECX,010h[EBP]
		push	ESI
		push	EDI
		push	0
		push	0
		push	dword ptr 030h[ESP]
		call	near ptr ?semanticScope@Statement@@QAEPAU1@PAUScope@@PAU1@1@Z
		xor	EBX,EBX
		mov	010h[EBP],EAX
		mov	EAX,014h[EBP]
		cmp	4[EAX],EBX
		je	L709D
L6FFA:		mov	014h[ESP],EBX
		mov	ESI,014h[EBP]
		mov	EDI,8[ESI]
		push	dword ptr 028h[ESP]
		mov	EDX,018h[ESP]
		mov	ECX,[EDX*4][EDI]
		mov	01Ch[ESP],ECX
		call	near ptr ?semantic@Catch@@QAEXPAUScope@@@Z
		xor	EBX,EBX
		cmp	014h[ESP],EBX
		je	L708C
		mov	EAX,018h[ESP]
		lea	EDX,4[EAX]
		mov	010h[ESP],EDX
L702B:		mov	ECX,014h[EBP]
		mov	EDX,8[ECX]
		mov	ESI,[EBX*4][EDX]
		mov	ECX,010h[ESP]
		call	near ptr ?toChars@Loc@@QAEPADXZ
		lea	ECX,4[ESI]
		mov	01Ch[ESP],EAX
		call	near ptr ?toChars@Loc@@QAEPADXZ
		mov	ECX,0Ch[ESI]
		mov	EDX,[ECX]
		mov	020h[ESP],EAX
		call	dword ptr 070h[EDX]
		mov	ECX,018h[ESP]
		mov	ECX,0Ch[ECX]
		push	EAX
		mov	EDX,[ECX]
		call	dword ptr 070h[EDX]
		mov	EDI,EAX
		mov	EDX,[EDI]
		mov	ECX,EAX
		call	dword ptr 078h[EDX]
		test	EAX,EAX
		je	L7085
		push	dword ptr 01Ch[ESP]
		push	dword ptr 024h[ESP]
		push	offset FLAT:_DATA[0A8Ch]
		push	EBP
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,010h
L7085:		inc	EBX
		cmp	EBX,014h[ESP]
		jb	L702B
L708C:		mov	EBX,014h[ESP]
		mov	EAX,014h[EBP]
		inc	EBX
		cmp	4[EAX],EBX
		ja	L6FFA
L709D:		mov	EBX,010h[EBP]
		test	EBX,EBX
		je	L70AF
		mov	ESI,[EBX]
		mov	ECX,EBX
		call	dword ptr 054h[ESI]
		test	EAX,EAX
		je	L70B3
L70AF:		xor	EAX,EAX
		jmp short	L70B5
L70B3:		mov	EAX,EBP
L70B5:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		nop
?hasBreak@TryCatchStatement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?usesEH@TryCatchStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
		nop
		nop
		nop
?blockExit@TryCatchStatement@@UAEHXZ:
		push	EBX
		mov	EDX,010h[ECX]
		test	EDX,EDX
		push	ESI
		mov	ESI,ECX
		push	EDI
		jne	L70F0
		push	0F48h
		push	offset FLAT:_DATA[0A3Ch]
		push	offset FLAT:_DATA[0AACh]
		call	near ptr __assert
L70F0:		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 04Ch[EDX]
		mov	ECX,014h[ESI]
		xor	EBX,EBX
		cmp	4[ECX],EBX
		mov	EDI,EAX
		je	L711C
L7103:		mov	EDX,014h[ESI]
		mov	ECX,8[EDX]
		mov	ECX,[EBX*4][ECX]
		call	near ptr ?blockExit@Catch@@QAEHXZ
		mov	EDX,014h[ESI]
		or	EDI,EAX
		inc	EBX
		cmp	4[EDX],EBX
		ja	L7103
L711C:		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		ret
?toCBuffer@TryCatchStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		push	EBP
		mov	EBP,014h[ESP]
		push	ESI
		mov	ESI,ECX
		push	EDI
		mov	EDI,018h[ESP]
		mov	ECX,EDI
		push	offset FLAT:_DATA[0AB4h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EDI
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,010h[ESI]
		test	EDX,EDX
		je	L7154
		push	EBP
		mov	ECX,EDX
		mov	EDX,[EDX]
		push	EDI
		call	dword ptr 028h[EDX]
L7154:		mov	ECX,014h[ESI]
		xor	EBX,EBX
		cmp	4[ECX],EBX
		je	L7177
L715E:		push	EBP
		mov	EDX,014h[ESI]
		mov	ECX,8[EDX]
		push	EDI
		mov	ECX,[EBX*4][ECX]
		call	near ptr ?toCBuffer@Catch@@QAEXPAUOutBuffer@@PAUHdrGenState@@@Z
		mov	EDX,014h[ESI]
		inc	EBX
		cmp	4[EDX],EBX
		ja	L715E
L7177:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	EAX
		ret	8
		nop
??0Catch@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		lea	EAX,4[EBX]
		push	ESI
		xor	EDX,EDX
		mov	ESI,014h[ESP]
		mov	dword ptr [ECX],offset FLAT:??_7Object@@6B@
		mov	ECX,010h[ESP]
		mov	dword ptr 4[EAX],0
		mov	[EAX],EDX
		mov	EAX,0Ch[ESP]
		push	EDI
		mov	EDI,01Ch[ESP]
		mov	4[EBX],EAX
		mov	EAX,020h[ESP]
		mov	018h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7Catch@@6B@
		mov	8[EBX],ECX
		mov	0Ch[EBX],ESI
		mov	010h[EBX],EDI
		mov	014h[EBX],EDX
		pop	EDI
		pop	ESI
		pop	EBX
		ret	014h
		nop
		nop
		nop
?syntaxCopy@Catch@@QAEPAU1@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		push	EDI
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L7223
		mov	EAX,010h[ESP]
		mov	ECX,018h[EAX]
		test	ECX,ECX
		je	L71F7
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		jmp short	L71F9
L71F7:		xor	EAX,EAX
L71F9:		mov	ESI,010h[ESP]
		mov	EDI,0Ch[ESI]
		push	EAX
		test	EDI,EDI
		push	dword ptr 010h[ESI]
		je	L7211
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 024h[EDX]
		jmp short	L7213
L7211:		xor	EAX,EAX
L7213:		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0Catch@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUStatement@@@Z
		mov	EBX,EAX
L7223:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret
		nop
		nop
		nop
		nop
?semantic@Catch@@QAEXPAUScope@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,014h[ESP]
		push	EDI
		cmp	dword ptr 020h[ESI],0
		je	L7254
		push	offset FLAT:_DATA[0AB8h]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		add	ESP,0Ch
L7254:		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L726D
		mov	ECX,EDI
		call	near ptr ??0ScopeDsymbol@@QAE@XZ
		mov	EDI,EAX
L726D:		mov	EDX,8[ESI]
		mov	ECX,ESI
		mov	0Ch[EDI],EDX
		push	EDI
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	ESI,EAX
		cmp	dword ptr 0Ch[EBX],0
		jne	L72BF
		push	048h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L72BC
		mov	ECX,EDI
		push	dword ptr ?Object@Id@@2PAUIdentifier@@A
		mov	dword ptr 014h[ESP],0
		mov	dword ptr 010h[ESP],0
		mov	EDX,014h[ESP]
		mov	EAX,010h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0TypeIdentifier@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EDI,EAX
L72BC:		mov	0Ch[EBX],EDI
L72BF:		push	ESI
		mov	ECX,0Ch[EBX]
		mov	EDX,[ECX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	dword ptr 030h[EDX]
		mov	ECX,EAX
		mov	0Ch[EBX],EAX
		mov	EDX,[EAX]
		call	dword ptr 070h[EDX]
		mov	EDI,EAX
		mov	EDX,[EDI]
		mov	ECX,EAX
		call	dword ptr 07Ch[EDX]
		test	EAX,EAX
		jne	L7303
		mov	ECX,0Ch[EBX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0AE8h]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		add	ESP,010h
		jmp short	L7343
L7303:		cmp	dword ptr 010h[EBX],0
		je	L7343
		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L7330
		mov	ECX,EDI
		push	0
		push	dword ptr 010h[EBX]
		push	dword ptr 0Ch[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	EDI,EAX
L7330:		mov	ECX,ESI
		mov	014h[EBX],EDI
		mov	EDX,014h[ESI]
		mov	0Ch[EDI],EDX
		push	dword ptr 014h[EBX]
		call	near ptr ?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
L7343:		push	ESI
		mov	ECX,018h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	ECX,ESI
		mov	018h[EBX],EAX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	4
		nop
?blockExit@Catch@@QAEHXZ:
		push	ECX
		mov	EAX,018h[ECX]
		test	EAX,EAX
		je	L7371
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 04Ch[EDX]
		jmp short	L7376
L7371:		mov	EAX,1
L7376:		pop	ECX
		ret
?toCBuffer@Catch@@QAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0B10h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		cmp	dword ptr 0Ch[EAX],0
		je	L73BF
		push	028h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		push	dword ptr 014h[ESP]
		mov	EDX,0Ch[ESP]
		push	dword ptr 010h[EDX]
		mov	ESI,010h[ESP]
		mov	ECX,0Ch[ESI]
		push	EBX
		mov	EAX,[ECX]
		call	dword ptr 038h[EAX]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L73BF:		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	ECX,EBX
		push	07Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EAX,8[ESP]
		mov	EDX,018h[EAX]
		test	EDX,EDX
		je	L73ED
		push	dword ptr 014h[ESP]
		mov	ESI,[EDX]
		mov	ECX,EDX
		push	EBX
		call	dword ptr 028h[ESI]
L73ED:		push	07Dh
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7TryFinallyStatement@@6B@
		mov	014h[EBX],ECX
		pop	EBX
		ret	010h
		nop
		nop
		nop
?syntaxCopy@TryFinallyStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L746C
		mov	EAX,8[ESP]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,010h[ESI]
		push	EAX
		mov	EAX,[ECX]
		call	dword ptr 024h[EAX]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0TryFinallyStatement@@QAE@ULoc@@PAUStatement@@1@Z
		mov	EBX,EAX
L746C:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?semantic@TryFinallyStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		push	ESI
		mov	ESI,ECX
		mov	ECX,010h[ESI]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 03Ch[EDX]
		mov	ECX,EBX
		mov	010h[ESI],EAX
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		mov	EBX,EAX
		xor	EDX,EDX
		mov	020h[EAX],ESI
		mov	028h[EBX],EDX
		mov	02Ch[EBX],EDX
		mov	ECX,014h[ESI]
		push	EBX
		call	near ptr ?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z
		mov	ECX,EBX
		mov	014h[ESI],EAX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	4
?toCBuffer@TryFinallyStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		push	ESI
		push	offset FLAT:_DATA[0B18h]
		push	EBX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		push	dword ptr 01Ch[ESP]
		mov	EAX,014h[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	offset FLAT:_DATA[0B20h]
		push	EBX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		push	dword ptr 024h[ESP]
		mov	ESI,01Ch[ESP]
		mov	ECX,014h[ESI]
		push	EBX
		mov	EAX,[ECX]
		call	dword ptr 028h[EAX]
		mov	ECX,EBX
		push	07Dh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		add	ESP,010h
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
?hasBreak@TryFinallyStatement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?hasContinue@TryFinallyStatement@@UAEHXZ:
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?usesEH@TryFinallyStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?blockExit@TryFinallyStatement@@UAEHXZ:
		push	ECX
		cmp	dword ptr 010h[ECX],0
		je	L7539
		mov	ECX,010h[ECX]
		mov	EDX,[ECX]
		call	dword ptr 04Ch[EDX]
		pop	ECX
		ret
L7539:		pop	ECX
		mov	EAX,1
		ret
??0OnScopeStatement@@QAE@ULoc@@W4TOK@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7OnScopeStatement@@6B@
		mov	014h[EBX],ECX
		pop	EBX
		ret	010h
		nop
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@OnScopeStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L75A6
		mov	EAX,8[ESP]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 010h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0OnScopeStatement@@QAE@ULoc@@W4TOK@@PAUStatement@@@Z
		mov	EBX,EAX
L75A6:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?semantic@OnScopeStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret	4
?blockExit@OnScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
		nop
?toCBuffer@OnScopeStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,010h[ESP]
		push	dword ptr 010h[ECX]
		call	near ptr ?toChars@Token@@SAPBDW4TOK@@@Z
		add	ESP,4
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBX
		push	020h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,014h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		pop	EBX
		add	ESP,8
		ret	8
		nop
		nop
		nop
		nop
		nop
?usesEH@OnScopeStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		cmp	dword ptr 010h[ECX],0D1h
		jne	L7611
		xor	EAX,EAX
L7611:		pop	ECX
		ret
?scopeCode@OnScopeStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z:
		sub	ESP,06Ch
		xor	EDX,EDX
		push	EBX
		mov	EBX,ECX
		push	EBP
		push	ESI
		push	EDI
		mov	EAX,084h[ESP]
		mov	ESI,088h[ESP]
		mov	[EAX],EDX
		mov	EDI,08Ch[ESP]
		mov	[ESI],EDX
		mov	[EDI],EDX
		mov	ECX,010h[EBX]
		cmp	ECX,0CFh
		je	L7659
		cmp	ECX,0D0h
		je	L7663
		cmp	ECX,0D1h
		je	L766D
		jmp	near ptr L78E6
L7659:		mov	ECX,014h[EBX]
		mov	[EDI],ECX
		jmp	near ptr L78FA
L7663:		mov	EDX,014h[EBX]
		mov	[ESI],EDX
		jmp	near ptr L78FA
L766D:		mov	088h[ESP],ESI
		mov	08Ch[ESP],EDI
		push	offset FLAT:_DATA[0B30h]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
		mov	018h[ESP],EAX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L76C8
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L76B6
		mov	ECX,EDI
		push	0
		push	0
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	EDI,EAX
L76B6:		mov	EDX,EDI
		mov	ECX,EBP
		push	EDI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0ExpInitializer@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBP,EAX
L76C8:		push	078h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L76F2
		mov	ECX,ESI
		push	EBP
		push	dword ptr 01Ch[ESP]
		push	dword ptr ?basic@Type@@2QAPAU1@A[048h]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0VarDeclaration@@QAE@ULoc@@PAUType@@PAUIdentifier@@PAUInitializer@@@Z
		mov	ESI,EAX
L76F2:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	01Ch[ESP],EAX
		je	L7716
		mov	ECX,EAX
		push	ESI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0DeclarationStatement@@QAE@ULoc@@PAUDsymbol@@@Z
		mov	01Ch[ESP],EAX
L7716:		mov	ECX,088h[ESP]
		mov	EDX,01Ch[ESP]
		mov	[ECX],EDX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	020h[ESP],EAX
		je	L7744
		mov	ECX,EAX
		push	0
		push	1
		call	near ptr ??0IntegerExp@@QAE@_K@Z
		mov	020h[ESP],EAX
L7744:		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	030h[ESP],EAX
		je	L77C0
		push	dword ptr 020h[ESP]
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	028h[ESP],EAX
		je	L7794
		mov	ECX,028h[ESP]
		push	ESI
		mov	dword ptr 034h[ESP],0
		mov	dword ptr 030h[ESP],0
		mov	EDX,034h[ESP]
		mov	EAX,030h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	028h[ESP],EAX
L7794:		mov	EDX,028h[ESP]
		mov	ECX,034h[ESP]
		push	EDX
		mov	dword ptr 044h[ESP],0
		mov	dword ptr 040h[ESP],0
		mov	EDX,044h[ESP]
		mov	EAX,040h[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0AssignExp@@QAE@ULoc@@PAUExpression@@1@Z
		mov	030h[ESP],EAX
L77C0:		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	040h[ESP],EAX
		je	L77FD
		push	dword ptr 030h[ESP]
		mov	ECX,044h[ESP]
		mov	dword ptr 050h[ESP],0
		mov	dword ptr 04Ch[ESP],0
		mov	EDX,050h[ESP]
		mov	EAX,04Ch[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	040h[ESP],EAX
L77FD:		mov	ECX,08Ch[ESP]
		mov	EDX,040h[ESP]
		mov	[ECX],EDX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	050h[ESP],EAX
		je	L7844
		mov	ECX,050h[ESP]
		push	ESI
		mov	dword ptr 060h[ESP],0
		mov	dword ptr 05Ch[ESP],0
		mov	EDX,060h[ESP]
		mov	EAX,05Ch[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0VarExp@@QAE@ULoc@@PAUDeclaration@@@Z
		mov	050h[ESP],EAX
L7844:		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	060h[ESP],EAX
		je	L7881
		push	dword ptr 050h[ESP]
		mov	ECX,064h[ESP]
		mov	dword ptr 070h[ESP],0
		mov	dword ptr 06Ch[ESP],0
		mov	EDX,070h[ESP]
		mov	EAX,06Ch[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0NotExp@@QAE@ULoc@@PAUExpression@@@Z
		mov	060h[ESP],EAX
L7881:		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	070h[ESP],EAX
		je	L78D4
		push	0
		push	dword ptr 014h[EBX]
		push	dword ptr 068h[ESP]
		push	0
		mov	dword ptr 08Ch[ESP],0
		mov	dword ptr 088h[ESP],0
		mov	EDX,08Ch[ESP]
		mov	EAX,088h[ESP]
		push	EDX
		push	EAX
		mov	ECX,088h[ESP]
		call	near ptr ??0IfStatement@@QAE@ULoc@@PAUParameter@@PAUExpression@@PAUStatement@@3@Z
		mov	070h[ESP],EAX
L78D4:		mov	ECX,090h[ESP]
		mov	EDX,070h[ESP]
		mov	[ECX],EDX
		add	ESP,4
		jmp short	L78FA
L78E6:		push	01040h
		push	offset FLAT:_DATA[0A3Ch]
		push	offset FLAT:_DATA[0B38h]
		call	near ptr __assert
L78FA:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,06Ch
		ret	010h
??0ThrowStatement@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7ThrowStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@ThrowStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L795A
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0ThrowStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L795A:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?semantic@ThrowStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,010h[ESP]
		mov	ECX,014h[ESI]
		mov	EDX,[ECX]
		call	dword ptr 0F8h[EDX]
		or	dword ptr 0CCh[EAX],2
		cmp	dword ptr 03Ch[ESI],0
		je	L7992
		push	offset FLAT:_DATA[0B3Ch]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L7992:		push	ESI
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
		push	EAX
		mov	010h[EBX],EAX
		push	ESI
		call	near ptr ?resolveProperties@@YAPAUExpression@@PAUScope@@PAU1@@Z
		mov	010h[EBX],EAX
		add	ESP,8
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 070h[EDX]
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 07Ch[EDX]
		test	EAX,EAX
		jne	L79D8
		mov	EAX,010h[EBX]
		mov	ECX,010h[EAX]
		mov	ESI,[ECX]
		call	dword ptr 014h[ESI]
		push	EAX
		push	offset FLAT:_DATA[0B64h]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
L79D8:		pop	ESI
		mov	EAX,EBX
		pop	EBX
		pop	ECX
		ret	4
?blockExit@ThrowStatement@@UAEHXZ:
		push	ECX
		mov	EAX,2
		pop	ECX
		ret
?toCBuffer@ThrowStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,010h[ESP]
		push	offset FLAT:_DATA[0B90h]
		push	EBX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		push	dword ptr 01Ch[ESP]
		mov	EAX,014h[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	03Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		add	ESP,8
		pop	EBX
		add	ESP,8
		ret	8
??0VolatileStatement@@QAE@ULoc@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7VolatileStatement@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@VolatileStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L7A83
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		test	ECX,ECX
		je	L7A6D
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		jmp short	L7A6F
L7A6D:		xor	EAX,EAX
L7A6F:		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0VolatileStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	EBX,EAX
L7A83:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?semantic@VolatileStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	ECX
		push	EBX
		je	L7AAC
		push	dword ptr 010h[ESP]
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 03Ch[EDX]
		mov	EBX,8[ESP]
		mov	010h[EBX],EAX
L7AAC:		mov	EAX,8[ESP]
		pop	EBX
		add	ESP,8
		ret	4
?flatten@VolatileStatement@@UAEPAUStatements@@PAUScope@@@Z:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		je	L7AD4
		mov	EDX,[EAX]
		push	dword ptr 018h[ESP]
		mov	ECX,EAX
		call	dword ptr 05Ch[EDX]
		mov	EDI,EAX
		test	EAX,EAX
		jmp short	L7AD6
L7AD4:		xor	EDI,EDI
L7AD6:		je	L7B15
		xor	EBX,EBX
		cmp	4[EDI],EBX
		je	L7B15
L7ADF:		push	014h
		mov	ECX,8[EDI]
		mov	EBP,[EBX*4][ECX]
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L7B09
		mov	EDX,010h[ESP]
		push	EBP
		mov	ECX,ESI
		push	dword ptr 8[EDX]
		push	dword ptr 4[EDX]
		call	near ptr ??0VolatileStatement@@QAE@ULoc@@PAUStatement@@@Z
		mov	ESI,EAX
L7B09:		mov	EDX,8[EDI]
		mov	[EBX*4][EDX],ESI
		inc	EBX
		cmp	4[EDI],EBX
		ja	L7ADF
L7B15:		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
		nop
?blockExit@VolatileStatement@@UAEHXZ:
		push	ECX
		mov	EAX,010h[ECX]
		test	EAX,EAX
		je	L7B31
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 04Ch[EDX]
		jmp short	L7B36
L7B31:		mov	EAX,1
L7B36:		pop	ECX
		ret
?toCBuffer@VolatileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		push	offset FLAT:_DATA[0B98h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		mov	EDX,010h[EAX]
		test	EDX,EDX
		je	L7B84
		mov	ESI,[EDX]
		mov	ECX,EDX
		call	dword ptr 038h[ESI]
		test	EAX,EAX
		je	L7B6A
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		jmp short	L7B73
L7B6A:		push	020h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L7B73:		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 028h[EDX]
L7B84:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
??0GotoStatement@@QAE@ULoc@@PAUIdentifier@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		xor	ECX,ECX
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7GotoStatement@@6B@
		mov	014h[EBX],ECX
		mov	018h[EBX],ECX
		pop	EBX
		ret	0Ch
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@GotoStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	01Ch
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L7BE9
		mov	EAX,8[ESP]
		push	dword ptr 010h[EAX]
		mov	ECX,EBX
		push	dword ptr 8[EAX]
		push	dword ptr 4[EAX]
		call	near ptr ??0GotoStatement@@QAE@ULoc@@PAUIdentifier@@@Z
		mov	EBX,EAX
L7BE9:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?semantic@GotoStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,0Ch[ESP]
		mov	ECX,014h[ESI]
		push	EDI
		mov	EDX,[ECX]
		call	dword ptr 0F8h[EDX]
		mov	ECX,020h[ESI]
		mov	EDI,EAX
		mov	018h[EBX],ECX
		mov	ECX,EDI
		push	dword ptr 010h[EBX]
		call	near ptr ?searchLabel@FuncDeclaration@@QAEPAULabelDsymbol@@PAUIdentifier@@@Z
		mov	014h[EBX],EAX
		mov	EDX,028h[EAX]
		test	EDX,EDX
		jne	L7C87
		cmp	dword ptr 030h[ESI],0
		je	L7C87
		mov	010h[ESP],ESI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L7C47
		mov	ECX,ESI
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr [ESI],offset FLAT:??_7Statements@@6B@
L7C47:		mov	ECX,ESI
		push	EBX
		call	near ptr ?push@Array@@QAEXPAX@Z
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L7C6F
		mov	ECX,EDI
		push	ESI
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0CompoundStatement@@QAE@ULoc@@PAUStatements@@@Z
		mov	EDI,EAX
L7C6F:		mov	EDX,010h[ESP]
		mov	ECX,030h[EDX]
		push	EDI
		mov	ECX,030h[ECX]
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		ret	4
L7C87:		test	EDX,EDX
		je	L7CA1
		mov	ECX,018h[EDX]
		cmp	ECX,020h[ESI]
		je	L7CA1
		push	offset FLAT:_DATA[0BA4h]
		push	EBX
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,8
L7CA1:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		ret	4
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?blockExit@GotoStatement@@UAEHXZ:
		push	ECX
		mov	EAX,8
		pop	ECX
		ret
?toCBuffer@GotoStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,010h[ESP]
		mov	ECX,EBX
		push	offset FLAT:_DATA[0BCCh]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBX
		push	03Bh
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EBX
		add	ESP,8
		ret	8
??0LabelStatement@@QAE@ULoc@@PAUIdentifier@@PAUStatement@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	ECX,014h[ESP]
		mov	010h[EBX],EAX
		xor	EDX,EDX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7LabelStatement@@6B@
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		mov	01Ch[EBX],EDX
		mov	020h[EBX],EDX
		pop	EBX
		ret	010h
		nop
		nop
		nop
		nop
		nop
?syntaxCopy@LabelStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L7D66
		mov	EAX,8[ESP]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 010h[ESI]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0LabelStatement@@QAE@ULoc@@PAUIdentifier@@PAUStatement@@@Z
		mov	EBX,EAX
L7D66:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?semantic@LabelStatement@@UAEPAUStatement@@PAUScope@@@Z:
		push	EBX
		mov	EBX,8[ESP]
		push	ESI
		mov	ESI,ECX
		mov	ECX,014h[EBX]
		push	EDI
		mov	EDX,[ECX]
		call	dword ptr 0F8h[EDX]
		mov	ECX,EAX
		push	dword ptr 010h[ESI]
		call	near ptr ?searchLabel@FuncDeclaration@@QAEPAULabelDsymbol@@PAUIdentifier@@@Z
		mov	EDI,EAX
		cmp	dword ptr 028h[EAX],0
		je	L7DAE
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[0BD4h]
		push	ESI
		call	near ptr ?error@Statement@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L7DB1
L7DAE:		mov	028h[EDI],ESI
L7DB1:		mov	ECX,020h[EBX]
		mov	018h[ESI],ECX
		mov	ECX,EBX
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		mov	EDX,[EAX]
		mov	EBX,EAX
		mov	ECX,8[EDX]
		mov	8[EBX],ECX
		or	dword ptr 058h[EBX],010h
		mov	018h[EBX],ESI
		mov	EDX,014h[ESI]
		test	EDX,EDX
		je	L7DE4
		push	EBX
		mov	ECX,EDX
		call	near ptr ?semanticNoScope@Statement@@QAEPAU1@PAUScope@@@Z
		mov	014h[ESI],EAX
L7DE4:		mov	ECX,EBX
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EAX,ESI
		pop	EDI
		pop	ESI
		pop	EBX
		ret	4
?flatten@LabelStatement@@UAEPAUStatements@@PAUScope@@@Z:
		push	ECX
		push	ECX
		push	EBX
		xor	EBX,EBX
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	EDX,014h[EDI]
		test	EDX,EDX
		je	L7E79
		push	dword ptr 018h[ESP]
		mov	ECX,EDX
		mov	EDX,[EDX]
		call	dword ptr 05Ch[EDX]
		mov	EBX,EAX
		test	EAX,EAX
		je	L7E79
		cmp	dword ptr 4[EBX],0
		jne	L7E45
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L7E3B
		mov	ECX,ESI
		push	0
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0ExpStatement@@QAE@ULoc@@PAUExpression@@@Z
		mov	ESI,EAX
L7E3B:		mov	EDX,ESI
		mov	ECX,EBX
		push	ESI
		call	near ptr ?push@Array@@QAEXPAX@Z
L7E45:		mov	EDX,8[EBX]
		mov	ECX,[EDX]
		mov	010h[ESP],ECX
		push	024h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L7E74
		mov	ECX,ESI
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[EDI]
		push	dword ptr 8[EDI]
		push	dword ptr 4[EDI]
		call	near ptr ??0LabelStatement@@QAE@ULoc@@PAUIdentifier@@PAUStatement@@@Z
		mov	ESI,EAX
L7E74:		mov	EDX,8[EBX]
		mov	[EDX],ESI
L7E79:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	4
?usesEH@LabelStatement@@UAEHXZ:
		push	ECX
		mov	EAX,014h[ECX]
		test	EAX,EAX
		je	L7E95
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 048h[EDX]
		jmp short	L7E97
L7E95:		xor	EAX,EAX
L7E97:		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?blockExit@LabelStatement@@UAEHXZ:
		push	ECX
		mov	EAX,014h[ECX]
		test	EAX,EAX
		je	L7EB1
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 04Ch[EDX]
		jmp short	L7EB6
L7EB1:		mov	EAX,1
L7EB6:		pop	ECX
		ret
?comeFrom@LabelStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?toCBuffer@LabelStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		mov	ECX,010h[ECX]
		mov	EAX,[ECX]
		push	EBX
		mov	EBX,0Ch[ESP]
		push	ESI
		call	dword ptr 014h[EAX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,EBX
		push	03Ah
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,EBX
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		mov	EDX,8[ESP]
		mov	EAX,014h[EDX]
		test	EAX,EAX
		je	L7EFE
		push	dword ptr 014h[ESP]
		mov	ESI,[EAX]
		mov	ECX,EAX
		push	EBX
		call	dword ptr 028h[ESI]
L7EFE:		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
??0LabelDsymbol@@QAE@PAUIdentifier@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 8[ESP]
		call	near ptr ??0Dsymbol@@QAE@PAUIdentifier@@@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7LabelDsymbol@@6B@
		mov	dword ptr 028h[EBX],0
		pop	EBX
		ret	4
?isLabel@LabelDsymbol@@UAEPAU1@XZ:
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
??0AsmStatement@@QAE@ULoc@@PAUToken@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Statement@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		xor	ECX,ECX
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7AsmStatement@@6B@
		mov	dword ptr 014h[EBX],0
		mov	018h[EBX],ECX
		mov	01Ch[EBX],ECX
		mov	020h[EBX],ECX
		mov	024h[EBX],ECX
		pop	EBX
		ret	0Ch
?syntaxCopy@AsmStatement@@UAEPAUStatement@@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	028h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L7F89
		mov	EAX,8[ESP]
		push	dword ptr 010h[EAX]
		mov	ECX,EBX
		push	dword ptr 8[EAX]
		push	dword ptr 4[EAX]
		call	near ptr ??0AsmStatement@@QAE@ULoc@@PAUToken@@@Z
		mov	EBX,EAX
L7F89:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?comeFrom@AsmStatement@@UAEHXZ:
		push	ECX
		mov	EAX,1
		pop	ECX
		ret
?blockExit@AsmStatement@@UAEHXZ:
		push	ECX
		mov	EAX,01Fh
		pop	ECX
		ret
?toCBuffer@AsmStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		push	ESI
		mov	ESI,014h[ESP]
		mov	ECX,ESI
		push	EDI
		push	offset FLAT:_DATA[0BF0h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EDX,010h[ESP]
		mov	EBX,010h[EDX]
		test	EBX,EBX
		je	L802D
L7FC0:		mov	ECX,EBX
		call	near ptr ?toChars@Token@@QAEPBDXZ
		mov	ECX,ESI
		push	EAX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	EDX,[EBX]
		test	EDX,EDX
		je	L8027
		mov	ECX,8[EBX]
		cmp	ECX,04Eh
		je	L8027
		mov	EAX,066h
		cmp	ECX,EAX
		je	L8027
		mov	EDX,8[EDX]
		cmp	EDX,EAX
		je	L8027
		mov	EDI,3
		cmp	ECX,EDI
		je	L8027
		cmp	EDX,EDI
		je	L8027
		cmp	EDX,4
		je	L8027
		mov	EAX,1
		cmp	ECX,EAX
		je	L8027
		cmp	EDX,EAX
		je	L8027
		cmp	EDX,2
		je	L8027
		mov	EDI,064h
		cmp	ECX,EDI
		je	L8027
		cmp	EDX,EDI
		je	L8027
		push	020h
		mov	ECX,ESI
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L8027:		mov	EBX,[EBX]
		test	EBX,EBX
		jne	L7FC0
L802D:		push	offset FLAT:_DATA[0BF8h]
		mov	ECX,ESI
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,ESI
		call	near ptr ?writenl@OutBuffer@@QAEXXZ
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	8
_TEXT	ends
_DATA	segment
D0	db	073h,074h,061h,074h,065h,06dh,065h,06eh
	db	074h,02eh,063h,000h
DC	db	030h,000h,000h,000h
D10	db	025h,073h,00ah,000h
D14	db	053h,074h,061h,074h
	db	065h,06dh,065h,06eh,074h,03ah,03ah,074h
	db	06fh,043h,042h,075h,066h,066h,065h,072h
	db	028h,029h,000h,000h
D2C	db	053h,074h,061h,074h
	db	065h,06dh,065h,06eh,074h,03ah,03ah,062h
	db	06ch,06fh,063h,06bh,045h,078h,069h,074h
	db	028h,025h,070h,029h,00ah,000h,000h,000h
D48	db	06dh,069h,078h,069h,06eh,028h,000h,000h
D50	db	029h,03bh,000h,000h
D54	db	061h,072h,067h,075h
	db	06dh,065h,06eh,074h,020h,074h,06fh,020h
	db	06dh,069h,078h,069h,06eh,020h,06dh,075h
	db	073h,074h,020h,062h,065h,020h,061h,020h
	db	073h,074h,072h,069h,06eh,067h,02ch,020h
	db	06eh,06fh,074h,020h,028h,025h,073h,029h
	db	000h,000h,000h,000h
D84	db	05fh,05fh,06fh,000h
D88	db	073h,074h,061h,074h,065h,06dh,065h,06eh
	db	074h,020h,069h,073h,020h,06eh,06fh,074h
	db	020h,072h,065h,061h,063h,068h,061h,062h
	db	06ch,065h,000h,000h
DA4	db	064h,073h,000h,000h
DA8	db	064h,065h,02dh,03eh,06fh,070h,020h,03dh
	db	03dh,020h,054h,04fh,04bh,064h,065h,063h
	db	06ch,061h,072h,061h,074h,069h,06fh,06eh
	db	000h,000h,000h,000h
DC4	db	064h,000h,000h,000h
DC8	db	020h,03dh,020h,000h
DCC	db	075h,06eh,072h,06fh
	db	06ch,06ch,065h,064h,020h,07bh,000h,000h
DD8	db	077h,068h,069h,06ch,065h,020h,028h,000h
DE0	db	064h,06fh,000h,000h
DE4	db	066h,06fh,072h,020h
	db	028h,000h,000h,000h,063h,063h,000h,063h
	db	077h,000h,063h,064h,000h,077h,063h,000h
	db	063h,063h,000h,077h,064h,000h,064h,063h
	db	000h,064h,077h,000h,064h,064h,000h,000h
D108	db	069h,06eh,076h,061h,06ch,069h,064h,020h
	db	066h,06fh,072h,065h,061h,063h,068h,020h
	db	061h,067h,067h,072h,065h,067h,061h,074h
	db	065h,020h,025h,073h,000h,000h,000h,000h
D128	db	063h,061h,06eh,06eh,06fh,074h,020h,075h
	db	06eh,069h,071h,075h,065h,06ch,079h,020h
	db	069h,06eh,066h,065h,072h,020h,066h,06fh
	db	072h,065h,061h,063h,068h,020h,061h,072h
	db	067h,075h,06dh,065h,06eh,074h,020h,074h
	db	079h,070h,065h,073h,000h,000h,000h,000h
D158	db	06fh,06eh,06ch,079h,020h,06fh,06eh,065h
	db	020h,028h,076h,061h,06ch,075h,065h,029h
	db	020h,06fh,072h,020h,074h,077h,06fh,020h
	db	028h,06bh,065h,079h,02ch,076h,061h,06ch
	db	075h,065h,029h,020h,061h,072h,067h,075h
	db	06dh,065h,06eh,074h,073h,020h,066h,06fh
	db	072h,020h,074h,075h,070h,06ch,065h,020h
	db	066h,06fh,072h,065h,061h,063h,068h,000h
D198	db	073h,074h,061h,074h,065h,06dh,065h,06eh
	db	074h,02eh,063h,000h
D1A4	db	030h,000h,000h,000h
D1A8	db	06eh,06fh,020h,073h,074h,06fh,072h,061h
	db	067h,065h,020h,063h,06ch,061h,073h,073h
	db	020h,066h,06fh,072h,020h,06bh,065h,079h
	db	020h,025h,073h,000h
D1C4	db	066h,06fh,072h,065h
	db	061h,063h,068h,03ah,020h,06bh,065h,079h
	db	020h,074h,079h,070h,065h,020h,06dh,075h
	db	073h,074h,020h,062h,065h,020h,069h,06eh
	db	074h,020h,06fh,072h,020h,075h,069h,06eh
	db	074h,02ch,020h,06ch,06fh,06eh,067h,020h
	db	06fh,072h,020h,075h,06ch,06fh,06eh,067h
	db	02ch,020h,06eh,06fh,074h,020h,025h,073h
	db	000h,000h,000h,000h
D204	db	066h,06fh,072h,065h
	db	061h,063h,068h,03ah,020h,06bh,065h,079h
	db	020h,074h,079h,070h,065h,020h,06dh,075h
	db	073h,074h,020h,062h,065h,020h,069h,06eh
	db	074h,020h,06fh,072h,020h,075h,069h,06eh
	db	074h,02ch,020h,06eh,06fh,074h,020h,025h
	db	073h,000h,000h,000h
D234	db	06eh,06fh,020h,073h
	db	074h,06fh,072h,061h,067h,065h,020h,063h
	db	06ch,061h,073h,073h,020h,066h,06fh,072h
	db	020h,076h,061h,06ch,075h,065h,020h,025h
	db	073h,000h,000h,000h
D254	db	063h,061h,06eh,06eh
	db	06fh,074h,020h,069h,06eh,066h,065h,072h
	db	020h,074h,079h,070h,065h,020h,066h,06fh
	db	072h,020h,025h,073h,000h,000h,000h,000h
D270	db	06fh,06eh,06ch,079h,020h,06fh,06eh,065h
	db	020h,06fh,072h,020h,074h,077h,06fh,020h
	db	061h,072h,067h,075h,06dh,065h,06eh,074h
	db	073h,020h,066h,06fh,072h,020h,061h,072h
	db	072h,061h,079h,020h,066h,06fh,072h,065h
	db	061h,063h,068h,000h
D29C	db	066h,06fh,072h,065h
	db	061h,063h,068h,03ah,020h,076h,061h,06ch
	db	075h,065h,020h,06fh,066h,020h,055h,054h
	db	046h,020h,063h,06fh,06eh,076h,065h,072h
	db	073h,069h,06fh,06eh,020h,063h,061h,06eh
	db	06eh,06fh,074h,020h,062h,065h,020h,072h
	db	065h,066h,000h,000h
D2CC	db	066h,06fh,072h,065h
	db	061h,063h,068h,03ah,020h,06bh,065h,079h
	db	020h,063h,061h,06eh,06eh,06fh,074h,020h
	db	062h,065h,020h,072h,065h,066h,000h,000h
D2E8	db	05fh,05fh,061h,067h,067h,072h,000h,000h
D2F0	db	05fh,05fh,06bh,065h,079h,000h,000h,000h
D2F8	db	06fh,06eh,06ch,079h,020h,06fh,06eh,065h
	db	020h,06fh,072h,020h,074h,077h,06fh,020h
	db	061h,072h,067h,075h,06dh,065h,06eh,074h
	db	073h,020h,066h,06fh,072h,020h,061h,073h
	db	073h,06fh,063h,069h,061h,074h,069h,076h
	db	065h,020h,061h,072h,072h,061h,079h,020h
	db	066h,06fh,072h,065h,061h,063h,068h,000h
D330	db	06eh,06fh,020h,072h,065h,076h,065h,072h
	db	073h,065h,020h,069h,074h,065h,072h,061h
	db	074h,069h,06fh,06eh,020h,06fh,06eh,020h
	db	061h,073h,073h,06fh,063h,069h,061h,074h
	db	069h,076h,065h,020h,061h,072h,072h,061h
	db	079h,073h,000h,000h
D35C	db	05fh,05fh,061h,070h
	db	070h,06ch,079h,041h,072h,067h,000h,000h
D368	db	066h,06fh,072h,065h,061h,063h,068h,03ah
	db	020h,069h,06eh,064h,065h,078h,020h,063h
	db	061h,06eh,06eh,06fh,074h,020h,062h,065h
	db	020h,072h,065h,066h,000h,000h,000h,000h
D388	db	066h,06fh,072h,065h,061h,063h,068h,03ah
	db	020h,069h,06eh,064h,065h,078h,020h,06dh
	db	075h,073h,074h,020h,062h,065h,020h,074h
	db	079h,070h,065h,020h,025h,073h,02ch,020h
	db	06eh,06fh,074h,020h,025h,073h,000h,000h
D3B0	db	066h,06fh,072h,065h,061h,063h,068h,03ah
	db	020h,076h,061h,06ch,075h,065h,020h,06dh
	db	075h,073h,074h,020h,062h,065h,020h,074h
	db	079h,070h,065h,020h,025h,073h,02ch,020h
	db	06eh,06fh,074h,020h,025h,073h,000h,000h
D3D8	db	05fh,061h,061h,041h,070h,070h,06ch,079h
	db	032h,000h,000h,000h
D3E4	db	05fh,061h,061h,041h
	db	070h,070h,06ch,079h,000h,000h,000h,000h
D3F0	db	052h,000h,000h,000h
D3F4	db	000h,000h,000h,000h
D3F8	db	05fh,061h,041h,070h,070h,06ch,079h,025h
	db	073h,025h,02eh,02ah,073h,025h,07ah,064h
	db	000h,000h,000h,000h
D40C	db	06ah,020h,03ch,020h
	db	073h,069h,07ah,065h,06fh,066h,028h,066h
	db	064h,06eh,061h,06dh,065h,029h,000h,000h
D420	db	06fh,070h,041h,070h,070h,06ch,079h,028h
	db	029h,020h,066h,075h,06eh,063h,074h,069h
	db	06fh,06eh,020h,066h,06fh,072h,020h,025h
	db	073h,020h,06dh,075h,073h,074h,020h,072h
	db	065h,074h,075h,072h,06eh,020h,061h,06eh
	db	020h,069h,06eh,074h,000h,000h,000h,000h
D450	db	066h,06fh,072h,065h,061h,063h,068h,03ah
	db	020h,025h,073h,020h,069h,073h,020h,06eh
	db	06fh,074h,020h,061h,06eh,020h,061h,067h
	db	067h,072h,065h,067h,061h,074h,065h,020h
	db	074h,079h,070h,065h,000h,000h,000h,000h
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[06B1h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[06B1h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[0ED5h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[01C96h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[01C96h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[01C96h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[01C96h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[0F11h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[0F11h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[01C96h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[01C96h]
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z[0F11h]
D4A8	db	020h,028h,000h,000h
D4AC	db	02ch,020h,000h,000h
D4B0	db	069h,06eh,06fh,075h,074h,020h,000h,000h
D4B8	db	072h,065h,066h,020h,000h,000h,000h,000h
D4C0	db	03bh,020h,000h,000h
D4C4	db	069h,066h,020h,028h
	db	000h,000h,000h,000h
D4CC	db	061h,075h,074h,06fh
	db	020h,000h,000h,000h
D4D4	db	020h,03dh,020h,000h
D4D8	db	065h,06ch,073h,065h,000h,000h,000h,000h
D4E0	db	025h,02eh,02ah,073h,000h,000h,000h,000h
D4E8	db	025h,073h,000h,000h
D4EC	db	00ah,000h,000h,000h
D4F0	db	070h,072h,061h,067h,06dh,061h,028h,06ch
	db	069h,062h,029h,020h,06eh,06fh,074h,020h
	db	061h,06ch,06ch,06fh,077h,065h,064h,020h
	db	061h,073h,020h,073h,074h,061h,074h,065h
	db	06dh,065h,06eh,074h,000h,000h,000h,000h
D518	db	075h,06eh,072h,065h,063h,06fh,067h,06eh
	db	069h,07ah,065h,064h,020h,070h,072h,061h
	db	067h,06dh,061h,028h,025h,073h,029h,000h
D530	db	070h,072h,061h,067h,06dh,061h,020h,028h
	db	000h,000h,000h,000h
D53C	db	073h,074h,061h,074h
	db	065h,06dh,065h,06eh,074h,02eh,063h,000h
D548	db	021h,063h,061h,073h,065h,073h,000h,000h
D550	db	06eh,06fh,020h,063h,061h,073h,065h,020h
	db	073h,074h,061h,074h,065h,06dh,065h,06eh
	db	074h,020h,066h,06fh,06ch,06ch,06fh,077h
	db	069h,06eh,067h,020h,067h,06fh,074h,06fh
	db	020h,063h,061h,073h,065h,03bh,000h,000h
D578	db	063h,061h,073h,065h,020h,025h,073h,020h
	db	06eh,06fh,074h,020h,066h,06fh,075h,06eh
	db	064h,000h,000h,000h
D58C	db	073h,077h,069h,074h
	db	063h,068h,020h,073h,074h,061h,074h,065h
	db	06dh,065h,06eh,074h,020h,068h,061h,073h
	db	020h,06eh,06fh,020h,064h,065h,066h,061h
	db	075h,06ch,074h,000h
D5AC	db	073h,077h,069h,074h
	db	063h,068h,020h,028h,000h,000h,000h,000h
D5B8	db	063h,061h,073h,065h,020h,06dh,075h,073h
	db	074h,020h,062h,065h,020h,061h,020h,073h
	db	074h,072h,069h,06eh,067h,020h,06fh,072h
	db	020h,061h,06eh,020h,069h,06eh,074h,065h
	db	067h,072h,061h,06ch,020h,063h,06fh,06eh
	db	073h,074h,061h,06eh,074h,02ch,020h,06eh
	db	06fh,074h,020h,025h,073h,000h,000h,000h
D5F0	db	064h,075h,070h,06ch,069h,063h,061h,074h
	db	065h,020h,063h,061h,073h,065h,020h,025h
	db	073h,020h,069h,06eh,020h,073h,077h,069h
	db	074h,063h,068h,020h,073h,074h,061h,074h
	db	065h,06dh,065h,06eh,074h,000h,000h,000h
D618	db	063h,061h,073h,065h,020h,06eh,06fh,074h
	db	020h,069h,06eh,020h,073h,077h,069h,074h
	db	063h,068h,020h,073h,074h,061h,074h,065h
	db	06dh,065h,06eh,074h,000h,000h,000h,000h
D638	db	063h,061h,073h,065h,020h,000h,000h,000h
D640	db	073h,077h,069h,074h,063h,068h,020h,073h
	db	074h,061h,074h,065h,06dh,065h,06eh,074h
	db	020h,061h,06ch,072h,065h,061h,064h,079h
	db	020h,068h,061h,073h,020h,061h,020h,064h
	db	065h,066h,061h,075h,06ch,074h,000h,000h
D668	db	064h,065h,066h,061h,075h,06ch,074h,020h
	db	06eh,06fh,074h,020h,069h,06eh,020h,073h
	db	077h,069h,074h,063h,068h,020h,073h,074h
	db	061h,074h,065h,06dh,065h,06eh,074h,000h
D688	db	064h,065h,066h,061h,075h,06ch,074h,03ah
	db	00ah,000h,000h,000h
D694	db	067h,06fh,074h,06fh
	db	020h,064h,065h,066h,061h,075h,06ch,074h
	db	020h,06eh,06fh,074h,020h,069h,06eh,020h
	db	073h,077h,069h,074h,063h,068h,020h,073h
	db	074h,061h,074h,065h,06dh,065h,06eh,074h
	db	000h,000h,000h,000h
D6BC	db	067h,06fh,074h,06fh
	db	020h,064h,065h,066h,061h,075h,06ch,074h
	db	03bh,00ah,000h,000h
D6CC	db	067h,06fh,074h,06fh
	db	020h,063h,061h,073h,065h,020h,06eh,06fh
	db	074h,020h,069h,06eh,020h,073h,077h,069h
	db	074h,063h,068h,020h,073h,074h,061h,074h
	db	065h,06dh,065h,06eh,074h,000h,000h,000h
D6F0	db	067h,06fh,074h,06fh,020h,063h,061h,073h
	db	065h,000h,000h,000h
D6FC	db	053h,077h,069h,074h
	db	063h,068h,045h,072h,072h,06fh,072h,053h
	db	074h,061h,074h,065h,06dh,065h,06eh,074h
	db	03ah,03ah,074h,06fh,043h,042h,075h,066h
	db	066h,065h,072h,028h,029h,000h,000h,000h
D720	db	073h,063h,078h,000h
D724	db	072h,065h,074h,075h
	db	072h,06eh,020h,073h,074h,061h,074h,065h
	db	06dh,065h,06eh,074h,073h,020h,063h,061h
	db	06eh,06eh,06fh,074h,020h,062h,065h,020h
	db	069h,06eh,020h,063h,06fh,06eh,074h,072h
	db	061h,063h,074h,073h,000h,000h,000h,000h
D750	db	072h,065h,074h,075h,072h,06eh,020h,073h
	db	074h,061h,074h,065h,06dh,065h,06eh,074h
	db	073h,020h,063h,061h,06eh,06eh,06fh,074h
	db	020h,062h,065h,020h,069h,06eh,020h,066h
	db	069h,06eh,061h,06ch,06ch,079h,02ch,020h
	db	073h,063h,06fh,070h,065h,028h,065h,078h
	db	069h,074h,029h,020h,06fh,072h,020h,073h
	db	063h,06fh,070h,065h,028h,073h,075h,063h
	db	063h,065h,073h,073h,029h,020h,062h,06fh
	db	064h,069h,065h,073h,000h,000h,000h,000h
D7A0	db	063h,061h,06eh,06eh,06fh,074h,020h,072h
	db	065h,074h,075h,072h,06eh,020h,065h,078h
	db	070h,072h,065h,073h,073h,069h,06fh,06eh
	db	020h,066h,072h,06fh,06dh,020h,063h,06fh
	db	06eh,073h,074h,072h,075h,063h,074h,06fh
	db	072h,000h,000h,000h
D7CC	db	06dh,069h,073h,06dh
	db	061h,074h,063h,068h,065h,064h,020h,066h
	db	075h,06eh,063h,074h,069h,06fh,06eh,020h
	db	072h,065h,074h,075h,072h,06eh,020h,074h
	db	079h,070h,065h,020h,069h,06eh,066h,065h
	db	072h,065h,06eh,063h,065h,020h,06fh,066h
	db	020h,025h,073h,020h,061h,06eh,064h,020h
	db	025h,073h,000h,000h
D804	db	06dh,069h,073h,06dh
	db	061h,074h,063h,068h,065h,064h,020h,066h
	db	075h,06eh,063h,074h,069h,06fh,06eh,020h
	db	072h,065h,074h,075h,072h,06eh,020h,074h
	db	079h,070h,065h,020h,069h,06eh,066h,065h
	db	072h,065h,06eh,063h,065h,020h,06fh,066h
	db	020h,076h,06fh,069h,064h,020h,061h,06eh
	db	064h,020h,025h,073h,000h,000h,000h,000h
D840	db	072h,065h,074h,075h,072h,06eh,020h,065h
	db	078h,070h,072h,065h,073h,073h,069h,06fh
	db	06eh,020h,065h,078h,070h,065h,063h,074h
	db	065h,064h,000h,000h
D85C	db	030h,000h,000h,000h
D860	db	066h,064h,02dh,03eh,076h,072h,065h,073h
	db	075h,06ch,074h,000h
D86C	db	072h,065h,074h,075h
	db	072h,06eh,020h,077h,069h,074h,068h,06fh
	db	075h,074h,020h,063h,061h,06ch,06ch,069h
	db	06eh,067h,020h,063h,06fh,06eh,073h,074h
	db	072h,075h,063h,074h,06fh,072h,000h,000h
D890	db	072h,065h,074h,075h,072h,06eh,020h,000h
D898	db	06ch,061h,062h,065h,06ch,020h,027h,025h
	db	073h,027h,020h,068h,061h,073h,020h,06eh
	db	06fh,020h,062h,072h,065h,061h,06bh,000h
D8B0	db	063h,061h,06eh,06eh,06fh,074h,020h,062h
	db	072h,065h,061h,06bh,020h,06fh,075h,074h
	db	020h,06fh,066h,020h,066h,069h,06eh,061h
	db	06ch,06ch,079h,020h,062h,06ch,06fh,063h
	db	06bh,000h,000h,000h
D8D4	db	065h,06eh,063h,06ch
	db	06fh,073h,069h,06eh,067h,020h,06ch,061h
	db	062h,065h,06ch,020h,027h,025h,073h,027h
	db	020h,066h,06fh,072h,020h,062h,072h,065h
	db	061h,06bh,020h,06eh,06fh,074h,020h,066h
	db	06fh,075h,06eh,064h,000h,000h,000h,000h
D900	db	062h,072h,065h,061h,06bh,020h,069h,073h
	db	020h,06eh,06fh,074h,020h,069h,06eh,073h
	db	069h,064h,065h,020h,061h,020h,06ch,06fh
	db	06fh,070h,020h,06fh,072h,020h,073h,077h
	db	069h,074h,063h,068h,000h,000h,000h,000h
D928	db	062h,072h,065h,061h,06bh,000h,000h,000h
D930	db	06ch,061h,062h,065h,06ch,020h,027h,025h
	db	073h,027h,020h,068h,061h,073h,020h,06eh
	db	06fh,020h,063h,06fh,06eh,074h,069h,06eh
	db	075h,065h,000h,000h
D94C	db	063h,061h,06eh,06eh
	db	06fh,074h,020h,063h,06fh,06eh,074h,069h
	db	06eh,075h,065h,020h,06fh,075h,074h,020h
	db	06fh,066h,020h,066h,069h,06eh,061h,06ch
	db	06ch,079h,020h,062h,06ch,06fh,063h,06bh
	db	000h,000h,000h,000h
D974	db	065h,06eh,063h,06ch
	db	06fh,073h,069h,06eh,067h,020h,06ch,061h
	db	062h,065h,06ch,020h,027h,025h,073h,027h
	db	020h,066h,06fh,072h,020h,063h,06fh,06eh
	db	074h,069h,06eh,075h,065h,020h,06eh,06fh
	db	074h,020h,066h,06fh,075h,06eh,064h,000h
D9A0	db	063h,06fh,06eh,074h,069h,06eh,075h,065h
	db	020h,069h,073h,020h,06eh,06fh,074h,020h
	db	069h,06eh,073h,069h,064h,065h,020h,061h
	db	020h,06ch,06fh,06fh,070h,000h,000h,000h
D9C0	db	063h,06fh,06eh,074h,069h,06eh,075h,065h
	db	000h,000h,000h,000h
D9CC	db	063h,061h,06eh,020h
	db	06fh,06eh,06ch,079h,020h,073h,079h,06eh
	db	063h,068h,072h,06fh,06eh,069h,07ah,065h
	db	020h,06fh,06eh,020h,063h,06ch,061h,073h
	db	073h,020h,06fh,062h,06ah,065h,063h,074h
	db	073h,02ch,020h,06eh,06fh,074h,020h,027h
	db	025h,073h,027h,000h
D9FC	db	05fh,05fh,073h,079h
	db	06eh,063h,000h,000h
DA04	db	05fh,05fh,063h,072h
	db	069h,074h,073h,065h,063h,000h,000h,000h
DA10	db	073h,079h,06eh,063h,068h,072h,06fh,06eh
	db	069h,07ah,065h,064h,000h,000h,000h,000h
DA20	db	077h,069h,074h,068h,020h,074h,079h,070h
	db	065h,020h,025h,073h,020h,068h,061h,073h
	db	020h,06eh,06fh,020h,06dh,065h,06dh,062h
	db	065h,072h,073h,000h
DA3C	db	073h,074h,061h,074h
	db	065h,06dh,065h,06eh,074h,02eh,063h,000h
DA48	db	074h,000h,000h,000h
DA4C	db	077h,069h,074h,068h
	db	020h,065h,078h,070h,072h,065h,073h,073h
	db	069h,06fh,06eh,073h,020h,06dh,075h,073h
	db	074h,020h,062h,065h,020h,063h,06ch,061h
	db	073h,073h,020h,06fh,062h,06ah,065h,063h
	db	074h,073h,02ch,020h,06eh,06fh,074h,020h
	db	027h,025h,073h,027h,000h,000h,000h,000h
DA80	db	077h,069h,074h,068h,020h,028h,000h,000h
DA88	db	029h,00ah,000h,000h
DA8C	db	063h,061h,074h,063h
	db	068h,020h,061h,074h,020h,025h,073h,020h
	db	068h,069h,064h,065h,073h,020h,063h,061h
	db	074h,063h,068h,020h,061h,074h,020h,025h
	db	073h,000h,000h,000h
DAAC	db	062h,06fh,064h,079h
	db	000h,000h,000h,000h
DAB4	db	074h,072h,079h,000h
DAB8	db	063h,061h,06eh,06eh,06fh,074h,020h,070h
	db	075h,074h,020h,063h,061h,074h,063h,068h
	db	020h,073h,074h,061h,074h,065h,06dh,065h
	db	06eh,074h,020h,069h,06eh,073h,069h,064h
	db	065h,020h,066h,069h,06eh,061h,06ch,06ch
	db	079h,020h,062h,06ch,06fh,063h,06bh,000h
DAE8	db	063h,061h,06eh,020h,06fh,06eh,06ch,079h
	db	020h,063h,061h,074h,063h,068h,020h,063h
	db	06ch,061h,073h,073h,020h,06fh,062h,06ah
	db	065h,063h,074h,073h,02ch,020h,06eh,06fh
	db	074h,020h,027h,025h,073h,027h,000h,000h
DB10	db	063h,061h,074h,063h,068h,000h,000h,000h
DB18	db	074h,072h,079h,00ah,07bh,00ah,000h,000h
DB20	db	07dh,00ah,066h,069h,06eh,061h,06ch,06ch
	db	079h,00ah,07bh,00ah,000h,000h,000h,000h
DB30	db	05fh,05fh,06fh,073h,000h,000h,000h,000h
DB38	db	030h,000h,000h,000h
DB3C	db	054h,068h,072h,06fh
	db	077h,020h,073h,074h,061h,074h,065h,06dh
	db	065h,06eh,074h,073h,020h,063h,061h,06eh
	db	06eh,06fh,074h,020h,062h,065h,020h,069h
	db	06eh,020h,063h,06fh,06eh,074h,072h,061h
	db	063h,074h,073h,000h
DB64	db	063h,061h,06eh,020h
	db	06fh,06eh,06ch,079h,020h,074h,068h,072h
	db	06fh,077h,020h,063h,06ch,061h,073h,073h
	db	020h,06fh,062h,06ah,065h,063h,074h,073h
	db	02ch,020h,06eh,06fh,074h,020h,074h,079h
	db	070h,065h,020h,025h,073h,000h,000h,000h
DB90	db	074h,068h,072h,06fh,077h,020h,000h,000h
DB98	db	076h,06fh,06ch,061h,074h,069h,06ch,065h
	db	000h,000h,000h,000h
DBA4	db	063h,061h,06eh,06eh
	db	06fh,074h,020h,067h,06fh,074h,06fh,020h
	db	069h,06eh,020h,06fh,072h,020h,06fh,075h
	db	074h,020h,06fh,066h,020h,066h,069h,06eh
	db	061h,06ch,06ch,079h,020h,062h,06ch,06fh
	db	063h,06bh,000h,000h
DBCC	db	067h,06fh,074h,06fh
	db	020h,000h,000h,000h
DBD4	db	04ch,061h,062h,065h
	db	06ch,020h,027h,025h,073h,027h,020h,061h
	db	06ch,072h,065h,061h,064h,079h,020h,064h
	db	065h,066h,069h,06eh,065h,064h,000h,000h
DBF0	db	061h,073h,06dh,020h,07bh,020h,000h,000h
DBF8	db	03bh,020h,07dh,000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
??_7Object@@6B@	comdat
	dd	offset FLAT:??_GObject@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Object@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7Object@@6B@	ends
??_7Statement@@6B@	comdat
	dd	offset FLAT:??_GStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@Statement@@UAEPAU1@XZ
	dd	offset FLAT:?toCBuffer@Statement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@Statement@@UAEPAU1@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@Statement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@Statement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7Statement@@6B@	ends
??_GObject@@UAEPAXI@Z	comdat
	assume	CS:??_GObject@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L20
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L20
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L20:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GObject@@UAEPAXI@Z	ends
??_GStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L26
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L26
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L26:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GStatement@@UAEPAXI@Z	ends
?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ	comdat
	assume	CS:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ	ends
?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ	comdat
	assume	CS:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ	ends
?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ	comdat
	assume	CS:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ	ends
?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ	comdat
	assume	CS:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ	ends
?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ	comdat
	assume	CS:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ	ends
?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ	comdat
	assume	CS:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ	ends
?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ	comdat
	assume	CS:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ	ends
?isIfStatement@Statement@@UAEPAUIfStatement@@XZ	comdat
	assume	CS:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isIfStatement@Statement@@UAEPAUIfStatement@@XZ	ends
??_7PeelStatement@@6B@	comdat
	dd	offset FLAT:??_GPeelStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@Statement@@UAEPAU1@XZ
	dd	offset FLAT:?toCBuffer@Statement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@PeelStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@Statement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@Statement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7PeelStatement@@6B@	ends
??_GPeelStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GPeelStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7PeelStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GPeelStatement@@UAEPAXI@Z	ends
??_7ExpStatement@@6B@	comdat
	dd	offset FLAT:??_GExpStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ExpStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ExpStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ExpStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@ExpStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@ExpStatement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ExpStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@ExpStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@ExpStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ExpStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ExpStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ExpStatement@@6B@	ends
??_GExpStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GExpStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ExpStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GExpStatement@@UAEPAXI@Z	ends
??_7CompileStatement@@6B@	comdat
	dd	offset FLAT:??_GCompileStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@CompileStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@CompileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@CompileStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@Statement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@CompileStatement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@Statement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7CompileStatement@@6B@	ends
??_GCompileStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GCompileStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7CompileStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GCompileStatement@@UAEPAXI@Z	ends
??_7Statements@@6B@	comdat
	dd	offset FLAT:??_GStatements@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Array@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7Statements@@6B@	ends
??_GStatements@@UAEPAXI@Z	comdat
	assume	CS:??_GStatements@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L25
		mov	dword ptr [EBX],offset FLAT:??_7Statements@@6B@
		call	near ptr ??1Array@@UAE@XZ
		test	dword ptr 8[ESP],1
		je	L25
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L25:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GStatements@@UAEPAXI@Z	ends
??_7DeclarationStatement@@6B@	comdat
	dd	offset FLAT:??_GDeclarationStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@DeclarationStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@DeclarationStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ExpStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@ExpStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@ExpStatement@@UAEHXZ
	dd	offset FLAT:?scopeCode@DeclarationStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ExpStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@ExpStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@ExpStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ExpStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ExpStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@DeclarationStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7DeclarationStatement@@6B@	ends
??_GDeclarationStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GDeclarationStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L32
		mov	dword ptr [EBX],offset FLAT:??_7DeclarationStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7ExpStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L32
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L32:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GDeclarationStatement@@UAEPAXI@Z	ends
?isDeclarationStatement@DeclarationStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isDeclarationStatement@DeclarationStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isDeclarationStatement@DeclarationStatement@@UAEPAU1@XZ	ends
??_7CompoundStatement@@6B@	comdat
	dd	offset FLAT:??_GCompoundStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@CompoundStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@CompoundStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@CompoundStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@CompoundStatement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@CompoundStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@CompoundStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@CompoundStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@CompoundStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@CompoundStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isReturnStatement@CompoundStatement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7CompoundStatement@@6B@	ends
??_GCompoundStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GCompoundStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7CompoundStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GCompoundStatement@@UAEPAXI@Z	ends
?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ	ends
??_7CompoundDeclarationStatement@@6B@	comdat
	dd	offset FLAT:??_GCompoundDeclarationStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@CompoundDeclarationStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@CompoundDeclarationStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@CompoundStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@CompoundStatement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@CompoundStatement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@CompoundStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@CompoundStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@CompoundStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@CompoundStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@CompoundStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@CompoundStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isReturnStatement@CompoundStatement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7CompoundDeclarationStatement@@6B@	ends
??_GCompoundDeclarationStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GCompoundDeclarationStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L32
		mov	dword ptr [EBX],offset FLAT:??_7CompoundDeclarationStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7CompoundStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L32
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L32:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GCompoundDeclarationStatement@@UAEPAXI@Z	ends
??_7UnrolledLoopStatement@@6B@	comdat
	dd	offset FLAT:??_GUnrolledLoopStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@UnrolledLoopStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@UnrolledLoopStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@UnrolledLoopStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@UnrolledLoopStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@UnrolledLoopStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@UnrolledLoopStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@UnrolledLoopStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@UnrolledLoopStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@UnrolledLoopStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@UnrolledLoopStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@UnrolledLoopStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@UnrolledLoopStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@UnrolledLoopStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7UnrolledLoopStatement@@6B@	ends
??_GUnrolledLoopStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GUnrolledLoopStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7UnrolledLoopStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GUnrolledLoopStatement@@UAEPAXI@Z	ends
??_7ScopeStatement@@6B@	comdat
	dd	offset FLAT:??_GScopeStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ScopeStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ScopeStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@ScopeStatement@@UAEPAU1@XZ
	dd	offset FLAT:?semantic@ScopeStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@ScopeStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@ScopeStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@ScopeStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@ScopeStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@ScopeStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@ScopeStatement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ScopeStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ScopeStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ScopeStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ScopeStatement@@6B@	ends
??_GScopeStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GScopeStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ScopeStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GScopeStatement@@UAEPAXI@Z	ends
?isScopeStatement@ScopeStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isScopeStatement@ScopeStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isScopeStatement@ScopeStatement@@UAEPAU1@XZ	ends
??_7WhileStatement@@6B@	comdat
	dd	offset FLAT:??_GWhileStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@WhileStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@WhileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@WhileStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@WhileStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@WhileStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@WhileStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@WhileStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@WhileStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@WhileStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@WhileStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@WhileStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7WhileStatement@@6B@	ends
??_GWhileStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GWhileStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7WhileStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GWhileStatement@@UAEPAXI@Z	ends
??_7DoStatement@@6B@	comdat
	dd	offset FLAT:??_GDoStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@DoStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@DoStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@DoStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@DoStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@DoStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@DoStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@DoStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@DoStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@DoStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@DoStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@DoStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7DoStatement@@6B@	ends
??_GDoStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GDoStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7DoStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GDoStatement@@UAEPAXI@Z	ends
??_7ForStatement@@6B@	comdat
	dd	offset FLAT:??_GForStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ForStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ForStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ForStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@ForStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@ForStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@ForStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@ForStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@ForStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@ForStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ForStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ForStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ForStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ForStatement@@6B@	ends
??_GForStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GForStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ForStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GForStatement@@UAEPAXI@Z	ends
??_7ForeachStatement@@6B@	comdat
	dd	offset FLAT:??_GForeachStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ForeachStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ForeachStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ForeachStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@ForeachStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@ForeachStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@ForeachStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@ForeachStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@ForeachStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ForeachStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ForeachStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ForeachStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ForeachStatement@@6B@	ends
??_GForeachStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GForeachStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ForeachStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GForeachStatement@@UAEPAXI@Z	ends
??_7Parameters@@6B@	comdat
	dd	offset FLAT:??_GParameters@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Array@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7Parameters@@6B@	ends
??_7Expressions@@6B@	comdat
	dd	offset FLAT:??_GExpressions@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Array@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7Expressions@@6B@	ends
??_GParameters@@UAEPAXI@Z	comdat
	assume	CS:??_GParameters@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L25
		mov	dword ptr [EBX],offset FLAT:??_7Parameters@@6B@
		call	near ptr ??1Array@@UAE@XZ
		test	dword ptr 8[ESP],1
		je	L25
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L25:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GParameters@@UAEPAXI@Z	ends
??_GExpressions@@UAEPAXI@Z	comdat
	assume	CS:??_GExpressions@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L25
		mov	dword ptr [EBX],offset FLAT:??_7Expressions@@6B@
		call	near ptr ??1Array@@UAE@XZ
		test	dword ptr 8[ESP],1
		je	L25
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L25:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GExpressions@@UAEPAXI@Z	ends
??_7IfStatement@@6B@	comdat
	dd	offset FLAT:??_GIfStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@IfStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@IfStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@IfStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@IfStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@IfStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@IfStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@IfStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@IfStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@IfStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@IfStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@IfStatement@@UAEPAU1@XZ
??_7IfStatement@@6B@	ends
??_GIfStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GIfStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7IfStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GIfStatement@@UAEPAXI@Z	ends
?isIfStatement@IfStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isIfStatement@IfStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isIfStatement@IfStatement@@UAEPAU1@XZ	ends
??_7ConditionalStatement@@6B@	comdat
	dd	offset FLAT:??_GConditionalStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ConditionalStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ConditionalStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ConditionalStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@ConditionalStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@ConditionalStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@ConditionalStatement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@Statement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ConditionalStatement@@6B@	ends
??_GConditionalStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GConditionalStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ConditionalStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GConditionalStatement@@UAEPAXI@Z	ends
??_7PragmaStatement@@6B@	comdat
	dd	offset FLAT:??_GPragmaStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@PragmaStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@PragmaStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@PragmaStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@PragmaStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@PragmaStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@Statement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7PragmaStatement@@6B@	ends
??_GPragmaStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GPragmaStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7PragmaStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GPragmaStatement@@UAEPAXI@Z	ends
??_7StaticAssertStatement@@6B@	comdat
	dd	offset FLAT:??_GStaticAssertStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@StaticAssertStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@StaticAssertStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@StaticAssertStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@StaticAssertStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@Statement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7StaticAssertStatement@@6B@	ends
??_GStaticAssertStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GStaticAssertStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7StaticAssertStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GStaticAssertStatement@@UAEPAXI@Z	ends
??_7SwitchStatement@@6B@	comdat
	dd	offset FLAT:??_GSwitchStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@SwitchStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@SwitchStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@SwitchStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@SwitchStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@SwitchStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@SwitchStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@SwitchStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@SwitchStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@SwitchStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7SwitchStatement@@6B@	ends
??_GSwitchStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GSwitchStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L34
		lea	ECX,01Ch[EBX]
		mov	dword ptr [EBX],offset FLAT:??_7SwitchStatement@@6B@
		call	near ptr ??1Array@@UAE@XZ
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L34
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L34:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GSwitchStatement@@UAEPAXI@Z	ends
??_7CaseStatement@@6B@	comdat
	dd	offset FLAT:??_GCaseStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@CaseStatement@@UAEHPAUObject@@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@CaseStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@CaseStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@CaseStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@CaseStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@CaseStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@CaseStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@CaseStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@CaseStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@CaseStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7CaseStatement@@6B@	ends
??_GCaseStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GCaseStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7CaseStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GCaseStatement@@UAEPAXI@Z	ends
??_7DefaultStatement@@6B@	comdat
	dd	offset FLAT:??_GDefaultStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@DefaultStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@DefaultStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@DefaultStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@DefaultStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@DefaultStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@DefaultStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@DefaultStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@DefaultStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@DefaultStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7DefaultStatement@@6B@	ends
??_GDefaultStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GDefaultStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7DefaultStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GDefaultStatement@@UAEPAXI@Z	ends
??_7GotoDefaultStatement@@6B@	comdat
	dd	offset FLAT:??_GGotoDefaultStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@GotoDefaultStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@GotoDefaultStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@GotoDefaultStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@GotoDefaultStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@GotoDefaultStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@GotoDefaultStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7GotoDefaultStatement@@6B@	ends
??_GGotoDefaultStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GGotoDefaultStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7GotoDefaultStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GGotoDefaultStatement@@UAEPAXI@Z	ends
??_7GotoCaseStatement@@6B@	comdat
	dd	offset FLAT:??_GGotoCaseStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@GotoCaseStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@GotoCaseStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@GotoCaseStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@GotoCaseStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@GotoCaseStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@GotoCaseStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7GotoCaseStatement@@6B@	ends
??_GGotoCaseStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GGotoCaseStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7GotoCaseStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GGotoCaseStatement@@UAEPAXI@Z	ends
??_7SwitchErrorStatement@@6B@	comdat
	dd	offset FLAT:??_GSwitchErrorStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@Statement@@UAEPAU1@XZ
	dd	offset FLAT:?toCBuffer@SwitchErrorStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@Statement@@UAEPAU1@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@SwitchErrorStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@SwitchErrorStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7SwitchErrorStatement@@6B@	ends
??_GSwitchErrorStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GSwitchErrorStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7SwitchErrorStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GSwitchErrorStatement@@UAEPAXI@Z	ends
??_7ReturnStatement@@6B@	comdat
	dd	offset FLAT:??_GReturnStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ReturnStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ReturnStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ReturnStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@ReturnStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ReturnStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@ReturnStatement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@ReturnStatement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ReturnStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ReturnStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@ReturnStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ReturnStatement@@6B@	ends
??_GReturnStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GReturnStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ReturnStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GReturnStatement@@UAEPAXI@Z	ends
?isReturnStatement@ReturnStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isReturnStatement@ReturnStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isReturnStatement@ReturnStatement@@UAEPAU1@XZ	ends
??_7BreakStatement@@6B@	comdat
	dd	offset FLAT:??_GBreakStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@BreakStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@BreakStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@BreakStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@BreakStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@BreakStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@BreakStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7BreakStatement@@6B@	ends
??_GBreakStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GBreakStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7BreakStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GBreakStatement@@UAEPAXI@Z	ends
??_7ContinueStatement@@6B@	comdat
	dd	offset FLAT:??_GContinueStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ContinueStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ContinueStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ContinueStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@ContinueStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ContinueStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ContinueStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ContinueStatement@@6B@	ends
??_GContinueStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GContinueStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ContinueStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GContinueStatement@@UAEPAXI@Z	ends
??_7SynchronizedStatement@@6B@	comdat
	dd	offset FLAT:??_GSynchronizedStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@SynchronizedStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@SynchronizedStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@SynchronizedStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@SynchronizedStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@SynchronizedStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@SynchronizedStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@SynchronizedStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@SynchronizedStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@SynchronizedStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7SynchronizedStatement@@6B@	ends
??_GSynchronizedStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GSynchronizedStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7SynchronizedStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GSynchronizedStatement@@UAEPAXI@Z	ends
??_7WithStatement@@6B@	comdat
	dd	offset FLAT:??_GWithStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@WithStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@WithStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@WithStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@WithStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@WithStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@WithStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@WithStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@WithStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7WithStatement@@6B@	ends
??_GWithStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GWithStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7WithStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GWithStatement@@UAEPAXI@Z	ends
??_7TryCatchStatement@@6B@	comdat
	dd	offset FLAT:??_GTryCatchStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@TryCatchStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@TryCatchStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@TryCatchStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@TryCatchStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@TryCatchStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@TryCatchStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@TryCatchStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@TryCatchStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@TryCatchStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@TryCatchStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7TryCatchStatement@@6B@	ends
??_GTryCatchStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GTryCatchStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7TryCatchStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GTryCatchStatement@@UAEPAXI@Z	ends
?isTryCatchStatement@TryCatchStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isTryCatchStatement@TryCatchStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isTryCatchStatement@TryCatchStatement@@UAEPAU1@XZ	ends
??_7Catch@@6B@	comdat
	dd	offset FLAT:??_GCatch@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Object@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7Catch@@6B@	ends
??_GCatch@@UAEPAXI@Z	comdat
	assume	CS:??_GCatch@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L26
		mov	dword ptr [EBX],offset FLAT:??_7Catch@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L26
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L26:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GCatch@@UAEPAXI@Z	ends
??_7TryFinallyStatement@@6B@	comdat
	dd	offset FLAT:??_GTryFinallyStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@TryFinallyStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@TryFinallyStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@TryFinallyStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@TryFinallyStatement@@UAEHXZ
	dd	offset FLAT:?hasContinue@TryFinallyStatement@@UAEHXZ
	dd	offset FLAT:?usesEH@TryFinallyStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@TryFinallyStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@TryFinallyStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@TryFinallyStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@TryFinallyStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7TryFinallyStatement@@6B@	ends
??_GTryFinallyStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GTryFinallyStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7TryFinallyStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GTryFinallyStatement@@UAEPAXI@Z	ends
??_7OnScopeStatement@@6B@	comdat
	dd	offset FLAT:??_GOnScopeStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@OnScopeStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@OnScopeStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@OnScopeStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@OnScopeStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@OnScopeStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@OnScopeStatement@@UAEXPAUScope@@PAPAUStatement@@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@OnScopeStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@OnScopeStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7OnScopeStatement@@6B@	ends
??_GOnScopeStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GOnScopeStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7OnScopeStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GOnScopeStatement@@UAEPAXI@Z	ends
??_7ThrowStatement@@6B@	comdat
	dd	offset FLAT:??_GThrowStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@ThrowStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@ThrowStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@ThrowStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@ThrowStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@ThrowStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@ThrowStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@ThrowStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7ThrowStatement@@6B@	ends
??_GThrowStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GThrowStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7ThrowStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GThrowStatement@@UAEPAXI@Z	ends
??_7VolatileStatement@@6B@	comdat
	dd	offset FLAT:??_GVolatileStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@VolatileStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@VolatileStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@VolatileStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@VolatileStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@VolatileStatement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@Statement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@VolatileStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@VolatileStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7VolatileStatement@@6B@	ends
??_GVolatileStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GVolatileStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7VolatileStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GVolatileStatement@@UAEPAXI@Z	ends
??_7GotoStatement@@6B@	comdat
	dd	offset FLAT:??_GGotoStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@GotoStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@GotoStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@GotoStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@GotoStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@GotoStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@Statement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@GotoStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@GotoStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7GotoStatement@@6B@	ends
??_GGotoStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GGotoStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7GotoStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GGotoStatement@@UAEPAXI@Z	ends
?isGotoStatement@GotoStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isGotoStatement@GotoStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isGotoStatement@GotoStatement@@UAEPAU1@XZ	ends
??_7LabelStatement@@6B@	comdat
	dd	offset FLAT:??_GLabelStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@LabelStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@LabelStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@Statement@@UAEPAUAsmStatement@@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@LabelStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@LabelStatement@@UAEHXZ
	dd	offset FLAT:?blockExit@LabelStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@LabelStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@LabelStatement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@LabelStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@LabelStatement@@UAEPAUStatement@@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@LabelStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7LabelStatement@@6B@	ends
??_GLabelStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GLabelStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7LabelStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GLabelStatement@@UAEPAXI@Z	ends
??_7LabelDsymbol@@6B@	comdat
	dd	offset FLAT:??_GLabelDsymbol@@UAEPAXI@Z
	dd	offset FLAT:?equals@Dsymbol@@UAEHPAUObject@@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Dsymbol@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Dsymbol@@UAEHXZ
	dd	offset FLAT:?toPrettyChars@Dsymbol@@UAEPBDXZ
	dd	offset FLAT:?kind@Dsymbol@@UAEPBDXZ
	dd	offset FLAT:?toAlias@Dsymbol@@UAEPAU1@XZ
	dd	offset FLAT:?addMember@Dsymbol@@UAEHPAUScope@@PAUScopeDsymbol@@H@Z
	dd	offset FLAT:?setScope@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?importAll@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic0@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic2@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic3@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?inlineScan@Dsymbol@@UAEXXZ
	dd	offset FLAT:?search@Dsymbol@@UAEPAU1@ULoc@@PAUIdentifier@@H@Z
	dd	offset FLAT:?overloadInsert@Dsymbol@@UAEHPAU1@@Z
	dd	offset FLAT:?toHBuffer@Dsymbol@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?toCBuffer@Dsymbol@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?toDocBuffer@Dsymbol@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?toJsonBuffer@Dsymbol@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?size@Dsymbol@@UAEIULoc@@@Z
	dd	offset FLAT:?isforwardRef@Dsymbol@@UAEHXZ
	dd	offset FLAT:?defineRef@Dsymbol@@UAEXPAU1@@Z
	dd	offset FLAT:?isThis@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	dd	offset FLAT:?isClassMember@Dsymbol@@UAEPAUClassDeclaration@@XZ
	dd	offset FLAT:?isExport@Dsymbol@@UAEHXZ
	dd	offset FLAT:?isImportedSymbol@Dsymbol@@UAEHXZ
	dd	offset FLAT:?isDeprecated@Dsymbol@@UAEHXZ
	dd	offset FLAT:?isLabel@LabelDsymbol@@UAEPAU1@XZ
	dd	offset FLAT:?isMember@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	dd	offset FLAT:?getType@Dsymbol@@UAEPAUType@@XZ
	dd	offset FLAT:?mangle@Dsymbol@@UAEPADXZ
	dd	offset FLAT:?needThis@Dsymbol@@UAEHXZ
	dd	offset FLAT:?prot@Dsymbol@@UAE?AW4PROT@@XZ
	dd	offset FLAT:?syntaxCopy@Dsymbol@@UAEPAU1@PAU1@@Z
	dd	offset FLAT:?oneMember@Dsymbol@@UAEHPAPAU1@@Z
	dd	offset FLAT:?hasPointers@Dsymbol@@UAEHXZ
	dd	offset FLAT:?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z
	dd	offset FLAT:?checkCtorConstInit@Dsymbol@@UAEXXZ
	dd	offset FLAT:?addComment@Dsymbol@@UAEXPAE@Z
	dd	offset FLAT:?emitComment@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?toSymbol@Dsymbol@@UAEPAUSymbol@@XZ
	dd	offset FLAT:?toObjFile@Dsymbol@@UAEXH@Z
	dd	offset FLAT:?cvMember@Dsymbol@@UAEHPAE@Z
	dd	offset FLAT:?isPackage@Dsymbol@@UAEPAUPackage@@XZ
	dd	offset FLAT:?isModule@Dsymbol@@UAEPAUModule@@XZ
	dd	offset FLAT:?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ
	dd	offset FLAT:?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ
	dd	offset FLAT:?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ
	dd	offset FLAT:?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ
	dd	offset FLAT:?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ
	dd	offset FLAT:?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ
	dd	offset FLAT:?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ
	dd	offset FLAT:?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ
	dd	offset FLAT:?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ
	dd	offset FLAT:?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	dd	offset FLAT:?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ
	dd	offset FLAT:?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ
	dd	offset FLAT:?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ
	dd	offset FLAT:?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ
	dd	offset FLAT:?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ
	dd	offset FLAT:?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ
	dd	offset FLAT:?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ
	dd	offset FLAT:?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ
	dd	offset FLAT:?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ
	dd	offset FLAT:?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ
	dd	offset FLAT:?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ
	dd	offset FLAT:?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ
	dd	offset FLAT:?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ
	dd	offset FLAT:?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ
	dd	offset FLAT:?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ
	dd	offset FLAT:?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ
	dd	offset FLAT:?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ
	dd	offset FLAT:?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ
	dd	offset FLAT:?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ
	dd	offset FLAT:?isImport@Dsymbol@@UAEPAUImport@@XZ
	dd	offset FLAT:?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ
	dd	offset FLAT:?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ
	dd	offset FLAT:?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ
	dd	offset FLAT:?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ
	dd	offset FLAT:?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ
??_7LabelDsymbol@@6B@	ends
??_7Dsymbol@@6B@	comdat
	dd	offset FLAT:??_GDsymbol@@UAEPAXI@Z
	dd	offset FLAT:?equals@Dsymbol@@UAEHPAUObject@@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Dsymbol@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Dsymbol@@UAEHXZ
	dd	offset FLAT:?toPrettyChars@Dsymbol@@UAEPBDXZ
	dd	offset FLAT:?kind@Dsymbol@@UAEPBDXZ
	dd	offset FLAT:?toAlias@Dsymbol@@UAEPAU1@XZ
	dd	offset FLAT:?addMember@Dsymbol@@UAEHPAUScope@@PAUScopeDsymbol@@H@Z
	dd	offset FLAT:?setScope@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?importAll@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic0@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic2@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?semantic3@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?inlineScan@Dsymbol@@UAEXXZ
	dd	offset FLAT:?search@Dsymbol@@UAEPAU1@ULoc@@PAUIdentifier@@H@Z
	dd	offset FLAT:?overloadInsert@Dsymbol@@UAEHPAU1@@Z
	dd	offset FLAT:?toHBuffer@Dsymbol@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?toCBuffer@Dsymbol@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?toDocBuffer@Dsymbol@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?toJsonBuffer@Dsymbol@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?size@Dsymbol@@UAEIULoc@@@Z
	dd	offset FLAT:?isforwardRef@Dsymbol@@UAEHXZ
	dd	offset FLAT:?defineRef@Dsymbol@@UAEXPAU1@@Z
	dd	offset FLAT:?isThis@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	dd	offset FLAT:?isClassMember@Dsymbol@@UAEPAUClassDeclaration@@XZ
	dd	offset FLAT:?isExport@Dsymbol@@UAEHXZ
	dd	offset FLAT:?isImportedSymbol@Dsymbol@@UAEHXZ
	dd	offset FLAT:?isDeprecated@Dsymbol@@UAEHXZ
	dd	offset FLAT:?isLabel@Dsymbol@@UAEPAULabelDsymbol@@XZ
	dd	offset FLAT:?isMember@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	dd	offset FLAT:?getType@Dsymbol@@UAEPAUType@@XZ
	dd	offset FLAT:?mangle@Dsymbol@@UAEPADXZ
	dd	offset FLAT:?needThis@Dsymbol@@UAEHXZ
	dd	offset FLAT:?prot@Dsymbol@@UAE?AW4PROT@@XZ
	dd	offset FLAT:?syntaxCopy@Dsymbol@@UAEPAU1@PAU1@@Z
	dd	offset FLAT:?oneMember@Dsymbol@@UAEHPAPAU1@@Z
	dd	offset FLAT:?hasPointers@Dsymbol@@UAEHXZ
	dd	offset FLAT:?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z
	dd	offset FLAT:?checkCtorConstInit@Dsymbol@@UAEXXZ
	dd	offset FLAT:?addComment@Dsymbol@@UAEXPAE@Z
	dd	offset FLAT:?emitComment@Dsymbol@@UAEXPAUScope@@@Z
	dd	offset FLAT:?toSymbol@Dsymbol@@UAEPAUSymbol@@XZ
	dd	offset FLAT:?toObjFile@Dsymbol@@UAEXH@Z
	dd	offset FLAT:?cvMember@Dsymbol@@UAEHPAE@Z
	dd	offset FLAT:?isPackage@Dsymbol@@UAEPAUPackage@@XZ
	dd	offset FLAT:?isModule@Dsymbol@@UAEPAUModule@@XZ
	dd	offset FLAT:?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ
	dd	offset FLAT:?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ
	dd	offset FLAT:?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ
	dd	offset FLAT:?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ
	dd	offset FLAT:?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ
	dd	offset FLAT:?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ
	dd	offset FLAT:?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ
	dd	offset FLAT:?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ
	dd	offset FLAT:?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ
	dd	offset FLAT:?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
	dd	offset FLAT:?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ
	dd	offset FLAT:?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ
	dd	offset FLAT:?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ
	dd	offset FLAT:?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ
	dd	offset FLAT:?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ
	dd	offset FLAT:?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ
	dd	offset FLAT:?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ
	dd	offset FLAT:?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ
	dd	offset FLAT:?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ
	dd	offset FLAT:?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ
	dd	offset FLAT:?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ
	dd	offset FLAT:?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ
	dd	offset FLAT:?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ
	dd	offset FLAT:?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ
	dd	offset FLAT:?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ
	dd	offset FLAT:?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ
	dd	offset FLAT:?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ
	dd	offset FLAT:?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ
	dd	offset FLAT:?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ
	dd	offset FLAT:?isImport@Dsymbol@@UAEPAUImport@@XZ
	dd	offset FLAT:?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ
	dd	offset FLAT:?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ
	dd	offset FLAT:?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ
	dd	offset FLAT:?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ
	dd	offset FLAT:?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ
??_7Dsymbol@@6B@	ends
??_GLabelDsymbol@@UAEPAXI@Z	comdat
	assume	CS:??_GLabelDsymbol@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7LabelDsymbol@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Dsymbol@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GLabelDsymbol@@UAEPAXI@Z	ends
?dyncast@Dsymbol@@UAEHXZ	comdat
	assume	CS:?dyncast@Dsymbol@@UAEHXZ
		push	ECX
		mov	EAX,2
		pop	ECX
		ret
?dyncast@Dsymbol@@UAEHXZ	ends
?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z	comdat
	assume	CS:?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z
		push	ECX
		pop	EAX
		ret	4
?addLocalClass@Dsymbol@@UAEXPAUClassDeclarations@@@Z	ends
?checkCtorConstInit@Dsymbol@@UAEXXZ	comdat
	assume	CS:?checkCtorConstInit@Dsymbol@@UAEXXZ
		push	ECX
		pop	EAX
		ret
?checkCtorConstInit@Dsymbol@@UAEXXZ	ends
?isPackage@Dsymbol@@UAEPAUPackage@@XZ	comdat
	assume	CS:?isPackage@Dsymbol@@UAEPAUPackage@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isPackage@Dsymbol@@UAEPAUPackage@@XZ	ends
?isModule@Dsymbol@@UAEPAUModule@@XZ	comdat
	assume	CS:?isModule@Dsymbol@@UAEPAUModule@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isModule@Dsymbol@@UAEPAUModule@@XZ	ends
?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ	comdat
	assume	CS:?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isEnumMember@Dsymbol@@UAEPAUEnumMember@@XZ	ends
?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ	comdat
	assume	CS:?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isTemplateDeclaration@Dsymbol@@UAEPAUTemplateDeclaration@@XZ	ends
?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ	comdat
	assume	CS:?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isTemplateInstance@Dsymbol@@UAEPAUTemplateInstance@@XZ	ends
?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ	comdat
	assume	CS:?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isTemplateMixin@Dsymbol@@UAEPAUTemplateMixin@@XZ	ends
?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ	comdat
	assume	CS:?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isDeclaration@Dsymbol@@UAEPAUDeclaration@@XZ	ends
?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ	comdat
	assume	CS:?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isThisDeclaration@Dsymbol@@UAEPAUThisDeclaration@@XZ	ends
?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ	comdat
	assume	CS:?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isTupleDeclaration@Dsymbol@@UAEPAUTupleDeclaration@@XZ	ends
?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ	comdat
	assume	CS:?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isTypedefDeclaration@Dsymbol@@UAEPAUTypedefDeclaration@@XZ	ends
?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ	comdat
	assume	CS:?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isAliasDeclaration@Dsymbol@@UAEPAUAliasDeclaration@@XZ	ends
?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ	comdat
	assume	CS:?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isAggregateDeclaration@Dsymbol@@UAEPAUAggregateDeclaration@@XZ	ends
?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ	comdat
	assume	CS:?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isFuncDeclaration@Dsymbol@@UAEPAUFuncDeclaration@@XZ	ends
?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ	comdat
	assume	CS:?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isFuncAliasDeclaration@Dsymbol@@UAEPAUFuncAliasDeclaration@@XZ	ends
?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ	comdat
	assume	CS:?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isFuncLiteralDeclaration@Dsymbol@@UAEPAUFuncLiteralDeclaration@@XZ	ends
?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ	comdat
	assume	CS:?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isCtorDeclaration@Dsymbol@@UAEPAUCtorDeclaration@@XZ	ends
?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ	comdat
	assume	CS:?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isPostBlitDeclaration@Dsymbol@@UAEPAUPostBlitDeclaration@@XZ	ends
?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ	comdat
	assume	CS:?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isDtorDeclaration@Dsymbol@@UAEPAUDtorDeclaration@@XZ	ends
?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ	comdat
	assume	CS:?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isStaticCtorDeclaration@Dsymbol@@UAEPAUStaticCtorDeclaration@@XZ	ends
?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ	comdat
	assume	CS:?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isStaticDtorDeclaration@Dsymbol@@UAEPAUStaticDtorDeclaration@@XZ	ends
?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ	comdat
	assume	CS:?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isInvariantDeclaration@Dsymbol@@UAEPAUInvariantDeclaration@@XZ	ends
?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ	comdat
	assume	CS:?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isUnitTestDeclaration@Dsymbol@@UAEPAUUnitTestDeclaration@@XZ	ends
?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ	comdat
	assume	CS:?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isNewDeclaration@Dsymbol@@UAEPAUNewDeclaration@@XZ	ends
?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ	comdat
	assume	CS:?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isVarDeclaration@Dsymbol@@UAEPAUVarDeclaration@@XZ	ends
?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ	comdat
	assume	CS:?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isClassDeclaration@Dsymbol@@UAEPAUClassDeclaration@@XZ	ends
?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ	comdat
	assume	CS:?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isStructDeclaration@Dsymbol@@UAEPAUStructDeclaration@@XZ	ends
?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ	comdat
	assume	CS:?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isUnionDeclaration@Dsymbol@@UAEPAUUnionDeclaration@@XZ	ends
?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ	comdat
	assume	CS:?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isInterfaceDeclaration@Dsymbol@@UAEPAUInterfaceDeclaration@@XZ	ends
?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ	comdat
	assume	CS:?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isScopeDsymbol@Dsymbol@@UAEPAUScopeDsymbol@@XZ	ends
?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ	comdat
	assume	CS:?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isWithScopeSymbol@Dsymbol@@UAEPAUWithScopeSymbol@@XZ	ends
?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ	comdat
	assume	CS:?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isArrayScopeSymbol@Dsymbol@@UAEPAUArrayScopeSymbol@@XZ	ends
?isImport@Dsymbol@@UAEPAUImport@@XZ	comdat
	assume	CS:?isImport@Dsymbol@@UAEPAUImport@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isImport@Dsymbol@@UAEPAUImport@@XZ	ends
?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ	comdat
	assume	CS:?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isEnumDeclaration@Dsymbol@@UAEPAUEnumDeclaration@@XZ	ends
?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ	comdat
	assume	CS:?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isDeleteDeclaration@Dsymbol@@UAEPAUDeleteDeclaration@@XZ	ends
?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ	comdat
	assume	CS:?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isSymbolDeclaration@Dsymbol@@UAEPAUSymbolDeclaration@@XZ	ends
?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ	comdat
	assume	CS:?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isAttribDeclaration@Dsymbol@@UAEPAUAttribDeclaration@@XZ	ends
?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ	comdat
	assume	CS:?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ
		push	ECX
		xor	EAX,EAX
		pop	ECX
		ret
?isOverloadSet@Dsymbol@@UAEPAUOverloadSet@@XZ	ends
??_GDsymbol@@UAEPAXI@Z	comdat
	assume	CS:??_GDsymbol@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L26
		mov	dword ptr [EBX],offset FLAT:??_7Dsymbol@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L26
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L26:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GDsymbol@@UAEPAXI@Z	ends
??_7AsmStatement@@6B@	comdat
	dd	offset FLAT:??_GAsmStatement@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Statement@@UAEXXZ
	dd	offset FLAT:?toChars@Statement@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
	dd	offset FLAT:?syntaxCopy@AsmStatement@@UAEPAUStatement@@XZ
	dd	offset FLAT:?toCBuffer@AsmStatement@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	dd	offset FLAT:?isTryCatchStatement@Statement@@UAEPAUTryCatchStatement@@XZ
	dd	offset FLAT:?isGotoStatement@Statement@@UAEPAUGotoStatement@@XZ
	dd	offset FLAT:?isAsmStatement@AsmStatement@@UAEPAU1@XZ
	dd	offset FLAT:?isScopeStatement@Statement@@UAEPAUScopeStatement@@XZ
	dd	offset FLAT:?semantic@AsmStatement@@UAEPAUStatement@@PAUScope@@@Z
	dd	offset FLAT:?hasBreak@Statement@@UAEHXZ
	dd	offset FLAT:?hasContinue@Statement@@UAEHXZ
	dd	offset FLAT:?usesEH@Statement@@UAEHXZ
	dd	offset FLAT:?blockExit@AsmStatement@@UAEHXZ
	dd	offset FLAT:?comeFrom@AsmStatement@@UAEHXZ
	dd	offset FLAT:?isEmpty@Statement@@UAEHXZ
	dd	offset FLAT:?scopeCode@Statement@@UAEXPAUScope@@PAPAU1@11@Z
	dd	offset FLAT:?flatten@Statement@@UAEPAUStatements@@PAUScope@@@Z
	dd	offset FLAT:?interpret@AsmStatement@@UAEPAUExpression@@PAUInterState@@@Z
	dd	offset FLAT:?inlineCost@Statement@@UAEHPAUInlineCostState@@@Z
	dd	offset FLAT:?doInline@Statement@@UAEPAUExpression@@PAUInlineDoState@@@Z
	dd	offset FLAT:?inlineScan@Statement@@UAEPAU1@PAUInlineScanState@@@Z
	dd	offset FLAT:?toIR@AsmStatement@@UAEXPAUIRState@@@Z
	dd	offset FLAT:?isDeclarationStatement@Statement@@UAEPAUDeclarationStatement@@XZ
	dd	offset FLAT:?isCompoundStatement@Statement@@UAEPAUCompoundStatement@@XZ
	dd	offset FLAT:?isReturnStatement@Statement@@UAEPAUReturnStatement@@XZ
	dd	offset FLAT:?isIfStatement@Statement@@UAEPAUIfStatement@@XZ
??_7AsmStatement@@6B@	ends
??_GAsmStatement@@UAEPAXI@Z	comdat
	assume	CS:??_GAsmStatement@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L2C
		mov	dword ptr [EBX],offset FLAT:??_7AsmStatement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Statement@@6B@
		mov	dword ptr [EBX],offset FLAT:??_7Object@@6B@
		test	dword ptr 8[ESP],1
		je	L2C
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L2C:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GAsmStatement@@UAEPAXI@Z	ends
?isAsmStatement@AsmStatement@@UAEPAU1@XZ	comdat
	assume	CS:?isAsmStatement@AsmStatement@@UAEPAU1@XZ
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?isAsmStatement@AsmStatement@@UAEPAU1@XZ	ends
	end
