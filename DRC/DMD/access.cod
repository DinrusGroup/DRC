_TEXT	segment dword use32 public 'CODE'	;size is 1561
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 111
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 0
_BSS	ends
FLAT	group	

	public	?getAccess@AggregateDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z
	public	?getAccess@StructDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z
	public	?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z
	public	?accessCheck@AggregateDeclaration@@QAEXULoc@@PAUScope@@PAUDsymbol@@@Z
	public	?isFriendOf@AggregateDeclaration@@QAEHPAU1@@Z
	public	?hasPackageAccess@@YAHPAUScope@@PAUDsymbol@@@Z
includelib SNN.lib
	extrn	?toParent@Dsymbol@@QAEPAU1@XZ
	extrn	?error@@YAXULoc@@PBDZZ
	extrn	?getModule@Dsymbol@@QAEPAUModule@@XZ
	extrn	?halt@@YAXXZ
	extrn	?error@Dsymbol@@QAAXULoc@@PBDZZ
	extrn	?getStructClassScope@Scope@@QAEPAUAggregateDeclaration@@XZ
	extrn	__assert

	public	?hasPrivateAccess@AggregateDeclaration@@QAEHPAUDsymbol@@@Z
	public	?accessCheck@@YAXULoc@@PAUScope@@PAUExpression@@PAUDeclaration@@@Z
_TEXT	segment
	assume	CS:_TEXT
?getAccess@AggregateDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z:
		push	ECX
		mov	EAX,5
		pop	ECX
		ret	4
		nop
		nop
		nop
		nop
		nop
		nop
?getAccess@StructDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		mov	ESI,1
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		cmp	EAX,8[ESP]
		je	L41
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 0E0h[EDX]
		mov	EDX,034h[EAX]
		mov	EAX,030h[EAX]
		and	EAX,ESI
		xor	EDX,EDX
		test	EAX,EAX
		je	L4D
L41:		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 09Ch[EDX]
		mov	ESI,EAX
L4D:		mov	EAX,ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	4
?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z:
		sub	ESP,0Ch
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,020h[ESP]
		mov	018h[ESP],ECX
		mov	ECX,EDI
		mov	dword ptr 014h[ESP],1
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		cmp	EAX,018h[ESP]
		jne	L8C
		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 09Ch[EDX]
		mov	014h[ESP],EAX
		jmp	near ptr L137
L8C:		mov	EDX,[EDI]
		mov	ECX,EDI
		call	dword ptr 0E0h[EDX]
		mov	EBX,EAX
		mov	EDX,034h[EAX]
		mov	EAX,030h[EBX]
		and	EAX,1
		xor	EDX,EDX
		test	EAX,EAX
		je	LB7
		mov	EBX,[EDI]
		mov	ECX,EDI
		call	dword ptr 09Ch[EBX]
		mov	014h[ESP],EAX
LB7:		mov	020h[ESP],EDI
		mov	ESI,018h[ESP]
		mov	EAX,0E4h[ESI]
		xor	EDI,EDI
		cmp	4[EAX],EDI
		je	L137
LCC:		push	dword ptr 020h[ESP]
		mov	EDX,01Ch[ESP]
		mov	ECX,0E4h[EDX]
		mov	EDX,8[ECX]
		mov	EBP,[EDI*4][EDX]
		mov	EDX,8[EBP]
		mov	EDX,[EDX]
		mov	ECX,8[EBP]
		call	dword ptr 0160h[EDX]
		mov	EBX,EAX
		sub	EBX,1
		mov	ESI,EAX
		cmp	EBX,5
		ja	L116
		jmp	dword ptr FLAT:_DATA[010h][EBX*4]
		mov	ECX,4[EBP]
		cmp	ECX,ESI
		jge	L10A
		mov	ESI,ECX
L10A:		cmp	ESI,014h[ESP]
		jle	L127
		mov	014h[ESP],ESI
		jmp short	L127
L116:		push	072h
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[0Ch]
		call	near ptr __assert
L127:		mov	EAX,018h[ESP]
		mov	ESI,0E4h[EAX]
		inc	EDI
		cmp	4[ESI],EDI
		ja	LCC
L137:		mov	EAX,014h[ESP]
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret	4
L145:		push	EAX
		push	EBX
		mov	EBX,0Ch[ESP]
		push	EBP
		mov	EBP,014h[ESP]
		push	ESI
		mov	ESI,01Ch[ESP]
		test	ESI,ESI
		push	EDI
		jne	L16E
		push	08Ah
		push	offset FLAT:_DATA
		push	offset FLAT:_DATA[028h]
		call	near ptr __assert
L16E:		mov	ECX,ESI
		push	EBP
		call	near ptr ?hasPrivateAccess@AggregateDeclaration@@QAEHPAUDsymbol@@@Z
		test	EAX,EAX
		jne	L18D
		push	dword ptr 024h[ESP]
		mov	ECX,ESI
		call	near ptr ?isFriendOf@AggregateDeclaration@@QAEHPAU1@@Z
		test	EAX,EAX
		je	L212
L18D:		mov	ECX,EBX
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		cmp	EAX,ESI
		je	L25B
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 0128h[EDX]
		test	EAX,EAX
		mov	010h[ESP],EAX
		je	L272
		mov	ECX,0E4h[EAX]
		xor	EDI,EDI
		cmp	4[ECX],EDI
		je	L272
L1C3:		push	EBX
		mov	EDX,014h[ESP]
		mov	ECX,0E4h[EDX]
		mov	EDX,8[ECX]
		mov	ESI,[EDI*4][EDX]
		mov	EDX,8[ESI]
		mov	EDX,[EDX]
		mov	ECX,8[ESI]
		call	dword ptr 0160h[EDX]
		mov	ECX,4
		cmp	EAX,ECX
		jge	L25B
		push	dword ptr 024h[ESP]
		push	dword ptr 8[ESI]
		push	EBP
		push	EBX
		call	near ptr L145
		add	ESP,010h
		test	EAX,EAX
		jne	L25B
		mov	EDX,010h[ESP]
		mov	ECX,0E4h[EDX]
		inc	EDI
		cmp	4[ECX],EDI
		ja	L1C3
		jmp short	L272
L212:		mov	ECX,EBX
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		cmp	EAX,ESI
		je	L272
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 0128h[EDX]
		mov	EDI,EAX
		test	EAX,EAX
		je	L272
		mov	ECX,0E4h[EDI]
		xor	ESI,ESI
		cmp	4[ECX],ESI
		je	L272
L23A:		push	dword ptr 024h[ESP]
		mov	EDX,0E4h[EDI]
		mov	ECX,8[EDX]
		mov	EDX,[ESI*4][ECX]
		push	dword ptr 8[EDX]
		push	EBP
		push	EBX
		call	near ptr L145
		add	ESP,010h
		test	EAX,EAX
		je	L266
L25B:		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
L266:		mov	ECX,0E4h[EDI]
		inc	ESI
		cmp	4[ECX],ESI
		ja	L23A
L272:		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?accessCheck@AggregateDeclaration@@QAEXULoc@@PAUScope@@PAUDsymbol@@@Z:
		sub	ESP,0Ch
		push	EBX
		mov	EBX,ECX
		push	EBP
		push	ESI
		mov	ESI,028h[ESP]
		push	EDI
		mov	EDI,028h[ESP]
		mov	EDX,010h[EDI]
		mov	014h[ESP],EDX
		mov	ECX,EDI
		call	near ptr ?getStructClassScope@Scope@@QAEPAUAggregateDeclaration@@XZ
		mov	ECX,ESI
		mov	018h[ESP],EAX
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		mov	EBP,EAX
		test	EAX,EAX
		je	L387
		mov	EDX,0[EBP]
		mov	ECX,EBP
		call	dword ptr 0F4h[EDX]
		test	EAX,EAX
		je	L387
		cmp	EBP,EBX
		jne	L320
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 09Ch[EDX]
		mov	EBP,EAX
		cmp	EAX,5
		jge	L311
		mov	ECX,EBX
		push	dword ptr 014h[ESP]
		call	near ptr ?hasPrivateAccess@AggregateDeclaration@@QAEHPAUDsymbol@@@Z
		test	EAX,EAX
		jne	L311
		push	dword ptr 018h[ESP]
		mov	ECX,EBX
		call	near ptr ?isFriendOf@AggregateDeclaration@@QAEHPAU1@@Z
		test	EAX,EAX
		jne	L311
		cmp	EBP,3
		jne	L30D
		push	EBX
		push	EDI
		call	near ptr ?hasPackageAccess@@YAHPAUScope@@PAUDsymbol@@@Z
		add	ESP,8
		test	EAX,EAX
		jne	L311
L30D:		xor	EDX,EDX
		jmp short	L316
L311:		mov	EDX,1
L316:		mov	010h[ESP],EDX
		mov	EDI,010h[ESP]
		jmp short	L360
L320:		push	ESI
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 0160h[EDX]
		mov	EBP,EAX
		cmp	EAX,5
		jge	L345
		cmp	EBP,3
		jne	L34C
		push	EBX
		push	EDI
		call	near ptr ?hasPackageAccess@@YAHPAUScope@@PAUDsymbol@@@Z
		add	ESP,8
		test	EAX,EAX
		je	L34C
L345:		mov	EDI,1
		jmp short	L360
L34C:		push	dword ptr 018h[ESP]
		push	EBX
		push	dword ptr 01Ch[ESP]
		push	ESI
		call	near ptr L145
		mov	EDI,EAX
		add	ESP,010h
L360:		test	EDI,EDI
		jne	L387
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[030h]
		push	dword ptr 02Ch[ESP]
		push	dword ptr 02Ch[ESP]
		push	EBX
		call	near ptr ?error@Dsymbol@@QAAXULoc@@PBDZZ
		call	near ptr ?halt@@YAXXZ
		add	ESP,014h
L387:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret	010h
?isFriendOf@AggregateDeclaration@@QAEHPAU1@@Z:
		push	ECX
		mov	EAX,8[ESP]
		cmp	ECX,EAX
		je	L3BA
		test	EAX,EAX
		je	L3C3
		call	near ptr ?getModule@Dsymbol@@QAEPAUModule@@XZ
		mov	ECX,8[ESP]
		push	EAX
		sub	ESP,4
		call	near ptr ?getModule@Dsymbol@@QAEPAUModule@@XZ
		add	ESP,4
		mov	EDX,EAX
		pop	EAX
		cmp	EAX,EDX
		jne	L3C3
L3BA:		pop	ECX
		mov	EAX,1
		ret	4
L3C3:		pop	ECX
		xor	EAX,EAX
		ret	4
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?hasPackageAccess@@YAHPAUScope@@PAUDsymbol@@@Z:
		push	EBX
		mov	EBX,0Ch[ESP]
		test	EBX,EBX
		push	ESI
		push	EDI
		je	L3FE
L3DB:		mov	EAX,[EBX]
		mov	ECX,EBX
		call	dword ptr 0C8h[EAX]
		test	EAX,EAX
		je	L3F7
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 0CCh[EDX]
		test	EAX,EAX
		je	L3FE
L3F7:		mov	EBX,0Ch[EBX]
		test	EBX,EBX
		jne	L3DB
L3FE:		test	EBX,EBX
		je	L40E
		mov	ESI,010h[ESP]
		mov	EDI,4[ESI]
		cmp	0Ch[EDI],EBX
		je	L412
L40E:		xor	EAX,EAX
		jmp short	L417
L412:		mov	EAX,1
L417:		cmp	AL,1
		sbb	EAX,EAX
		inc	EAX
		pop	EDI
		pop	ESI
		pop	EBX
		ret
?hasPrivateAccess@AggregateDeclaration@@QAEHPAUDsymbol@@@Z:
		sub	ESP,0Ch
		push	EBX
		push	ESI
		mov	ESI,018h[ESP]
		test	ESI,ESI
		mov	010h[ESP],ECX
		je	L512
		mov	dword ptr 0Ch[ESP],0
		mov	ECX,ESI
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		mov	EBX,EAX
		test	EAX,EAX
		je	L458
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 0F4h[EDX]
		mov	0Ch[ESP],EAX
L458:		mov	EAX,010h[ESP]
		cmp	EAX,0Ch[ESP]
		je	L505
		mov	ECX,ESI
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		mov	EBX,EAX
		mov	EDX,[EBX]
		mov	ECX,EAX
		call	dword ptr 0F8h[EDX]
		test	EAX,EAX
		je	L4B2
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 0F8h[EDX]
		test	EAX,EAX
		je	L4B2
L48B:		mov	ESI,EBX
		mov	ECX,EBX
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		mov	EBX,EAX
		mov	EDX,[EBX]
		mov	ECX,EAX
		call	dword ptr 0F8h[EDX]
		test	EAX,EAX
		je	L4B2
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 0F8h[EDX]
		test	EAX,EAX
		jne	L48B
L4B2:		cmp	dword ptr 0Ch[ESP],0
		setz	AL
		test	AL,AL
		mov	8[ESP],EAX
		je	L4E0
		mov	ECX,010h[ESP]
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		mov	ECX,ESI
		push	EAX
		sub	ESP,4
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		add	ESP,4
		mov	EBX,EAX
		pop	EAX
		cmp	EAX,EBX
		je	L505
L4E0:		cmp	byte ptr 8[ESP],0
		je	L512
		mov	ECX,010h[ESP]
		call	near ptr ?getModule@Dsymbol@@QAEPAUModule@@XZ
		mov	ECX,ESI
		push	EAX
		sub	ESP,4
		call	near ptr ?getModule@Dsymbol@@QAEPAUModule@@XZ
		add	ESP,4
		mov	EDX,EAX
		pop	EAX
		cmp	EAX,EDX
		jne	L512
L505:		pop	ESI
		mov	EAX,1
		pop	EBX
		add	ESP,0Ch
		ret	4
L512:		pop	ESI
		xor	EAX,EAX
		pop	EBX
		add	ESP,0Ch
		ret	4
		nop
		nop
		nop
		nop
?accessCheck@@YAXULoc@@PAUScope@@PAUExpression@@PAUDeclaration@@@Z:
		push	EBX
		mov	EAX,014h[ESP]
		mov	EBX,018h[ESP]
		push	ESI
		mov	ESI,014h[ESP]
		test	EAX,EAX
		push	EDI
		jne	L5B8
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 09Ch[EDX]
		cmp	EAX,2
		jne	L552
		mov	ECX,EBX
		call	near ptr ?getModule@Dsymbol@@QAEPAUModule@@XZ
		cmp	EAX,4[ESI]
		jne	L577
L552:		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 09Ch[EDX]
		cmp	EAX,3
		jne	L615
		push	EBX
		push	ESI
		call	near ptr ?hasPackageAccess@@YAHPAUScope@@PAUDsymbol@@@Z
		add	ESP,8
		test	EAX,EAX
		jne	L615
L577:		mov	ECX,4[ESI]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	EDX,[EBX]
		mov	ECX,EBX
		push	EAX
		call	dword ptr 014h[EDX]
		mov	ECX,EBX
		push	EAX
		call	near ptr ?getModule@Dsymbol@@QAEPAUModule@@XZ
		mov	EDI,EAX
		mov	EDX,[EDI]
		mov	ECX,EAX
		call	dword ptr 014h[EDX]
		mov	EDX,[EBX]
		mov	ECX,EBX
		push	EAX
		call	dword ptr 028h[EDX]
		push	EAX
		push	offset FLAT:_DATA[04Ch]
		push	dword ptr 028h[ESP]
		push	dword ptr 028h[ESP]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		add	ESP,01Ch
		jmp short	L615
L5B8:		mov	ECX,010h[EAX]
		mov	EDX,4[ECX]
		cmp	EDX,7
		jne	L5FA
		cmp	dword ptr 0Ch[EAX],07Ch
		mov	EDX,010h[EAX]
		mov	EDI,028h[EDX]
		jne	L5E7
		mov	ECX,010h[ESI]
		call	near ptr ?toParent@Dsymbol@@QAEPAU1@XZ
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 0128h[EDX]
		test	EAX,EAX
		je	L5E7
		mov	EDI,EAX
L5E7:		push	EBX
		mov	ECX,EDI
		push	ESI
		push	dword ptr 01Ch[ESP]
		push	dword ptr 01Ch[ESP]
		call	near ptr ?accessCheck@AggregateDeclaration@@QAEXULoc@@PAUScope@@PAUDsymbol@@@Z
		jmp short	L615
L5FA:		cmp	EDX,8
		jne	L615
		mov	01Ch[ESP],EAX
		mov	ECX,028h[ECX]
		push	EBX
		push	ESI
		push	dword ptr 01Ch[ESP]
		push	dword ptr 01Ch[ESP]
		call	near ptr ?accessCheck@AggregateDeclaration@@QAEXULoc@@PAUScope@@PAUDsymbol@@@Z
L615:		pop	EDI
		pop	ESI
		pop	EBX
		ret
_TEXT	ends
_DATA	segment
D0	db	061h,063h,063h,065h,073h,073h,02eh,063h
	db	000h,000h,000h,000h
DC	db	030h,000h,000h,000h
	dd	offset FLAT:?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z[0D2h]
	dd	offset FLAT:?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z[0D2h]
	dd	offset FLAT:?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z[0ACh]
	dd	offset FLAT:?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z[0ACh]
	dd	offset FLAT:?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z[0ACh]
	dd	offset FLAT:?getAccess@ClassDeclaration@@UAE?AW4PROT@@PAUDsymbol@@@Z[0ACh]
D28	db	064h,074h,068h,069h,073h,000h,000h,000h
D30	db	06dh,065h,06dh,062h,065h,072h,020h,025h
	db	073h,020h,069h,073h,020h,06eh,06fh,074h
	db	020h,061h,063h,063h,065h,073h,073h,069h
	db	062h,06ch,065h,000h
D4C	db	025h,073h,020h,025h
	db	073h,02eh,025h,073h,020h,069h,073h,020h
	db	06eh,06fh,074h,020h,061h,063h,063h,065h
	db	073h,073h,069h,062h,06ch,065h,020h,066h
	db	072h,06fh,06dh,020h,025h,073h,000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
	end
