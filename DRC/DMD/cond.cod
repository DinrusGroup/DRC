_TEXT	segment dword use32 public 'CODE'	;size is 2286
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 457
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 0
_BSS	ends
FLAT	group	
	extrn	??_7DVCondition@@6B@

	public	?findCondition@@YAHPAUArray@@PAUIdentifier@@@Z
	public	??0Condition@@QAE@ULoc@@@Z
	public	??0DVCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z
	extrn	??_7DebugCondition@@6B@

	public	?syntaxCopy@DVCondition@@UAEPAUCondition@@XZ
	public	?setGlobalLevel@DebugCondition@@SAXI@Z
	public	?addGlobalIdent@DebugCondition@@SAXPBD@Z
	public	??0DebugCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z
	public	?include@DebugCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	public	?toCBuffer@DebugCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	?setGlobalLevel@VersionCondition@@SAXI@Z
	public	?checkPredefined@VersionCondition@@SAXULoc@@PBD@Z
	public	?addGlobalIdent@VersionCondition@@SAXPBD@Z
	extrn	??_7VersionCondition@@6B@

	public	?addPredefinedGlobalIdent@VersionCondition@@SAXPBD@Z
	public	??0VersionCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z
	extrn	??_7StaticIfCondition@@6B@

	public	?include@VersionCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	public	?toCBuffer@VersionCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	public	??0StaticIfCondition@@QAE@ULoc@@PAUExpression@@@Z
	public	?syntaxCopy@StaticIfCondition@@UAEPAUCondition@@XZ
	extrn	??_7IftypeCondition@@6B@

	public	?include@StaticIfCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	public	?toCBuffer@StaticIfCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
	extrn	??_7TemplateParameters@@6B@
	extrn	??_7Objects@@6B@

	public	??0IftypeCondition@@QAE@ULoc@@PAUType@@PAUIdentifier@@W4TOK@@1@Z
	public	?syntaxCopy@IftypeCondition@@UAEPAUCondition@@XZ
	extrn	??_GTemplateParameters@@UAEPAXI@Z
	extrn	??_GObjects@@UAEPAXI@Z
includelib SNN.lib
	extrn	?writeByte@OutBuffer@@QAEXI@Z
	extrn	?writestring@OutBuffer@@QAEXPBD@Z
	extrn	??3@YAXPAX@Z
	extrn	??1Array@@UAE@XZ
	extrn	?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
	extrn	??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUType@@@Z
	extrn	??2@YAPAXI@Z
	extrn	?setDim@Array@@QAEXI@Z
	extrn	??0Array@@QAE@XZ
	extrn	??0TemplateTypeParameter@@QAE@ULoc@@PAUIdentifier@@PAUType@@2@Z
	extrn	?global@@3UGlobal@@A
	extrn	?error@@YAXULoc@@PBDZZ
	extrn	?dyncast@Object@@UAEHXZ
	extrn	?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	extrn	?toDchars@Object@@UAEPADXZ
	extrn	?toChars@Array@@UAEPADXZ
	extrn	?print@Object@@UAEXXZ
	extrn	?compare@Object@@UAEHPAU1@@Z
	extrn	?hashCode@Object@@UAEIXZ
	extrn	?equals@Object@@UAEHPAU1@@Z
	extrn	?error@Expression@@QAAXPBDZZ
	extrn	?pop@Scope@@QAEPAU1@XZ
	extrn	?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
	extrn	?printf@OutBuffer@@QAAXPBDZZ
	extrn	?push@Array@@QAEXPAX@Z
	extrn	_strcmp

	public	?include@IftypeCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	public	?toCBuffer@IftypeCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
??_7DVCondition@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7DebugCondition@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7VersionCondition@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7StaticIfCondition@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7IftypeCondition@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7TemplateParameters@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_7Objects@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GTemplateParameters@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 
??_GObjects@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 

_TEXT	segment
	assume	CS:_TEXT
?findCondition@@YAHPAUArray@@PAUIdentifier@@@Z:
		push	EAX
		push	EBX
		push	EBP
		mov	EBP,010h[ESP]
		test	EBP,EBP
		push	ESI
		mov	ESI,018h[ESP]
		push	EDI
		je	L44
		xor	EBX,EBX
		cmp	4[EBP],EBX
		je	L44
L18:		mov	ECX,8[EBP]
		mov	EDI,[EBX*4][ECX]
		mov	EDX,[ESI]
		mov	ECX,ESI
		call	dword ptr 014h[EDX]
		push	EAX
		push	EDI
		call	near ptr _strcmp
		add	ESP,8
		test	EAX,EAX
		jne	L3E
		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
L3E:		inc	EBX
		cmp	4[EBP],EBX
		ja	L18
L44:		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
??0Condition@@QAE@ULoc@@@Z:
		push	EBX
		lea	EAX,4[ECX]
		mov	EBX,ECX
		mov	dword ptr 4[EAX],0
		mov	EDX,0Ch[ESP]
		mov	dword ptr [EAX],0
		mov	EAX,8[ESP]
		mov	4[EBX],EAX
		mov	EAX,ECX
		mov	8[EBX],EDX
		mov	dword ptr 0Ch[EBX],0
		pop	EBX
		ret	8
		nop
		nop
??0DVCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	EDI
		mov	dword ptr 010h[ESP],0
		mov	dword ptr 0Ch[ESP],0
		mov	EDX,010h[ESP]
		mov	EAX,0Ch[ESP]
		push	EDX
		push	EAX
		call	near ptr ??0Condition@@QAE@ULoc@@@Z
		mov	ECX,018h[ESP]
		mov	ESI,01Ch[ESP]
		mov	dword ptr [EBX],offset FLAT:??_7DVCondition@@6B@
		mov	EDI,020h[ESP]
		mov	EAX,EBX
		mov	018h[EBX],ECX
		mov	010h[EBX],ESI
		mov	014h[EBX],EDI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	0Ch
		nop
		nop
		nop
		nop
?syntaxCopy@DVCondition@@UAEPAUCondition@@XZ:
		push	ECX
		mov	EAX,ECX
		pop	ECX
		ret
?setGlobalLevel@DebugCondition@@SAXI@Z:
		mov	EAX,4[ESP]
		mov	?global@@3UGlobal@@A[0A4h],EAX
		ret
		nop
?addGlobalIdent@DebugCondition@@SAXPBD@Z:
		push	EBX
		cmp	dword ptr ?global@@3UGlobal@@A[0A8h],0
		jne	L109
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L103
		mov	ECX,EBX
		call	near ptr ??0Array@@QAE@XZ
		mov	EBX,EAX
L103:		mov	?global@@3UGlobal@@A[0A8h],EBX
L109:		push	dword ptr 8[ESP]
		mov	ECX,?global@@3UGlobal@@A[0A8h]
		call	near ptr ?push@Array@@QAEXPAX@Z
		pop	EBX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
??0DebugCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		call	near ptr ??0DVCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7DebugCondition@@6B@
		pop	EBX
		ret	0Ch
?include@DebugCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		cmp	dword ptr 0Ch[ECX],0
		jne	L1ED
		mov	dword ptr 0Ch[EBX],2
		cmp	dword ptr 014h[EBX],0
		je	L1D0
		push	dword ptr 014h[EBX]
		mov	ESI,018h[EBX]
		push	dword ptr 0ACh[ESI]
		call	near ptr ?findCondition@@YAHPAUArray@@PAUIdentifier@@@Z
		add	ESP,8
		test	EAX,EAX
		jne	L1E6
		push	dword ptr 014h[EBX]
		push	dword ptr ?global@@3UGlobal@@A[0A8h]
		call	near ptr ?findCondition@@YAHPAUArray@@PAUIdentifier@@@Z
		add	ESP,8
		test	EAX,EAX
		jne	L1E6
		mov	ECX,018h[EBX]
		cmp	dword ptr 0B0h[ECX],0
		jne	L1B7
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L1AE
		mov	ECX,ESI
		call	near ptr ??0Array@@QAE@XZ
		mov	ESI,EAX
L1AE:		mov	EDX,018h[EBX]
		mov	0B0h[EDX],ESI
L1B7:		mov	ECX,014h[EBX]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		mov	ESI,018h[EBX]
		mov	ECX,0B0h[ESI]
		push	EAX
		call	near ptr ?push@Array@@QAEXPAX@Z
		jmp short	L1ED
L1D0:		mov	EAX,010h[EBX]
		cmp	EAX,?global@@3UGlobal@@A[0A4h]
		jbe	L1E6
		mov	EDX,018h[EBX]
		cmp	EAX,0A8h[EDX]
		ja	L1ED
L1E6:		mov	dword ptr 0Ch[EBX],1
L1ED:		cmp	dword ptr 0Ch[EBX],1
		mov	EAX,1
		je	L1FA
		xor	EAX,EAX
L1FA:		pop	ESI
		pop	EBX
		pop	ECX
		ret	8
?toCBuffer@DebugCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		cmp	dword ptr 014h[ECX],0
		je	L223
		mov	ECX,014h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA
		push	dword ptr 010h[ESP]
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L237
L223:		push	dword ptr 010h[ECX]
		push	offset FLAT:_DATA[0Ch]
		push	dword ptr 010h[ESP]
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
L237:		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
		nop
?setGlobalLevel@VersionCondition@@SAXI@Z:
		mov	EAX,4[ESP]
		mov	?global@@3UGlobal@@A[0ACh],EAX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?checkPredefined@VersionCondition@@SAXULoc@@PBD@Z:
		push	EAX
		push	EBX
		xor	EBX,EBX
		push	ESI
		mov	ESI,018h[ESP]
L259:		push	dword ptr FLAT:_DATA[07Ch][EBX*4]
		push	ESI
		call	near ptr _strcmp
		add	ESP,8
		test	EAX,EAX
		je	L27E
		inc	EBX
		cmp	EBX,0Eh
		jb	L259
		cmp	byte ptr [ESI],044h
		jne	L294
		cmp	byte ptr 1[ESI],05Fh
		jne	L294
L27E:		push	ESI
		push	offset FLAT:_DATA[0B4h]
		push	dword ptr 01Ch[ESP]
		push	dword ptr 01Ch[ESP]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		add	ESP,010h
L294:		pop	ESI
		pop	EBX
		pop	EAX
		ret
?addGlobalIdent@VersionCondition@@SAXPBD@Z:
		sub	ESP,0Ch
		push	dword ptr 010h[ESP]
		mov	dword ptr 0Ch[ESP],0
		mov	dword ptr 8[ESP],0
		mov	EDX,0Ch[ESP]
		mov	EAX,8[ESP]
		push	EDX
		push	EAX
		call	near ptr ?checkPredefined@VersionCondition@@SAXULoc@@PBD@Z
		push	dword ptr 01Ch[ESP]
		call	near ptr ?addPredefinedGlobalIdent@VersionCondition@@SAXPBD@Z
		add	ESP,01Ch
		ret
		nop
		nop
		nop
		nop
		nop
?addPredefinedGlobalIdent@VersionCondition@@SAXPBD@Z:
		push	EBX
		cmp	dword ptr ?global@@3UGlobal@@A[0B0h],0
		jne	L2F9
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2F3
		mov	ECX,EBX
		call	near ptr ??0Array@@QAE@XZ
		mov	EBX,EAX
L2F3:		mov	?global@@3UGlobal@@A[0B0h],EBX
L2F9:		push	dword ptr 8[ESP]
		mov	ECX,?global@@3UGlobal@@A[0B0h]
		call	near ptr ?push@Array@@QAEXPAX@Z
		pop	EBX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
??0VersionCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		push	dword ptr 010h[ESP]
		call	near ptr ??0DVCondition@@QAE@PAUModule@@IPAUIdentifier@@@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7VersionCondition@@6B@
		pop	EBX
		ret	0Ch
?include@VersionCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		cmp	dword ptr 0Ch[ECX],0
		jne	L3DD
		mov	dword ptr 0Ch[EBX],2
		cmp	dword ptr 014h[EBX],0
		je	L3C0
		push	dword ptr 014h[EBX]
		mov	ESI,018h[EBX]
		push	dword ptr 0B8h[ESI]
		call	near ptr ?findCondition@@YAHPAUArray@@PAUIdentifier@@@Z
		add	ESP,8
		test	EAX,EAX
		jne	L3D6
		push	dword ptr 014h[EBX]
		push	dword ptr ?global@@3UGlobal@@A[0B0h]
		call	near ptr ?findCondition@@YAHPAUArray@@PAUIdentifier@@@Z
		add	ESP,8
		test	EAX,EAX
		jne	L3D6
		mov	ECX,018h[EBX]
		cmp	dword ptr 0BCh[ECX],0
		jne	L3A7
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L39E
		mov	ECX,ESI
		call	near ptr ??0Array@@QAE@XZ
		mov	ESI,EAX
L39E:		mov	EDX,018h[EBX]
		mov	0BCh[EDX],ESI
L3A7:		mov	ECX,014h[EBX]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		mov	ESI,018h[EBX]
		mov	ECX,0BCh[ESI]
		push	EAX
		call	near ptr ?push@Array@@QAEXPAX@Z
		jmp short	L3DD
L3C0:		mov	EAX,010h[EBX]
		cmp	EAX,?global@@3UGlobal@@A[0ACh]
		jbe	L3D6
		mov	EDX,018h[EBX]
		cmp	EAX,0B4h[EDX]
		ja	L3DD
L3D6:		mov	dword ptr 0Ch[EBX],1
L3DD:		cmp	dword ptr 0Ch[EBX],1
		mov	EAX,1
		je	L3EA
		xor	EAX,EAX
L3EA:		pop	ESI
		pop	EBX
		pop	ECX
		ret	8
?toCBuffer@VersionCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		cmp	dword ptr 014h[ECX],0
		je	L413
		mov	ECX,014h[ECX]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		push	offset FLAT:_DATA[0ECh]
		push	dword ptr 010h[ESP]
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L427
L413:		push	dword ptr 010h[ECX]
		push	offset FLAT:_DATA[0FCh]
		push	dword ptr 010h[ESP]
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
L427:		pop	EAX
		ret	8
		nop
		nop
		nop
		nop
		nop
??0StaticIfCondition@@QAE@ULoc@@PAUExpression@@@Z:
		push	EBX
		mov	EBX,ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		call	near ptr ??0Condition@@QAE@ULoc@@@Z
		mov	EAX,010h[ESP]
		mov	010h[EBX],EAX
		mov	EAX,EBX
		mov	dword ptr [EBX],offset FLAT:??_7StaticIfCondition@@6B@
		pop	EBX
		ret	0Ch
?syntaxCopy@StaticIfCondition@@UAEPAUCondition@@XZ:
		push	ECX
		push	EBX
		push	ESI
		push	014h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L486
		mov	EAX,8[ESP]
		mov	ECX,010h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		mov	ESI,8[ESP]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0StaticIfCondition@@QAE@ULoc@@PAUExpression@@@Z
		mov	EBX,EAX
L486:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
?include@StaticIfCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z:
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	EDI
		mov	EDI,010h[ESP]
		cmp	dword ptr 0Ch[ESI],0
		jne	L557
		test	EDI,EDI
		jne	L4C9
		push	offset FLAT:_DATA[010Ch]
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		xor	EAX,EAX
		mov	dword ptr 0Ch[ESI],2
		add	ESP,0Ch
		pop	EDI
		pop	ESI
		pop	EBX
		ret	8
L4C9:		mov	EDX,014h[ESP]
		mov	ECX,EDI
		push	EDX
		sub	ESP,4
		push	dword ptr 8[EDI]
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		add	ESP,4
		mov	EDI,EAX
		pop	EDX
		mov	0Ch[EDI],EDX
		or	dword ptr 078h[EDI],2
		mov	ECX,010h[ESI]
		mov	EDX,[ECX]
		push	EDI
		call	dword ptr 028h[EDX]
		mov	EBX,EAX
		mov	ECX,EDI
		call	near ptr ?pop@Scope@@QAEPAU1@XZ
		mov	EDX,[EBX]
		mov	ECX,EBX
		push	1
		push	6
		call	dword ptr 074h[EDX]
		mov	EBX,EAX
		mov	EDX,[EBX]
		mov	ECX,EAX
		call	dword ptr 080h[EDX]
		test	EAX,EAX
		je	L521
		mov	dword ptr 0Ch[ESI],1
		jmp short	L557
L521:		push	0
		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 080h[EDX]
		test	EAX,EAX
		je	L53A
		mov	dword ptr 0Ch[ESI],2
		jmp short	L557
L53A:		mov	EDX,[EBX]
		mov	ECX,EBX
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA[013Ch]
		push	EBX
		call	near ptr ?error@Expression@@QAAXPBDZZ
		mov	dword ptr 0Ch[ESI],2
		add	ESP,0Ch
L557:		cmp	dword ptr 0Ch[ESI],1
		mov	EAX,1
		je	L564
		xor	EAX,EAX
L564:		pop	EDI
		pop	ESI
		pop	EBX
		ret	8
		nop
		nop
		nop
		nop
		nop
		nop
?toCBuffer@StaticIfCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,010h[ESP]
		mov	ECX,EBX
		push	offset FLAT:_DATA[017Ch]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		push	dword ptr 014h[ESP]
		mov	EAX,0Ch[ESP]
		mov	ECX,010h[EAX]
		push	EBX
		mov	EDX,[ECX]
		call	dword ptr 048h[EDX]
		mov	ECX,EBX
		push	029h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		pop	EBX
		add	ESP,8
		ret	8
??0IftypeCondition@@QAE@ULoc@@PAUType@@PAUIdentifier@@W4TOK@@1@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESP]
		call	near ptr ??0Condition@@QAE@ULoc@@@Z
		mov	EAX,018h[ESP]
		mov	ECX,01Ch[ESP]
		mov	010h[EBX],EAX
		mov	EDX,020h[ESP]
		mov	ESI,024h[ESP]
		mov	dword ptr [EBX],offset FLAT:??_7IftypeCondition@@6B@
		mov	EAX,EBX
		mov	014h[EBX],ECX
		mov	018h[EBX],EDX
		mov	01Ch[EBX],ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret	018h
?syntaxCopy@IftypeCondition@@UAEPAUCondition@@XZ:
		push	ECX
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	020h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L624
		mov	ECX,01Ch[ESI]
		test	ECX,ECX
		je	L603
		mov	EDX,[ECX]
		call	dword ptr 024h[EDX]
		jmp short	L605
L603:		xor	EAX,EAX
L605:		mov	ECX,010h[ESI]
		mov	EDX,[ECX]
		push	EAX
		push	dword ptr 018h[ESI]
		push	dword ptr 014h[ESI]
		call	dword ptr 024h[EDX]
		mov	ECX,EBX
		push	EAX
		push	dword ptr 8[ESI]
		push	dword ptr 4[ESI]
		call	near ptr ??0IftypeCondition@@QAE@ULoc@@PAUType@@PAUIdentifier@@W4TOK@@1@Z
		mov	EBX,EAX
L624:		mov	EAX,EBX
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?include@IftypeCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z:
		sub	ESP,04Ch
		push	EBX
		mov	EBX,ECX
		push	EBP
		mov	EBP,05Ch[ESP]
		push	ESI
		mov	ESI,05Ch[ESP]
		push	EDI
		cmp	dword ptr 0Ch[EBX],0
		jne	L86E
		test	ESI,ESI
		jne	L675
		push	offset FLAT:_DATA[0188h]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		xor	EAX,EAX
		mov	dword ptr 0Ch[EBX],2
		add	ESP,0Ch
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,04Ch
		ret	8
L675:		push	ESI
		mov	EDI,?global@@3UGlobal@@A[0F8h]
		inc	dword ptr ?global@@3UGlobal@@A[0100h]
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	dword ptr 030h[EDX]
		mov	010h[EBX],EAX
		dec	dword ptr ?global@@3UGlobal@@A[0100h]
		cmp	EDI,?global@@3UGlobal@@A[0F8h]
		je	L6B3
		mov	dword ptr 0Ch[EBX],2
		mov	?global@@3UGlobal@@A[0F8h],EDI
		jmp	near ptr L86E
L6B3:		mov	ECX,014h[EBX]
		test	ECX,ECX
		je	L7D8
		cmp	dword ptr 01Ch[EBX],0
		je	L7D8
		push	0
		push	0
		push	dword ptr 014h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		lea	ECX,028h[ESP]
		call	near ptr ??0TemplateTypeParameter@@QAE@ULoc@@PAUIdentifier@@PAUType@@2@Z
		lea	ECX,030h[ESP]
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr 030h[ESP],offset FLAT:??_7TemplateParameters@@6B@
		push	1
		lea	ECX,034h[ESP]
		call	near ptr ?setDim@Array@@QAEXI@Z
		mov	ECX,038h[ESP]
		lea	EDX,014h[ESP]
		mov	[ECX],EDX
		lea	ECX,044h[ESP]
		call	near ptr ??0Array@@QAE@XZ
		mov	dword ptr 044h[ESP],offset FLAT:??_7Objects@@6B@
		push	1
		lea	ECX,048h[ESP]
		call	near ptr ?setDim@Array@@QAEXI@Z
		lea	EDX,044h[ESP]
		push	EDX
		lea	ECX,034h[ESP]
		push	ECX
		mov	ECX,010h[EBX]
		mov	EDX,[ECX]
		push	dword ptr 01Ch[EBX]
		push	0
		call	dword ptr 09Ch[EDX]
		mov	EDI,EAX
		test	EAX,EAX
		je	L74B
		cmp	EDI,2
		je	L754
		cmp	dword ptr 018h[EBX],036h
		jne	L754
L74B:		mov	dword ptr 0Ch[EBX],2
		jmp short	L7B1
L754:		mov	dword ptr 0Ch[EBX],1
		mov	ECX,04Ch[ESP]
		mov	EAX,[ECX]
		test	EAX,EAX
		jne	L768
		mov	EAX,010h[EBX]
L768:		mov	058h[ESP],EAX
		push	060h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L792
		mov	ECX,EDI
		push	dword ptr 058h[ESP]
		push	dword ptr 014h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUType@@@Z
		mov	EDI,EAX
L792:		mov	EDX,[EDI]
		mov	ECX,EDI
		push	ESI
		call	dword ptr 040h[EDX]
		mov	ECX,ESI
		push	EDI
		call	near ptr ?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
		test	EBP,EBP
		je	L7B1
		push	1
		mov	EDX,[EDI]
		mov	ECX,EDI
		push	EBP
		push	ESI
		call	dword ptr 030h[EDX]
L7B1:		mov	dword ptr 044h[ESP],offset FLAT:??_7Objects@@6B@
		lea	ECX,044h[ESP]
		call	near ptr ??1Array@@UAE@XZ
		lea	ECX,030h[ESP]
		mov	dword ptr 030h[ESP],offset FLAT:??_7TemplateParameters@@6B@
		call	near ptr ??1Array@@UAE@XZ
		jmp	near ptr L86E
L7D8:		test	ECX,ECX
		je	L822
		push	060h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EDI,EAX
		test	EAX,EAX
		je	L801
		mov	ECX,EDI
		push	dword ptr 010h[EBX]
		push	dword ptr 014h[EBX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	near ptr ??0AliasDeclaration@@QAE@ULoc@@PAUIdentifier@@PAUType@@@Z
		mov	EDI,EAX
L801:		mov	EDX,[EDI]
		mov	ECX,EDI
		push	ESI
		call	dword ptr 040h[EDX]
		mov	ECX,ESI
		push	EDI
		call	near ptr ?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
		test	EBP,EBP
		je	L867
		push	1
		mov	EDX,[EDI]
		mov	ECX,EDI
		push	EBP
		push	ESI
		call	dword ptr 030h[EDX]
		jmp short	L867
L822:		mov	EDX,01Ch[EBX]
		test	EDX,EDX
		je	L867
		push	ESI
		mov	ECX,EDX
		mov	EDX,[EDX]
		push	dword ptr 8[EBX]
		push	dword ptr 4[EBX]
		call	dword ptr 030h[EDX]
		mov	01Ch[EBX],EAX
		cmp	dword ptr 018h[EBX],7
		jne	L851
		push	dword ptr 01Ch[EBX]
		mov	ECX,010h[EBX]
		mov	ESI,[ECX]
		call	dword ptr 078h[ESI]
		test	EAX,EAX
		jne	L867
		jmp short	L85E
L851:		push	EAX
		mov	ECX,010h[EBX]
		mov	EAX,[ECX]
		call	dword ptr 4[EAX]
		test	EAX,EAX
		jne	L867
L85E:		mov	dword ptr 0Ch[EBX],2
		jmp short	L86E
L867:		mov	dword ptr 0Ch[EBX],1
L86E:		cmp	dword ptr 0Ch[EBX],1
		mov	EAX,1
		je	L87B
		xor	EAX,EAX
L87B:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,04Ch
		ret	8
?toCBuffer@IftypeCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z:
		push	ECX
		push	EBX
		mov	EBX,0Ch[ESP]
		push	ESI
		mov	ESI,ECX
		mov	ECX,EBX
		push	offset FLAT:_DATA[01B8h]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ECX,010h[ESI]
		mov	EDX,[ECX]
		push	dword ptr 014h[ESP]
		push	dword ptr 014h[ESI]
		push	EBX
		call	dword ptr 038h[EDX]
		cmp	dword ptr 01Ch[ESI],0
		je	L8DF
		cmp	dword ptr 018h[ESI],7
		jne	L8C4
		push	offset FLAT:_DATA[01C0h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		jmp short	L8D0
L8C4:		push	offset FLAT:_DATA[01C4h]
		mov	ECX,EBX
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
L8D0:		push	dword ptr 014h[ESP]
		mov	ECX,01Ch[ESI]
		mov	EDX,[ECX]
		push	0
		push	EBX
		call	dword ptr 038h[EDX]
L8DF:		push	029h
		mov	ECX,EBX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		pop	ESI
		pop	EBX
		pop	EAX
		ret	8
_TEXT	ends
_DATA	segment
D0	db	064h,065h,062h,075h,067h,020h,028h,025h
	db	073h,029h,000h,000h
DC	db	064h,065h,062h,075h
	db	067h,020h,028h,025h,075h,029h,000h,044h
	db	069h,067h,069h,074h,061h,06ch,04dh,061h
	db	072h,073h,000h,058h,038h,036h,000h,058h
	db	038h,036h,05fh,036h,034h,000h,057h,069h
	db	06eh,064h,06fh,077h,073h,000h,057h,069h
	db	06eh,033h,032h,000h,057h,069h,06eh,036h
	db	034h,000h,06ch,069h,06eh,075h,078h,000h
	db	04fh,053h,058h,000h,046h,072h,065h,065h
	db	042h,053h,044h,000h,053h,06fh,06ch,061h
	db	072h,069h,073h,000h,04ch,069h,074h,074h
	db	06ch,065h,045h,06eh,064h,069h,061h,06eh
	db	000h,042h,069h,067h,045h,06eh,064h,069h
	db	061h,06eh,000h,061h,06ch,06ch,000h,06eh
	db	06fh,06eh,065h,000h
	dd	offset FLAT:_DATA[017h]
	dd	offset FLAT:_DATA[023h]
	dd	offset FLAT:_DATA[027h]
	dd	offset FLAT:_DATA[02Eh]
	dd	offset FLAT:_DATA[036h]
	dd	offset FLAT:_DATA[03Ch]
	dd	offset FLAT:_DATA[042h]
	dd	offset FLAT:_DATA[048h]
	dd	offset FLAT:_DATA[04Ch]
	dd	offset FLAT:_DATA[054h]
	dd	offset FLAT:_DATA[05Ch]
	dd	offset FLAT:_DATA[069h]
	dd	offset FLAT:_DATA[073h]
	dd	offset FLAT:_DATA[077h]
DB4	db	076h,065h,072h,073h
	db	069h,06fh,06eh,020h,069h,064h,065h,06eh
	db	074h,069h,066h,069h,065h,072h,020h,027h
	db	025h,073h,027h,020h,069h,073h,020h,072h
	db	065h,073h,065h,072h,076h,065h,064h,020h
	db	061h,06eh,064h,020h,063h,061h,06eh,06eh
	db	06fh,074h,020h,062h,065h,020h,073h,065h
	db	074h,000h,000h,000h
DEC	db	076h,065h,072h,073h
	db	069h,06fh,06eh,020h,028h,025h,073h,029h
	db	000h,000h,000h,000h
DFC	db	076h,065h,072h,073h
	db	069h,06fh,06eh,020h,028h,025h,075h,029h
	db	000h,000h,000h,000h
D10C	db	073h,074h,061h,074h
	db	069h,063h,020h,069h,066h,020h,063h,06fh
	db	06eh,064h,069h,074h,069h,06fh,06eh,061h
	db	06ch,020h,063h,061h,06eh,06eh,06fh,074h
	db	020h,062h,065h,020h,061h,074h,020h,067h
	db	06ch,06fh,062h,061h,06ch,020h,073h,063h
	db	06fh,070h,065h,000h
D13C	db	065h,078h,070h,072h
	db	065h,073h,073h,069h,06fh,06eh,020h,025h
	db	073h,020h,069h,073h,020h,06eh,06fh,074h
	db	020h,063h,06fh,06eh,073h,074h,061h,06eh
	db	074h,020h,06fh,072h,020h,064h,06fh,065h
	db	073h,020h,06eh,06fh,074h,020h,065h,076h
	db	061h,06ch,075h,061h,074h,065h,020h,074h
	db	06fh,020h,061h,020h,062h,06fh,06fh,06ch
	db	000h,000h,000h,000h
D17C	db	073h,074h,061h,074h
	db	069h,063h,020h,069h,066h,028h,000h,000h
D188	db	069h,066h,074h,079h,070h,065h,020h,063h
	db	06fh,06eh,064h,069h,074h,069h,06fh,06eh
	db	061h,06ch,020h,063h,061h,06eh,06eh,06fh
	db	074h,020h,062h,065h,020h,061h,074h,020h
	db	067h,06ch,06fh,062h,061h,06ch,020h,073h
	db	063h,06fh,070h,065h,000h,000h,000h,000h
D1B8	db	069h,066h,074h,079h,070h,065h,028h,000h
D1C0	db	020h,03ah,020h,000h
D1C4	db	020h,03dh,03dh,020h
	db	000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
??_7DVCondition@@6B@	comdat
	dd	offset FLAT:?syntaxCopy@DVCondition@@UAEPAUCondition@@XZ
	db	000h,000h,000h,000h
	db	000h,000h,000h,000h
??_7DVCondition@@6B@	ends
??_7DebugCondition@@6B@	comdat
	dd	offset FLAT:?syntaxCopy@DVCondition@@UAEPAUCondition@@XZ
	dd	offset FLAT:?include@DebugCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	dd	offset FLAT:?toCBuffer@DebugCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
??_7DebugCondition@@6B@	ends
??_7VersionCondition@@6B@	comdat
	dd	offset FLAT:?syntaxCopy@DVCondition@@UAEPAUCondition@@XZ
	dd	offset FLAT:?include@VersionCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	dd	offset FLAT:?toCBuffer@VersionCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
??_7VersionCondition@@6B@	ends
??_7StaticIfCondition@@6B@	comdat
	dd	offset FLAT:?syntaxCopy@StaticIfCondition@@UAEPAUCondition@@XZ
	dd	offset FLAT:?include@StaticIfCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	dd	offset FLAT:?toCBuffer@StaticIfCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
??_7StaticIfCondition@@6B@	ends
??_7IftypeCondition@@6B@	comdat
	dd	offset FLAT:?syntaxCopy@IftypeCondition@@UAEPAUCondition@@XZ
	dd	offset FLAT:?include@IftypeCondition@@UAEHPAUScope@@PAUScopeDsymbol@@@Z
	dd	offset FLAT:?toCBuffer@IftypeCondition@@UAEXPAUOutBuffer@@PAUHdrGenState@@@Z
??_7IftypeCondition@@6B@	ends
??_7TemplateParameters@@6B@	comdat
	dd	offset FLAT:??_GTemplateParameters@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Array@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7TemplateParameters@@6B@	ends
??_7Objects@@6B@	comdat
	dd	offset FLAT:??_GObjects@@UAEPAXI@Z
	dd	offset FLAT:?equals@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?hashCode@Object@@UAEIXZ
	dd	offset FLAT:?compare@Object@@UAEHPAU1@@Z
	dd	offset FLAT:?print@Object@@UAEXXZ
	dd	offset FLAT:?toChars@Array@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7Objects@@6B@	ends
??_GTemplateParameters@@UAEPAXI@Z	comdat
	assume	CS:??_GTemplateParameters@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L25
		mov	dword ptr [EBX],offset FLAT:??_7TemplateParameters@@6B@
		call	near ptr ??1Array@@UAE@XZ
		test	dword ptr 8[ESP],1
		je	L25
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L25:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GTemplateParameters@@UAEPAXI@Z	ends
??_GObjects@@UAEPAXI@Z	comdat
	assume	CS:??_GObjects@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L25
		mov	dword ptr [EBX],offset FLAT:??_7Objects@@6B@
		call	near ptr ??1Array@@UAE@XZ
		test	dword ptr 8[ESP],1
		je	L25
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L25:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GObjects@@UAEPAXI@Z	ends
	end
