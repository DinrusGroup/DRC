_TEXT	segment dword use32 public 'CODE'	;size is 1634
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 40
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 0
_BSS	ends
FLAT	group	
includelib SNN.lib
	extrn	___alloca
	extrn	__pctype
	extrn	__isctype
	extrn	___locale_mbsize
	extrn	??1OutBuffer@@UAE@XZ
	extrn	??1File@@UAE@XZ
	extrn	_putenv
	extrn	_strdup
	extrn	_memmove
	extrn	_strlen
	extrn	_memicmp
	extrn	?toChars@OutBuffer@@UAEPADXZ
	extrn	?writeByte@OutBuffer@@QAEXI@Z
	extrn	?writestring@OutBuffer@@QAEXPBD@Z
	extrn	_getenv
	extrn	_strupr
	extrn	_memcpy
	extrn	?reset@OutBuffer@@QAEXXZ
	extrn	?read@File@@QAEHXZ
	extrn	??0File@@QAE@PAD@Z
	extrn	?path@FileName@@SAPADPBD@Z
	extrn	?combine@FileName@@SAPADPBD0@Z
	extrn	?exists@FileName@@SAHPBD@Z
	extrn	?replaceName@FileName@@SAPBDPBD0@Z
	extrn	__imp__GetModuleFileNameA@12
	extrn	?absolute@FileName@@SAHPBD@Z
	extrn	??0OutBuffer@@QAE@XZ

	public	?inifile@@YAPBDPBD0@Z
	public	?skipspace@@YAPADPBD@Z
_TEXT	segment
	assume	CS:_TEXT
?inifile@@YAPBDPBD0@Z:
		push	EBP
		mov	EBP,ESP
		sub	ESP,016Ch
		push	EBX
		mov	EBX,0Ch[EBP]
		lea	ECX,-0154h[EBP]
		push	ESI
		mov	dword ptr -0160h[EBP],016Ch
		push	EDI
		call	near ptr ??0OutBuffer@@QAE@XZ
		mov	dword ptr -013Ch[EBP],0
		push	EBX
		call	near ptr ?absolute@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		jne	L48
		push	EBX
		call	near ptr ?exists@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		je	L4F
L48:		mov	EDI,EBX
		jmp	near ptr LEA
L4F:		push	EBX
		push	offset FLAT:_DATA
		call	near ptr _getenv
		add	ESP,4
		push	EAX
		call	near ptr ?combine@FileName@@SAPADPBD0@Z
		add	ESP,8
		mov	EDI,EAX
		push	EAX
		call	near ptr ?exists@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		jne	LEA
		push	0105h
		lea	EAX,-0138h[EBP]
		push	EAX
		push	0
		call	dword ptr __imp__GetModuleFileNameA@12
		test	EAX,EAX
		je	LBF
		lea	EDX,-0138h[EBP]
		push	EDX
		call	near ptr ?exists@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		je	LBF
		push	EBX
		lea	ECX,-0138h[EBP]
		push	ECX
		call	near ptr ?replaceName@FileName@@SAPBDPBD0@Z
		add	ESP,8
		mov	EDI,EAX
		push	EAX
		call	near ptr ?exists@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		jne	LEA
LBF:		push	EBX
		push	dword ptr 8[EBP]
		call	near ptr ?replaceName@FileName@@SAPBDPBD0@Z
		add	ESP,8
		mov	EDI,EAX
		push	EAX
		call	near ptr ?exists@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		jne	LEA
		push	EBX
		push	offset FLAT:_DATA[8]
		call	near ptr ?combine@FileName@@SAPADPBD0@Z
		mov	EDI,EAX
		add	ESP,8
LEA:		mov	-0158h[EBP],EDI
		push	dword ptr -0158h[EBP]
		call	near ptr ?path@FileName@@SAPADPBD@Z
		lea	ECX,-030h[EBP]
		mov	-015Ch[EBP],EAX
		push	dword ptr -0158h[EBP]
		call	near ptr ??0File@@QAE@PAD@Z
		add	ESP,4
		lea	ECX,-030h[EBP]
		call	near ptr ?read@File@@QAEHXZ
		test	EAX,EAX
		jne	L5CA
		xor	EAX,EAX
		mov	EDI,EAX
		mov	-018h[EBP],EAX
		cmp	-024h[EBP],EAX
		je	L5CA
L132:		cmp	EDI,-024h[EBP]
		mov	EBX,EDI
		jae	L178
L139:		mov	EDX,-028h[EBP]
		movzx	EAX,[EDI][EDX]
		cmp	EAX,0Dh
		je	L178
		cmp	EAX,0Ah
		je	L155
		test	EAX,EAX
		je	L169
		cmp	EAX,01Ah
		je	L169
		jmp short	L172
L155:		test	EDI,EDI
		je	L178
		mov	ECX,-028h[EBP]
		cmp	byte ptr -1[EDI][ECX],0Dh
		je	L5BA
		jmp short	L178
L169:		mov	dword ptr -018h[EBP],1
		jmp short	L178
L172:		inc	EDI
		cmp	EDI,-024h[EBP]
		jb	L139
L178:		mov	-0144h[EBP],EDI
		mov	EDI,-028h[EBP]
		add	EDI,EBX
		lea	ECX,-0154h[EBP]
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		xor	EDX,EDX
		mov	ESI,-0144h[EBP]
		mov	-0140h[EBP],EDX
		sub	ESI,EBX
		jle	L2C4
L1A4:		mov	ECX,-0140h[EBP]
		cmp	[ECX][EDI],025h
		jne	L29C
		lea	EBX,1[ECX]
		cmp	EBX,ESI
		jge	L29C
L1BF:		cmp	[EDI][EBX],025h
		jne	L293
		mov	EDX,EBX
		sub	EDX,-0140h[EBP]
		cmp	EDX,3
		mov	-0164h[EBP],EDX
		jne	L215
		push	2
		push	offset FLAT:_DATA[010h]
		mov	ECX,-0140h[EBP]
		lea	EAX,1[EDI][ECX]
		push	EAX
		call	near ptr _memicmp
		add	ESP,0Ch
		test	EAX,EAX
		jne	L215
		mov	-014h[EBP],ESI
		mov	EDX,-015Ch[EBP]
		mov	ESI,-015Ch[EBP]
		cmp	byte ptr [EDX],0
		jne	L27C
		mov	ESI,offset FLAT:_DATA[014h]
		jmp short	L27C
L215:		mov	EDX,-0164h[EBP]
		cmp	EDX,0Ah
		mov	-010h[EBP],EDX
		ja	L22B
		mov	-014h[EBP],ESI
		lea	ESI,-0Ch[EBP]
		jmp short	L241
L22B:		mov	-014h[EBP],ESI
		lea	ECX,-0160h[EBP]
		push	dword ptr -010h[EBP]
		call	near ptr ___alloca
		mov	ESI,EAX
		add	ESP,4
L241:		dec	dword ptr -010h[EBP]
		mov	ECX,-0140h[EBP]
		lea	EDX,1[EDI][ECX]
		push	dword ptr -010h[EBP]
		push	EDX
		push	ESI
		call	near ptr _memcpy
		mov	ECX,-010h[EBP]
		mov	[ECX][ESI],0
		push	ESI
		call	near ptr _strupr
		add	ESP,010h
		push	ESI
		call	near ptr _getenv
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		jne	L27C
		mov	ESI,offset FLAT:_DATA[018h]
L27C:		push	ESI
		lea	ECX,-0154h[EBP]
		call	near ptr ?writestring@OutBuffer@@QAEXPBD@Z
		mov	ESI,-014h[EBP]
		mov	-0140h[EBP],EBX
		jmp short	L2B2
L293:		inc	EBX
		cmp	EBX,ESI
		jl	L1BF
L29C:		mov	ECX,-0140h[EBP]
		movsx	EDX,[ECX][EDI]
		lea	ECX,-0154h[EBP]
		push	EDX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L2B2:		inc	dword ptr -0140h[EBP]
		cmp	-0140h[EBP],ESI
		jl	L1A4
L2C4:		cmp	dword ptr -014Ch[EBP],0
		mov	EDI,-0144h[EBP]
		je	L381
		mov	EAX,1
		cmp	___locale_mbsize,EAX
		jle	L306
		push	8
		mov	ESI,-0150h[EBP]
		mov	EDX,-014Ch[EBP]
		movzx	EBX,byte ptr -1[EDX][ESI]
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L381
		jmp short	L324
L306:		mov	EBX,-0150h[EBP]
		mov	ESI,-014Ch[EBP]
		movzx	ECX,byte ptr -1[ESI][EBX]
		mov	EAX,__pctype
		test	[ECX*2][EAX],8
		je	L381
L324:		dec	dword ptr -014Ch[EBP]
		cmp	dword ptr -014Ch[EBP],0
		je	L381
		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L362
		push	8
		mov	EBX,-0150h[EBP]
		mov	ESI,-014Ch[EBP]
		movzx	ECX,byte ptr -1[ESI][EBX]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L324
		jmp short	L381
L362:		mov	ECX,-0150h[EBP]
		mov	EBX,-014Ch[EBP]
		movzx	EAX,byte ptr -1[EBX][ECX]
		mov	EDX,__pctype
		test	[EAX*2][EDX],8
		jne	L324
L381:		lea	ECX,-0154h[EBP]
		call	near ptr ?toChars@OutBuffer@@UAEPADXZ
		push	EAX
		call	near ptr ?skipspace@@YAPADPBD@Z
		add	ESP,4
		mov	ESI,EAX
		movsx	ECX,byte ptr [EAX]
		cmp	ECX,03Bh
		je	L5BA
		test	ECX,ECX
		je	L5BA
		cmp	ECX,05Bh
		je	L3B5
		jmp	near ptr L475
L3B5:		lea	EDX,1[ESI]
		push	EDX
		call	near ptr ?skipspace@@YAPADPBD@Z
		add	ESP,4
		mov	ESI,EAX
		cmp	dword ptr ___locale_mbsize,1
		mov	EBX,EAX
		jle	L3E5
		push	0107h
		movsx	ECX,byte ptr [ESI]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L42C
		jmp short	L3F6
L3E5:		movsx	EDX,byte ptr [ESI]
		mov	ECX,__pctype
		test	[EDX*2][ECX],0107h
		je	L42C
L3F6:		inc	EBX
		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L41B
		push	0107h
		movsx	ECX,byte ptr [EBX]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L3F6
		jmp short	L42C
L41B:		movsx	ECX,byte ptr [EBX]
		mov	EDX,__pctype
		test	[ECX*2][EDX],0107h
		jne	L3F6
L42C:		mov	ECX,EBX
		sub	ECX,ESI
		cmp	ECX,0Bh
		jne	L466
		push	0Bh
		push	offset FLAT:_DATA[01Ch]
		push	ESI
		call	near ptr _memicmp
		add	ESP,0Ch
		test	EAX,EAX
		jne	L466
		push	EBX
		call	near ptr ?skipspace@@YAPADPBD@Z
		add	ESP,4
		cmp	byte ptr [EAX],05Dh
		jne	L466
		mov	dword ptr -013Ch[EBP],1
		jmp	near ptr L5BA
L466:		mov	dword ptr -013Ch[EBP],0
		jmp	near ptr L5BA
L475:		cmp	dword ptr -013Ch[EBP],0
		je	L5BA
		cmp	byte ptr [ESI],0
		mov	EBX,ESI
		je	L5A8
L48D:		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L4AE
		push	2
		movsx	ECX,byte ptr [ESI]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L4C6
		jmp short	L4BE
L4AE:		movsx	ECX,byte ptr [ESI]
		mov	EAX,__pctype
		test	[ECX*2][EAX],2
		je	L4C6
L4BE:		and	byte ptr [ESI],0DFh
		jmp	near ptr L59E
L4C6:		cmp	dword ptr ___locale_mbsize,1
		jle	L4E3
		push	8
		movsx	EDX,byte ptr [ESI]
		push	EDX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L510
		jmp short	L4F4
L4E3:		movsx	ECX,byte ptr [ESI]
		mov	EDX,__pctype
		test	[ECX*2][EDX],8
		je	L510
L4F4:		push	ESI
		call	near ptr _strlen
		add	ESP,4
		lea	EDX,1[ESI]
		push	EAX
		push	EDX
		push	ESI
		call	near ptr _memmove
		add	ESP,0Ch
		jmp	near ptr L59E
L510:		cmp	byte ptr [ESI],03Dh
		jne	L59E
		inc	ESI
		cmp	dword ptr ___locale_mbsize,1
		jle	L537
		push	8
		movsx	ECX,byte ptr [ESI]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L5A8
		jmp short	L548
L537:		movsx	EDX,byte ptr [ESI]
		mov	ECX,__pctype
		test	[EDX*2][ECX],8
		je	L5A8
L548:		lea	EDX,1[ESI]
		mov	-0168h[EBP],EDX
L551:		push	ESI
		call	near ptr _strlen
		add	ESP,4
		push	EAX
		push	dword ptr -0168h[EBP]
		push	ESI
		call	near ptr _memmove
		add	ESP,0Ch
		mov	ECX,1
		cmp	___locale_mbsize,ECX
		jle	L58B
		push	8
		movsx	EDX,byte ptr [ESI]
		push	EDX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L551
		jmp short	L5A8
L58B:		movsx	EDX,byte ptr [ESI]
		mov	ECX,__pctype
		test	[EDX*2][ECX],8
		jne	L551
		jmp short	L5A8
L59E:		inc	ESI
		cmp	byte ptr [ESI],0
		jne	L48D
L5A8:		push	EBX
		call	near ptr _strdup
		add	ESP,4
		push	EAX
		call	near ptr _putenv
		add	ESP,4
L5BA:		inc	EDI
		cmp	EDI,-024h[EBP]
		jae	L5CA
		cmp	dword ptr -018h[EBP],0
		je	L132
L5CA:		lea	ECX,-030h[EBP]
		call	near ptr ??1File@@UAE@XZ
		lea	ECX,-0154h[EBP]
		call	near ptr ??1OutBuffer@@UAE@XZ
		mov	EAX,-0158h[EBP]
		pop	EDI
		pop	ESI
		pop	EBX
		mov	ESP,EBP
		pop	EBP
		ret
		nop
		nop
		nop
		nop
		nop
		nop
?skipspace@@YAPADPBD@Z:
		push	EBX
		mov	EAX,1
		mov	EBX,8[ESP]
		push	ESI
		push	EDI
		cmp	___locale_mbsize,EAX
		jle	L618
		push	8
		movsx	ECX,byte ptr [EBX]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L65C
		jmp short	L629
L618:		movsx	EDX,byte ptr [EBX]
		mov	ESI,__pctype
		test	[EDX*2][ESI],8
		je	L65C
L629:		inc	EBX
		mov	EDI,1
		cmp	___locale_mbsize,EDI
		jle	L64B
		push	8
		movsx	EAX,byte ptr [EBX]
		push	EAX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L629
		jmp short	L65C
L64B:		movsx	ECX,byte ptr [EBX]
		mov	EDX,__pctype
		test	[ECX*2][EDX],8
		jne	L629
L65C:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBX
		ret
_TEXT	ends
_DATA	segment
D0	db	048h,04fh,04dh,045h,000h,000h,000h,000h
D8	db	02fh,065h,074h,063h,02fh,000h,000h,000h
D10	db	040h,050h,000h,000h
D14	db	02eh,000h,000h,000h
D18	db	000h,000h,000h,000h
D1C	db	045h,06eh,076h,069h
	db	072h,06fh,06eh,06dh,065h,06eh,074h,000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
	end
