_TEXT	segment dword use32 public 'CODE'	;size is 12301
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 3995
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 376
_BSS	ends
FLAT	group	
	comm	near ?tochars@Token@@2QAPBDA:byte:035ch

	public	??2Token@@SAPAXI@Z
	public	?toChars@Token@@QAEPBDXZ
	public	?toChars@Token@@SAPBDW4TOK@@@Z
	public	?freelist@Lexer@@2PAUToken@@A
	public	?stringtable@Lexer@@2UStringTable@@A
	public	?stringbuffer@Lexer@@2UOutBuffer@@A
	public	??0Lexer@@QAE@PAUModule@@PAEIIHH@Z
	public	?error@Lexer@@QAAXPBDZZ
	public	?error@Lexer@@QAAXULoc@@PBDZZ
	public	?nextToken@Lexer@@QAE?AW4TOK@@XZ
	public	?peek@Lexer@@QAEPAUToken@@PAU2@@Z
	public	?peekNext@Lexer@@QAE?AW4TOK@@XZ
	public	?peekNext2@Lexer@@QAE?AW4TOK@@XZ
	public	?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z
	public	?isValidIdentifier@Lexer@@SAHPAD@Z
	public	?scan@Lexer@@QAEXPAUToken@@@Z
	public	?escapeSequence@Lexer@@QAEIXZ
	public	?wysiwygStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z
	public	?hexStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
	public	?escapeStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z
	public	?charConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z
	public	?stringPostfix@Lexer@@QAEXPAUToken@@@Z
	public	?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
	public	?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
	public	?pragma@Lexer@@QAEXXZ
	public	?decodeUTF@Lexer@@QAEIXZ
	public	?getDocComment@Lexer@@QAEXPAUToken@@I@Z
	public	?combineComments@Lexer@@SAPAEPAE0@Z
	public	?idPool@Lexer@@SAPAUIdentifier@@PBD@Z
	public	?uniqueId@Lexer@@SAPAUIdentifier@@PBDH@Z
	public	?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z
	public	?isKeyword@Token@@QAEHXZ
XIFCB	segment dword use32 public 'DATA'	;size is 0
XIFCB	ends
XIFU	segment dword use32 public 'DATA'	;size is 4
XIFU	ends
XIFL	segment dword use32 public 'DATA'	;size is 0
XIFL	ends
XIFM	segment dword use32 public 'DATA'	;size is 0
XIFM	ends
XIFCE	segment dword use32 public 'DATA'	;size is 0
XIFCE	ends
XOFB	segment dword use32 public 'BSS'	;size is 0
XOFB	ends
XOF	segment dword use32 public 'BSS'	;size is 4
XOF	ends
XOFE	segment dword use32 public 'BSS'	;size is 0
XOFE	ends
includelib SNN.lib
	extrn	__fltused
	extrn	__fatexit
	extrn	??0OutBuffer@@QAE@XZ
	extrn	??0StringTable@@QAE@I@Z
	extrn	??1StringTable@@UAE@XZ
	extrn	??1OutBuffer@@UAE@XZ
	extrn	??0Identifier@@QAE@PBDH@Z
	extrn	??2@YAPAXI@Z
	extrn	?insert@StringTable@@QAEPAUStringValue@@PBDI@Z
	extrn	_strlen
	extrn	?global@@3UGlobal@@A
	extrn	_sprintf
	extrn	__assert
	extrn	?update@StringTable@@QAEPAUStringValue@@PBDI@Z
	extrn	_memcpy
	extrn	?malloc@Mem@@QAEPAXI@Z
	extrn	?mem@@3UMem@@A
	extrn	?extractData@OutBuffer@@QAEPAXXZ
	extrn	?writeByte@OutBuffer@@QAEXI@Z
	extrn	?utf_decodeChar@@YAPBDPAEIPAI1@Z
	extrn	?strdup@Mem@@QAEPADPBD@Z
	extrn	?reset@OutBuffer@@QAEXXZ
	extrn	_memcmp
	extrn	?line@Id@@2PAUIdentifier@@A
	extrn	__errno
	extrn	___locale_decpoint
	extrn	_strtod
	extrn	_strtof
	extrn	_strtold
	extrn	__pctype
	extrn	__isctype
	extrn	___locale_mbsize
	extrn	_strtoull
	extrn	?writeUTF8@OutBuffer@@QAEXI@Z
	extrn	?toChars@Loc@@QAEPADXZ
	extrn	?HtmlNamedEntity@@YAHPAEH@Z
	extrn	?utf_isValidDchar@@YAHI@Z
	extrn	?isUniAlpha@@YAHI@Z
	extrn	?VERSIONX@Id@@2PAUIdentifier@@A
	extrn	?TIMESTAMP@Id@@2PAUIdentifier@@A
	extrn	?VENDOR@Id@@2PAUIdentifier@@A
	extrn	?TIME@Id@@2PAUIdentifier@@A
	extrn	?DATE@Id@@2PAUIdentifier@@A
	extrn	?LINE@Id@@2PAUIdentifier@@A
	extrn	?FILE@Id@@2PAUIdentifier@@A
	extrn	_ctime
	extrn	_time
	extrn	?fatal@@YAXXZ
	extrn	_fflush
	extrn	_fprintf
	extrn	_vfprintf
	extrn	__iob
	extrn	?free@Mem@@QAEXPAX@Z
	extrn	_memset
	extrn	??0Loc@@QAE@PAUModule@@I@Z
	extrn	?printf@OutBuffer@@QAAXPBDZZ

	public	?initKeywords@Lexer@@SAXXZ
	public	___SD?%lexer_c2095706190_
	public	___SI?%lexer_c2095706190_
_TEXT	segment
	assume	CS:_TEXT
L0:		push	EAX
		push	EBX
		xor	EBX,EBX
		push	ESI
L5:		cmp	EBX,030h
		jb	L16
		cmp	EBX,037h
		ja	L16
		or	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EBX],1
L16:		mov	EAX,1
		cmp	___locale_mbsize,EAX
		jle	L34
		push	4
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L56
		jmp short	L42
L34:		mov	ECX,__pctype
		test	[EBX*2][ECX],4
		jne	L56
L42:		cmp	EBX,061h
		jb	L4C
		cmp	EBX,066h
		jbe	L56
L4C:		cmp	EBX,041h
		jb	L5D
		cmp	EBX,046h
		ja	L5D
L56:		or	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EBX],2
L5D:		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L7E
		push	0107h
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L91
		jmp short	L8C
L7E:		mov	ESI,__pctype
		test	[EBX*2][ESI],0107h
		jne	L91
L8C:		cmp	EBX,05Fh
		jne	L98
L91:		or	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EBX],4
L98:		inc	EBX
		cmp	EBX,0100h
		jb	L5
		pop	ESI
		pop	EBX
		pop	EAX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
??2Token@@SAPAXI@Z:
		push	EAX
		cmp	dword ptr ?freelist@Lexer@@2PAUToken@@A,0
		je	LD1
		mov	EAX,?freelist@Lexer@@2PAUToken@@A
		mov	ECX,?freelist@Lexer@@2PAUToken@@A
		mov	EDX,[EAX]
		mov	?freelist@Lexer@@2PAUToken@@A,EDX
		mov	EAX,ECX
		pop	ECX
		ret
LD1:		push	dword ptr 8[ESP]
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		pop	ECX
		ret
		nop
?toChars@Token@@QAEPBDXZ:
		sub	ESP,018h
		push	EBX
		push	ESI
		mov	ESI,ECX
		mov	EBX,8[ESI]
		push	EDI
		sub	EBX,06Ch
		mov	EDI,offset FLAT:_BSS
		cmp	EBX,032h
		ja	L382
		jmp	dword ptr FLAT:_DATA[05Ch][EBX*4]
		push	dword ptr 018h[ESI]
		push	offset FLAT:_DATA
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,0Ch
		jmp	near ptr L38F
		push	dword ptr 018h[ESI]
		push	offset FLAT:_DATA[4]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,0Ch
		jmp	near ptr L38F
		push	dword ptr 01Ch[ESI]
		push	dword ptr 018h[ESI]
		push	offset FLAT:_DATA[8]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,010h
		jmp	near ptr L38F
		push	dword ptr 01Ch[ESI]
		push	dword ptr 018h[ESI]
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,010h
		jmp	near ptr L38F
		fld	tbyte ptr 018h[ESI]
		sub	ESP,0Ch
		fstp	tbyte ptr [ESP]
		push	offset FLAT:_DATA[018h]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,014h
		jmp	near ptr L38F
		fld	tbyte ptr 018h[ESI]
		sub	ESP,0Ch
		fstp	tbyte ptr [ESP]
		push	offset FLAT:_DATA[020h]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,014h
		jmp	near ptr L38F
		fld	tbyte ptr 018h[ESI]
		sub	ESP,0Ch
		fstp	tbyte ptr [ESP]
		push	offset FLAT:_DATA[024h]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,014h
		jmp	near ptr L38F
		fld	tbyte ptr 018h[ESI]
		sub	ESP,0Ch
		fstp	tbyte ptr [ESP]
		push	offset FLAT:_DATA[02Ch]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,014h
		jmp	near ptr L38F
		fld	tbyte ptr 018h[ESI]
		sub	ESP,0Ch
		fstp	tbyte ptr [ESP]
		push	offset FLAT:_DATA[034h]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,014h
		jmp	near ptr L38F
		fld	tbyte ptr 018h[ESI]
		sub	ESP,0Ch
		fstp	tbyte ptr [ESP]
		push	offset FLAT:_DATA[03Ch]
		push	offset FLAT:_BSS
		call	near ptr _sprintf
		add	ESP,014h
		jmp	near ptr L38F
		lea	ECX,0Ch[ESP]
		call	near ptr ??0OutBuffer@@QAE@XZ
		push	022h
		lea	ECX,010h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		xor	EAX,EAX
		mov	01Ch[ESP],EAX
		mov	EBX,01Ch[ESI]
		cmp	EBX,EAX
		jbe	L339
L256:		lea	EDX,020h[ESP]
		push	EDX
		lea	EDI,020h[ESP]
		push	EDI
		push	dword ptr 01Ch[ESI]
		push	dword ptr 018h[ESI]
		call	near ptr ?utf_decodeChar@@YAPBDPAEIPAI1@Z
		add	ESP,010h
		mov	ECX,020h[ESP]
		test	ECX,ECX
		je	L339
		cmp	ECX,022h
		je	L286
		cmp	ECX,05Ch
		je	L286
		jmp short	L291
L286:		push	05Ch
		lea	ECX,010h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L291:		mov	EAX,1
		cmp	___locale_mbsize,EAX
		jle	L2B5
		push	0157h
		push	dword ptr 024h[ESP]
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L2E3
		jmp short	L2C7
L2B5:		mov	EDX,020h[ESP]
		mov	EBX,__pctype
		test	[EDX*2][EBX],0157h
		je	L2E3
L2C7:		push	dword ptr 020h[ESP]
		lea	ECX,010h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L2D4:		mov	EBX,01Ch[ESI]
		cmp	EBX,01Ch[ESP]
		ja	L256
		jmp short	L339
L2E3:		mov	EDI,020h[ESP]
		cmp	EDI,07Fh
		ja	L304
		push	dword ptr 020h[ESP]
		push	offset FLAT:_DATA[044h]
		lea	EDX,014h[ESP]
		push	EDX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L2D4
L304:		cmp	EDI,0FFFFh
		ja	L324
		push	dword ptr 020h[ESP]
		push	offset FLAT:_DATA[04Ch]
		lea	EAX,014h[ESP]
		push	EAX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L2D4
L324:		push	EDI
		push	offset FLAT:_DATA[054h]
		lea	ECX,014h[ESP]
		push	ECX
		call	near ptr ?printf@OutBuffer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L2D4
L339:		push	022h
		lea	ECX,010h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		cmp	byte ptr 020h[ESI],0
		je	L355
		push	022h
		lea	ECX,010h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L355:		push	0
		lea	ECX,010h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		lea	ECX,0Ch[ESP]
		call	near ptr ?extractData@OutBuffer@@QAEPAXXZ
		mov	EDI,EAX
		lea	ECX,0Ch[ESP]
		call	near ptr ??1OutBuffer@@UAE@XZ
		jmp short	L38F
		mov	ECX,018h[ESI]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	EDI,EAX
		jmp short	L38F
L382:		push	dword ptr 8[ESI]
		call	near ptr ?toChars@Token@@SAPBDW4TOK@@@Z
		mov	EDI,EAX
		add	ESP,4
L38F:		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,018h
		ret
?toChars@Token@@SAPBDW4TOK@@@Z:
		push	EBX
		mov	EAX,8[ESP]
		mov	EBX,?tochars@Token@@2QAPBDA[EAX*4]
		test	EBX,EBX
		jne	L3C1
		push	EAX
		mov	ECX,offset FLAT:_BSS[010h]
		push	offset FLAT:_DATA[0128h]
		push	ECX
		call	near ptr _sprintf
		mov	EBX,offset FLAT:_BSS[010h]
		add	ESP,0Ch
L3C1:		mov	EAX,EBX
		pop	EBX
		ret
??0Lexer@@QAE@PAUModule@@PAEIIHH@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,014h[ESP]
		push	1
		push	dword ptr 014h[ESP]
		call	near ptr ??0Loc@@QAE@PAUModule@@I@Z
		lea	ECX,018h[EBX]
		push	028h
		push	0
		push	ECX
		call	near ptr _memset
		mov	EDX,028h[ESP]
		lea	ECX,[EDX][ESI]
		mov	0Ch[EBX],ECX
		mov	EDX,024h[ESP]
		lea	ECX,[EDX][ESI]
		mov	010h[EBX],ECX
		mov	EDX,01Ch[ESP]
		mov	ECX,02Ch[ESP]
		mov	040h[EBX],EDX
		mov	EDX,030h[ESP]
		mov	8[EBX],ESI
		mov	044h[EBX],ECX
		mov	dword ptr 048h[EBX],0
		mov	04Ch[EBX],EDX
		add	ESP,0Ch
		mov	ECX,010h[EBX]
		cmp	byte ptr [ECX],023h
		jne	L489
		cmp	byte ptr 1[ECX],021h
		jne	L489
		add	dword ptr 010h[EBX],2
		jmp short	L461
L430:		inc	dword ptr 010h[EBX]
		mov	ESI,010h[EBX]
		cmp	byte ptr [ESI],0Ah
		jne	L482
L43B:		inc	dword ptr 010h[EBX]
		jmp short	L482
L440:		test	CL,080h
		je	L45E
		mov	ECX,EBX
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	ESI,EAX
		cmp	EAX,02029h
		je	L482
		cmp	ESI,02028h
		je	L482
L45E:		inc	dword ptr 010h[EBX]
L461:		mov	EAX,010h[EBX]
		mov	CL,[EAX]
		mov	EAX,ECX
		and	EAX,0FFh
		cmp	EAX,0Ah
		je	L43B
		cmp	EAX,0Dh
		je	L430
		test	EAX,EAX
		je	L482
		cmp	EAX,01Ah
		je	L482
		jmp short	L440
L482:		mov	dword ptr 4[EBX],2
L489:		pop	ESI
		mov	EAX,EBX
		pop	EBX
		pop	ECX
		ret	018h
?error@Lexer@@QAAXPBDZZ:
		push	EAX
		mov	EAX,8[ESP]
		push	EBX
		push	ESI
		cmp	dword ptr 040h[EAX],0
		je	L509
		cmp	dword ptr ?global@@3UGlobal@@A[0100h],0
		jne	L509
		mov	ECX,EAX
		call	near ptr ?toChars@Loc@@QAEPADXZ
		mov	EBX,EAX
		cmp	byte ptr [EAX],0
		je	L4C8
		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[4]
		push	offset FLAT:__iob[040h]
		call	near ptr _fprintf
		add	ESP,0Ch
L4C8:		push	EBX
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		call	near ptr ?free@Mem@@QAEXPAX@Z
		lea	EDX,018h[ESP]
		mov	ESI,offset FLAT:__iob[040h]
		push	EDX
		push	dword ptr 018h[ESP]
		push	ESI
		call	near ptr _vfprintf
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0Ch]
		push	ESI
		call	near ptr _fprintf
		push	ESI
		call	near ptr _fflush
		add	ESP,018h
		cmp	dword ptr ?global@@3UGlobal@@A[0F8h],014h
		jb	L509
		call	near ptr ?fatal@@YAXXZ
L509:		inc	dword ptr ?global@@3UGlobal@@A[0F8h]
		pop	ESI
		pop	EBX
		pop	EAX
		ret
?error@Lexer@@QAAXULoc@@PBDZZ:
		push	EAX
		mov	EAX,8[ESP]
		push	EBX
		push	ESI
		cmp	dword ptr 040h[EAX],0
		je	L58D
		cmp	dword ptr ?global@@3UGlobal@@A[0100h],0
		jne	L58D
		lea	ECX,014h[ESP]
		call	near ptr ?toChars@Loc@@QAEPADXZ
		mov	EBX,EAX
		cmp	byte ptr [EAX],0
		je	L54C
		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[4]
		push	offset FLAT:__iob[040h]
		call	near ptr _fprintf
		add	ESP,0Ch
L54C:		push	EBX
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		call	near ptr ?free@Mem@@QAEXPAX@Z
		lea	EDX,020h[ESP]
		mov	ESI,offset FLAT:__iob[040h]
		push	EDX
		push	dword ptr 020h[ESP]
		push	ESI
		call	near ptr _vfprintf
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0Ch]
		push	ESI
		call	near ptr _fprintf
		push	ESI
		call	near ptr _fflush
		add	ESP,018h
		cmp	dword ptr ?global@@3UGlobal@@A[0F8h],014h
		jb	L58D
		call	near ptr ?fatal@@YAXXZ
L58D:		inc	dword ptr ?global@@3UGlobal@@A[0F8h]
		pop	ESI
		pop	EBX
		pop	EAX
		ret
?nextToken@Lexer@@QAE?AW4TOK@@XZ:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		cmp	dword ptr 018h[ECX],0
		je	L5C4
		push	028h
		mov	ESI,018h[EBX]
		lea	EDX,018h[EBX]
		push	ESI
		push	EDX
		call	near ptr _memcpy
		mov	ECX,?freelist@Lexer@@2PAUToken@@A
		mov	[ESI],ECX
		mov	?freelist@Lexer@@2PAUToken@@A,ESI
		add	ESP,0Ch
		jmp short	L5CD
L5C4:		lea	EAX,018h[EBX]
		push	EAX
		call	near ptr ?scan@Lexer@@QAEXPAUToken@@@Z
L5CD:		mov	EAX,020h[EBX]
		pop	ESI
		pop	EBX
		pop	ECX
		ret
?peek@Lexer@@QAEPAUToken@@PAU2@@Z:
		push	ECX
		mov	EDX,8[ESP]
		push	ECX
		push	EBX
		cmp	dword ptr [EDX],0
		je	L5E4
		mov	EBX,[EDX]
		jmp short	L60A
L5E4:		mov	010h[ESP],EDX
		push	028h
		call	near ptr ??2Token@@SAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		push	EAX
		mov	ECX,0Ch[ESP]
		call	near ptr ?scan@Lexer@@QAEXPAUToken@@@Z
		mov	EAX,010h[ESP]
		mov	dword ptr [EBX],0
		mov	[EAX],EBX
L60A:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret	4
?peekNext@Lexer@@QAE?AW4TOK@@XZ:
		push	ECX
		lea	EAX,018h[ECX]
		push	EAX
		call	near ptr ?peek@Lexer@@QAEPAUToken@@PAU2@@Z
		mov	EAX,8[EAX]
		pop	ECX
		ret
?peekNext2@Lexer@@QAE?AW4TOK@@XZ:
		push	EBX
		lea	EAX,018h[ECX]
		mov	EBX,ECX
		push	EAX
		call	near ptr ?peek@Lexer@@QAEPAUToken@@PAU2@@Z
		mov	ECX,EBX
		push	EAX
		call	near ptr ?peek@Lexer@@QAEPAUToken@@PAU2@@Z
		mov	EAX,8[EAX]
		pop	EBX
		ret
		nop
		nop
		nop
		nop
		nop
?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z:
		push	ECX
		push	EBX
		push	EBP
		xor	EBP,EBP
		push	ESI
		mov	ESI,014h[ESP]
		push	EDI
		mov	EDI,ECX
		mov	dword ptr 010h[ESP],1
		jmp short	L65B
		inc	dword ptr 010h[ESP]
L65B:		push	ESI
		mov	ECX,EDI
		call	near ptr ?peek@Lexer@@QAEPAUToken@@PAU2@@Z
		mov	EBX,8[EAX]
		sub	EBX,1
		mov	ESI,EAX
		cmp	EBX,0Ah
		ja	L65B
		jmp	dword ptr ?freelist@Lexer@@2PAUToken@@A[010h][EBX*4]
		dec	dword ptr 010h[ESP]
		cmp	dword ptr 010h[ESP],0
		jne	L65B
		push	ESI
		mov	ECX,EDI
		call	near ptr ?peek@Lexer@@QAEPAUToken@@PAU2@@Z
		mov	ESI,EAX
		jmp short	L69C
		inc	EBP
		jmp short	L65B
		dec	EBP
		test	EBP,EBP
		jns	L65B
		jmp short	L69C
		test	EBP,EBP
		jne	L65B
L69C:		pop	EDI
		mov	EAX,ESI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
?isValidIdentifier@Lexer@@SAHPAD@Z:
		sub	ESP,0Ch
		push	EBX
		mov	EBX,014h[ESP]
		test	EBX,EBX
		push	ESI
		je	L766
		cmp	byte ptr [EBX],0
		je	L766
		mov	AL,[EBX]
		cmp	AL,030h
		jl	L6CE
		cmp	AL,039h
		jle	L766
L6CE:		push	EBX
		call	near ptr _strlen
		mov	ESI,EAX
		mov	dword ptr 010h[ESP],0
		add	ESP,4
L6E1:		mov	ECX,0Ch[ESP]
		cmp	[ECX][EBX],0
		je	L75B
		lea	EDX,010h[ESP]
		push	EDX
		lea	ECX,010h[ESP]
		push	ECX
		push	ESI
		push	EBX
		call	near ptr ?utf_decodeChar@@YAPBDPAEIPAI1@Z
		add	ESP,010h
		test	EAX,EAX
		jne	L766
		mov	EDX,010h[ESP]
		cmp	EDX,080h
		jb	L71C
		push	EDX
		call	near ptr ?isUniAlpha@@YAHI@Z
		add	ESP,4
		test	EAX,EAX
		jne	L6E1
L71C:		mov	ECX,1
		cmp	___locale_mbsize,ECX
		jle	L740
		push	0107h
		push	dword ptr 014h[ESP]
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L6E1
		jmp short	L752
L740:		mov	EDX,010h[ESP]
		mov	ECX,__pctype
		test	[EDX*2][ECX],0107h
		jne	L6E1
L752:		cmp	dword ptr 010h[ESP],05Fh
		je	L6E1
		jmp short	L766
L75B:		pop	ESI
		mov	EAX,1
		pop	EBX
		add	ESP,0Ch
		ret
L766:		pop	ESI
		xor	EAX,EAX
		pop	EBX
		add	ESP,0Ch
		ret
		nop
		nop
?scan@Lexer@@QAEXPAUToken@@@Z:
		sub	ESP,014h
		push	EBX
		push	EBP
		push	ESI
		mov	ESI,ECX
		mov	EDX,4[ESI]
		push	EDI
		mov	EDI,028h[ESP]
		mov	010h[ESP],EDX
		xor	EDX,EDX
		mov	0Ch[EDI],EDX
		mov	010h[EDI],EDX
		jmp	near ptr L1406
		mov	dword ptr 8[EDI],0Bh
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],0Ah
		je	L1406
		inc	dword ptr 4[ESI]
		jmp	near ptr L1406
		push	EDI
		mov	ECX,ESI
		call	near ptr ?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
		mov	8[EDI],EAX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		push	0
		mov	ECX,ESI
		push	EDI
		call	near ptr ?charConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z
		mov	8[EDI],EAX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		mov	EDX,010h[ESI]
		cmp	byte ptr 1[EDX],022h
		jne	L8F0
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		movzx	ECX,byte ptr [EDX]
		push	ECX
		mov	ECX,ESI
		push	EDI
		call	near ptr ?wysiwygStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z
		mov	8[EDI],EAX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		mov	EDX,010h[ESI]
		cmp	byte ptr 1[EDX],022h
		jne	L8F0
		inc	dword ptr 010h[ESI]
		mov	ECX,ESI
		push	EDI
		call	near ptr ?hexStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
		mov	8[EDI],EAX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		push	0
		mov	ECX,ESI
		push	EDI
		call	near ptr ?escapeStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z
		mov	8[EDI],EAX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?reset@OutBuffer@@QAEXXZ
L857:		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		movzx	ECX,byte ptr [EDX]
		cmp	ECX,075h
		je	L871
		cmp	ECX,055h
		je	L871
		cmp	ECX,026h
		je	L871
		jmp short	L885
L871:		mov	ECX,ESI
		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EAX
		call	near ptr ?writeUTF8@OutBuffer@@QAEXI@Z
		jmp short	L897
L885:		mov	ECX,ESI
		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EAX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L897:		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],05Ch
		je	L857
		push	0
		mov	EAX,?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		mov	01Ch[EDI],EAX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		call	near ptr ?malloc@Mem@@QAEPAXI@Z
		mov	018h[EDI],EAX
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		push	EAX
		call	near ptr _memcpy
		mov	byte ptr 020h[EDI],0
		mov	dword ptr 8[EDI],07Ah
		add	ESP,0Ch
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
L8F0:		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	AL,[EDX]
		movzx	ECX,AL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][ECX],4
		jne	L8F0
		test	AL,080h
		je	L932
		mov	EBX,EDX
		mov	ECX,ESI
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EBP,EAX
		push	EAX
		call	near ptr ?isUniAlpha@@YAHI@Z
		add	ESP,4
		test	EAX,EAX
		jne	L8F0
		push	EBP
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[03Ch]
		push	ESI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	010h[ESI],EBX
		add	ESP,0Ch
L932:		mov	EDX,010h[ESI]
		mov	ECX,4[EDI]
		sub	EDX,ECX
		push	EDX
		push	ECX
		mov	ECX,offset FLAT:?stringtable@Lexer@@2UStringTable@@A
		call	near ptr ?update@StringTable@@QAEPAUStringValue@@PBDI@Z
		mov	EBX,[EAX]
		test	EBX,EBX
		mov	018h[ESP],EAX
		jne	L97B
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L973
		push	079h
		mov	EDX,01Ch[ESP]
		lea	ECX,8[EDX]
		push	ECX
		mov	ECX,EBP
		call	near ptr ??0Identifier@@QAE@PBDH@Z
		mov	EBP,EAX
L973:		mov	EDX,018h[ESP]
		mov	EBX,EBP
		mov	[EDX],EBP
L97B:		mov	018h[EDI],EBX
		mov	ECX,4[EBX]
		mov	8[EDI],ECX
		mov	dword ptr 048h[ESI],1
		mov	EDX,4[EDI]
		cmp	byte ptr [EDX],05Fh
		jne	L147A
		cmp	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[010h],0
		jne	LA0E
		lea	ECX,01Ch[ESP]
		push	ECX
		call	near ptr _time
		lea	EDX,020h[ESP]
		push	EDX
		call	near ptr _ctime
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		jne	L9D1
		push	02B6h
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[064h]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06Ch]
		call	near ptr __assert
L9D1:		lea	ECX,014h[EBP]
		lea	EDX,4[EBP]
		push	ECX
		push	EDX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[070h]
		push	offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A[010h]
		call	near ptr _sprintf
		lea	ECX,0Bh[EBP]
		push	ECX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07Ch]
		push	offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A[01Ch]
		call	near ptr _sprintf
		push	EBP
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[084h]
		push	offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A[028h]
		call	near ptr _sprintf
		add	ESP,02Ch
LA0E:		mov	EDX,040h[ESI]
		test	EDX,EDX
		je	LA35
		cmp	EBX,?FILE@Id@@2PAUIdentifier@@A
		jne	LA35
		mov	ECX,[ESI]
		test	ECX,ECX
		jne	LA30
		mov	EDX,040h[ESI]
		mov	ECX,4[EDX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	ECX,EAX
LA30:		mov	018h[EDI],ECX
		jmp short	LA9A
LA35:		test	EDX,EDX
		je	LA58
		cmp	EBX,?LINE@Id@@2PAUIdentifier@@A
		jne	LA58
		mov	dword ptr 8[EDI],06Eh
		mov	EBX,4[ESI]
		xor	EDX,EDX
		mov	018h[EDI],EBX
		mov	01Ch[EDI],EDX
		jmp	near ptr L147A
LA58:		cmp	EBX,?DATE@Id@@2PAUIdentifier@@A
		jne	LA69
		mov	dword ptr 018h[EDI],offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A[010h]
		jmp short	LA9A
LA69:		cmp	EBX,?TIME@Id@@2PAUIdentifier@@A
		jne	LA7A
		mov	dword ptr 018h[EDI],offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A[01Ch]
		jmp short	LA9A
LA7A:		cmp	EBX,?VENDOR@Id@@2PAUIdentifier@@A
		jne	LA8B
		mov	dword ptr 018h[EDI],offset FLAT:?freelist@Lexer@@2PAUToken@@A[08Ch]
		jmp short	LA9A
LA8B:		cmp	EBX,?TIMESTAMP@Id@@2PAUIdentifier@@A
		jne	LAB8
		mov	dword ptr 018h[EDI],offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A[028h]
LA9A:		mov	dword ptr 8[EDI],07Ah
		mov	byte ptr 020h[EDI],0
		push	dword ptr 018h[EDI]
		call	near ptr _strlen
		mov	01Ch[EDI],EAX
		add	ESP,4
		jmp	near ptr L147A
LAB8:		cmp	EBX,?VERSIONX@Id@@2PAUIdentifier@@A
		jne	L147A
		xor	ECX,ECX
		mov	EBP,?global@@3UGlobal@@A[03Ch]
		mov	ESI,ECX
		mov	020h[ESP],ECX
		inc	EBP
LAD3:		mov	EDX,1
		mov	BL,0[EBP]
		cmp	___locale_mbsize,EDX
		jle	LAF7
		push	4
		movsx	ECX,BL
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	LB14
		jmp short	LB08
LAF7:		movsx	ECX,BL
		mov	EDX,__pctype
		test	[ECX*2][EDX],4
		je	LB14
LB08:		movsx	ECX,BL
		lea	ESI,[ESI*4][ESI]
		lea	ESI,-030h[ESI*2][ECX]
		jmp short	LB1F
LB14:		cmp	BL,02Eh
		jne	LB22
		mov	020h[ESP],ESI
		xor	ESI,ESI
LB1F:		inc	EBP
		jmp short	LAD3
LB22:		mov	dword ptr 8[EDI],06Eh
		mov	ECX,020h[ESP]
		xor	EDX,EDX
		imul	EAX,ECX,03E8h
		add	EAX,ESI
		mov	018h[EDI],EAX
		mov	01Ch[EDI],EDX
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		movzx	EAX,byte ptr [EDX]
		cmp	EAX,03Dh
		je	LB6C
		cmp	EAX,02Ah
		je	LB80
		cmp	EAX,02Fh
		je	LC5B
		cmp	EAX,02Bh
		je	LD73
		jmp	near ptr LEB1
LB6C:		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],055h
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LB80:		inc	dword ptr 010h[ESI]
		mov	EDX,4[ESI]
		mov	014h[ESP],EDX
		jmp short	LBED
LB8C:		inc	dword ptr 4[ESI]
		inc	dword ptr 010h[ESI]
		jmp short	LBED
LB94:		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],0Ah
		je	LBED
		inc	dword ptr 4[ESI]
		jmp short	LBED
LBA4:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[09Ch]
		push	ESI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EDX,0Ch[ESI]
		mov	010h[ESI],EDX
		mov	dword ptr 8[EDI],0Bh
		add	ESP,8
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LBC9:		test	DL,080h
		je	LBEA
		mov	ECX,ESI
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EBX,EAX
		cmp	EAX,02029h
		je	LBE7
		cmp	EBX,02028h
		jne	LBEA
LBE7:		inc	dword ptr 4[ESI]
LBEA:		inc	dword ptr 010h[ESI]
LBED:		mov	ECX,010h[ESI]
		mov	DL,[ECX]
		mov	EAX,EDX
		and	EAX,0FFh
		cmp	EAX,02Fh
		je	LC13
		cmp	EAX,0Ah
		je	LB8C
		cmp	EAX,0Dh
		je	LB94
		test	EAX,EAX
		je	LBA4
		cmp	EAX,01Ah
		je	LBA4
		jmp short	LBC9
LC13:		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	ECX,02Ah
		cmp	-2[EDX],CL
		jne	LBED
		lea	EAX,-3[EDX]
		cmp	EAX,4[EDI]
		je	LBED
		cmp	dword ptr 04Ch[ESI],0
		jne	LE5F
		cmp	dword ptr 044h[ESI],0
		je	L1406
		mov	EBX,4[EDI]
		cmp	2[EBX],CL
		jne	L1406
		lea	EDX,-4[EDX]
		cmp	EDX,EBX
		jne	LE92
		jmp	near ptr L1406
LC5B:		mov	EDX,4[ESI]
		mov	014h[ESP],EDX
LC62:		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		mov	DL,[ECX]
		mov	EAX,EDX
		and	EAX,0FFh
		cmp	EAX,0Ah
		je	LD22
		cmp	EAX,0Dh
		je	LC8A
		test	EAX,EAX
		je	LC9F
		cmp	EAX,01Ah
		je	LC9F
		jmp short	LCFC
LC8A:		mov	EDX,010h[ESI]
		cmp	byte ptr 1[EDX],0Ah
		jne	LD22
		inc	dword ptr 010h[ESI]
		jmp	near ptr LD22
LC9F:		cmp	dword ptr 04Ch[ESI],0
		je	LCBC
		mov	ECX,0Ch[ESI]
		mov	010h[ESI],ECX
		mov	dword ptr 8[EDI],02Eh
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LCBC:		cmp	dword ptr 044h[ESI],0
		je	LCE5
		mov	EDX,4[EDI]
		cmp	byte ptr 2[EDX],02Fh
		jne	LCE5
		mov	ECX,010h[ESP]
		mov	EDX,1
		cmp	ECX,014h[ESP]
		je	LCDC
		xor	EDX,EDX
LCDC:		mov	ECX,ESI
		push	EDX
		push	EDI
		call	near ptr ?getDocComment@Lexer@@QAEXPAUToken@@I@Z
LCE5:		mov	EDX,0Ch[ESI]
		mov	010h[ESI],EDX
		mov	dword ptr 8[EDI],0Bh
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LCFC:		test	DL,080h
		je	LC62
		mov	ECX,ESI
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EBX,EAX
		cmp	EAX,02029h
		je	LD22
		cmp	EBX,02028h
		jne	LC62
LD22:		cmp	dword ptr 04Ch[ESI],0
		je	LD3F
		inc	dword ptr 010h[ESI]
		inc	dword ptr 4[ESI]
		mov	dword ptr 8[EDI],02Eh
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LD3F:		cmp	dword ptr 044h[ESI],0
		je	LD68
		mov	EDX,4[EDI]
		cmp	byte ptr 2[EDX],02Fh
		jne	LD68
		mov	ECX,010h[ESP]
		mov	EDX,1
		cmp	ECX,014h[ESP]
		je	LD5F
		xor	EDX,EDX
LD5F:		mov	ECX,ESI
		push	EDX
		push	EDI
		call	near ptr ?getDocComment@Lexer@@QAEXPAUToken@@I@Z
LD68:		inc	dword ptr 010h[ESI]
		inc	dword ptr 4[ESI]
		jmp	near ptr L1406
LD73:		inc	dword ptr 010h[ESI]
		mov	ECX,4[ESI]
		mov	EBX,1
		mov	014h[ESP],ECX
		jmp	near ptr LE16
LD87:		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],02Bh
		jne	LE16
		inc	dword ptr 010h[ESI]
		inc	EBX
		jmp short	LE16
LD9C:		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],02Fh
		jne	LE16
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		dec	EBX
		jne	LE16
		jmp	near ptr LE59
LDB5:		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],0Ah
		je	LE16
		inc	dword ptr 4[ESI]
		jmp short	LE16
LDC5:		inc	dword ptr 4[ESI]
		inc	dword ptr 010h[ESI]
		jmp short	LE16
LDCD:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0B8h]
		push	ESI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EDX,0Ch[ESI]
		mov	010h[ESI],EDX
		mov	dword ptr 8[EDI],0Bh
		add	ESP,8
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LDF2:		test	DL,080h
		je	LE13
		mov	ECX,ESI
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EBP,EAX
		cmp	EAX,02029h
		je	LE10
		cmp	EBP,02028h
		jne	LE13
LE10:		inc	dword ptr 4[ESI]
LE13:		inc	dword ptr 010h[ESI]
LE16:		mov	ECX,010h[ESI]
		mov	DL,[ECX]
		mov	EAX,EDX
		and	EAX,0FFh
		cmp	EAX,02Fh
		je	LD87
		cmp	EAX,02Bh
		je	LD9C
		cmp	EAX,0Dh
		je	LDB5
		cmp	EAX,0Ah
		je	LDC5
		test	EAX,EAX
		je	LDCD
		cmp	EAX,01Ah
		je	LDCD
		jmp short	LDF2
LE59:		cmp	dword ptr 04Ch[ESI],0
		je	LE70
LE5F:		mov	dword ptr 8[EDI],02Eh
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
LE70:		cmp	dword ptr 044h[ESI],0
		je	L1406
		mov	EDX,4[EDI]
		cmp	byte ptr 2[EDX],02Bh
		jne	L1406
		lea	ECX,-4[ECX]
		cmp	ECX,EDX
		je	L1406
LE92:		mov	ECX,010h[ESP]
		mov	EDX,1
		cmp	ECX,014h[ESP]
		je	LEA3
		xor	EDX,EDX
LEA3:		mov	ECX,ESI
		push	EDX
		push	EDI
		call	near ptr ?getDocComment@Lexer@@QAEXPAUToken@@I@Z
		jmp	near ptr L1406
LEB1:		mov	dword ptr 8[EDI],052h
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	ECX,1
		mov	EDX,010h[ESI]
		cmp	___locale_mbsize,ECX
		jle	LEE9
		push	4
		movzx	EAX,byte ptr [EDX]
		push	EAX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	LF0D
		jmp short	LEFA
LEE9:		movzx	EBX,byte ptr [EDX]
		mov	EDX,__pctype
		test	[EBX*2][EDX],4
		je	LF0D
LEFA:		dec	dword ptr 010h[ESI]
		mov	ECX,ESI
		push	EDI
		call	near ptr ?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
		mov	8[EDI],EAX
		jmp	near ptr L147A
LF0D:		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],02Eh
		jne	LF3D
		mov	EDX,010h[ESI]
		cmp	byte ptr 1[EDX],02Eh
		jne	LF2E
		add	dword ptr 010h[ESI],2
		mov	dword ptr 8[EDI],0Ah
		jmp	near ptr L147A
LF2E:		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],01Fh
		jmp	near ptr L147A
LF3D:		mov	dword ptr 8[EDI],064h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	CL,[EDX]
		cmp	CL,03Dh
		jne	LF65
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],05Ah
		jmp	near ptr L147A
LF65:		cmp	CL,026h
		jne	LF79
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],068h
		jmp	near ptr L147A
LF79:		mov	dword ptr 8[EDI],057h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	CL,[EDX]
		cmp	CL,03Dh
		jne	LFA1
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],05Bh
		jmp	near ptr L147A
LFA1:		cmp	CL,07Ch
		jne	LFB5
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],069h
		jmp	near ptr L147A
LFB5:		mov	dword ptr 8[EDI],058h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	CL,[EDX]
		cmp	CL,03Dh
		jne	LFDD
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],050h
		jmp	near ptr L147A
LFDD:		cmp	CL,02Dh
		jne	LFF1
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],061h
		jmp	near ptr L147A
LFF1:		mov	dword ptr 8[EDI],04Eh
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	CL,[EDX]
		cmp	CL,03Dh
		jne	L1019
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],04Fh
		jmp	near ptr L147A
L1019:		cmp	CL,02Bh
		jne	L102D
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],060h
		jmp	near ptr L147A
L102D:		mov	dword ptr 8[EDI],04Dh
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	CL,[EDX]
		cmp	CL,03Dh
		jne	L1055
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],034h
		jmp	near ptr L147A
L1055:		cmp	CL,03Ch
		jne	L1080
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],03Dh
		jne	L1074
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],047h
		jmp	near ptr L147A
L1074:		mov	dword ptr 8[EDI],045h
		jmp	near ptr L147A
L1080:		cmp	CL,03Eh
		jne	L10AB
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],03Dh
		jne	L109F
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],03Fh
		jmp	near ptr L147A
L109F:		mov	dword ptr 8[EDI],03Eh
		jmp	near ptr L147A
L10AB:		mov	dword ptr 8[EDI],032h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		mov	DL,[ECX]
		cmp	DL,03Dh
		jne	L10D3
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],035h
		jmp	near ptr L147A
L10D3:		cmp	DL,03Eh
		jne	L112B
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		mov	DL,[ECX]
		cmp	DL,03Dh
		jne	L10F4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],048h
		jmp	near ptr L147A
L10F4:		cmp	DL,03Eh
		jne	L111F
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],03Dh
		jne	L1113
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],04Ah
		jmp	near ptr L147A
L1113:		mov	dword ptr 8[EDI],049h
		jmp	near ptr L147A
L111F:		mov	dword ptr 8[EDI],046h
		jmp	near ptr L147A
L112B:		mov	dword ptr 8[EDI],033h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		mov	CL,[EDX]
		cmp	CL,03Dh
		jne	L1173
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],03Dh
		jne	L1167
		cmp	byte ptr ?global@@3UGlobal@@A[065h],1
		jne	L1167
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],039h
		jmp	near ptr L147A
L1167:		mov	dword ptr 8[EDI],037h
		jmp	near ptr L147A
L1173:		cmp	CL,03Ch
		jne	L11CB
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		mov	DL,[ECX]
		cmp	DL,03Eh
		jne	L11AB
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],03Dh
		jne	L119F
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],03Dh
		jmp	near ptr L147A
L119F:		mov	dword ptr 8[EDI],044h
		jmp	near ptr L147A
L11AB:		cmp	DL,03Dh
		jne	L11BF
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],043h
		jmp	near ptr L147A
L11BF:		mov	dword ptr 8[EDI],042h
		jmp	near ptr L147A
L11CB:		cmp	CL,03Eh
		jne	L11F6
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],03Dh
		jne	L11EA
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],041h
		jmp	near ptr L147A
L11EA:		mov	dword ptr 8[EDI],040h
		jmp	near ptr L147A
L11F6:		mov	dword ptr 8[EDI],05Eh
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],03Dh
		jne	L123C
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],03Dh
		jne	L1230
		cmp	byte ptr ?global@@3UGlobal@@A[065h],1
		jne	L1230
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],038h
		jmp	near ptr L147A
L1230:		mov	dword ptr 8[EDI],036h
		jmp	near ptr L147A
L123C:		mov	dword ptr 8[EDI],05Dh
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],03Dh
		jne	L1262
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],04Ch
		jmp	near ptr L147A
L1262:		mov	dword ptr 8[EDI],05Fh
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],1
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],2
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],3
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],4
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],5
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],6
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],067h
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],066h
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],9
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],7
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],023h
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],03Dh
		jne	L1364
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],054h
		jmp	near ptr L147A
L1364:		mov	dword ptr 8[EDI],051h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	ECX,010h[ESI]
		cmp	byte ptr [ECX],03Dh
		jne	L138A
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],056h
		jmp	near ptr L147A
L138A:		mov	dword ptr 8[EDI],053h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	EDX,010h[ESI]
		cmp	byte ptr [EDX],03Dh
		jne	L13B0
		inc	dword ptr 010h[ESI]
		mov	dword ptr 8[EDI],05Ch
		jmp	near ptr L147A
L13B0:		mov	dword ptr 8[EDI],059h
		jmp	near ptr L147A
		inc	dword ptr 010h[ESI]
		mov	ECX,ESI
		call	near ptr ?pragma@Lexer@@QAEXXZ
		jmp short	L1406
L13C8:		mov	ECX,010h[ESI]
		movzx	EBX,byte ptr [ECX]
		test	EBX,080h
		je	L141E
		mov	ECX,ESI
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EBX,EAX
		push	EAX
		call	near ptr ?isUniAlpha@@YAHI@Z
		add	ESP,4
		test	EAX,EAX
		jne	L8F0
		cmp	EBX,02029h
		je	L1400
		cmp	EBX,02028h
		jne	L141E
L1400:		inc	dword ptr 4[ESI]
		inc	dword ptr 010h[ESI]
L1406:		mov	ECX,010h[ESI]
		mov	4[EDI],ECX
		mov	EDX,010h[ESI]
		movzx	EBX,byte ptr [EDX]
		cmp	EBX,07Eh
		ja	L13C8
		jmp	dword ptr ?freelist@Lexer@@2PAUToken@@A[0104h][EBX*4]
L141E:		cmp	EBX,080h
		jae	L1466
		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L1447
		push	0157h
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L1466
		jmp short	L1455
L1447:		mov	ECX,__pctype
		test	[EBX*2][ECX],0157h
		je	L1466
L1455:		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D4h]
		push	ESI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L1475
L1466:		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0ECh]
		push	ESI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
L1475:		inc	dword ptr 010h[ESI]
		jmp short	L1406
L147A:		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
?escapeSequence@Lexer@@QAEIXZ:
		sub	ESP,0Ch
		mov	EDX,010h[ECX]
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,ECX
		movzx	EBX,byte ptr [EDX]
		mov	EAX,EBX
		cmp	EBX,027h
		je	L169A
		cmp	EAX,022h
		je	L169A
		cmp	EAX,03Fh
		je	L169A
		cmp	EAX,05Ch
		je	L169A
		cmp	EAX,061h
		je	L150A
		cmp	EAX,062h
		je	L1514
		cmp	EAX,066h
		je	L151E
		cmp	EAX,06Eh
		je	L1528
		cmp	EAX,072h
		je	L1532
		cmp	EAX,074h
		je	L153C
		cmp	EAX,076h
		je	L1546
		cmp	EAX,075h
		je	L1550
		cmp	EAX,055h
		je	L1557
		cmp	EAX,078h
		je	L155E
		cmp	EAX,026h
		je	L1662
		test	EAX,EAX
		je	L173B
		cmp	EAX,01Ah
		je	L173B
		jmp	near ptr L1742
L150A:		mov	EBX,7
		jmp	near ptr L169A
L1514:		mov	EBX,8
		jmp	near ptr L169A
L151E:		mov	EBX,0Ch
		jmp	near ptr L169A
L1528:		mov	EBX,0Ah
		jmp	near ptr L169A
L1532:		mov	EBX,0Dh
		jmp	near ptr L169A
L153C:		mov	EBX,9
		jmp	near ptr L169A
L1546:		mov	EBX,0Bh
		jmp	near ptr L169A
L1550:		mov	ESI,4
		jmp short	L1563
L1557:		mov	ESI,8
		jmp short	L1563
L155E:		mov	ESI,2
L1563:		inc	dword ptr 010h[EDI]
		mov	EDX,010h[EDI]
		movzx	EBX,byte ptr [EDX]
		movzx	EDX,BL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EDX],2
		je	L164E
		mov	014h[ESP],ESI
		xor	ESI,ESI
		xor	EBP,EBP
L1584:		mov	ECX,1
		cmp	___locale_mbsize,ECX
		jle	L15A2
		push	4
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L15B5
		jmp short	L15B0
L15A2:		mov	EDX,__pctype
		test	[EBX*2][EDX],4
		je	L15B5
L15B0:		add	EBX,0FFFFFFD0h
		jmp short	L15E5
L15B5:		cmp	dword ptr ___locale_mbsize,1
		jle	L15CF
		push	2
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L15E2
		jmp short	L15DD
L15CF:		mov	ECX,__pctype
		test	[EBX*2][ECX],2
		je	L15E2
L15DD:		add	EBX,0FFFFFFA9h
		jmp short	L15E5
L15E2:		add	EBX,0FFFFFFC9h
L15E5:		inc	dword ptr 010h[EDI]
		shl	EBP,4
		add	EBP,EBX
		mov	EDX,010h[EDI]
		movzx	EBX,byte ptr [EDX]
		inc	ESI
		cmp	ESI,014h[ESP]
		je	L161D
		movzx	ECX,BL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][ECX],2
		jne	L1584
		push	dword ptr 014h[ESP]
		push	ESI
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0300h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,010h
L161D:		mov	ESI,014h[ESP]
		cmp	ESI,2
		je	L1647
		push	EBP
		call	near ptr ?utf_isValidDchar@@YAHI@Z
		add	ESP,4
		test	EAX,EAX
		jne	L1647
		push	EBP
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0334h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EBP,03Fh
		add	ESP,0Ch
L1647:		mov	EBX,EBP
		jmp	near ptr L17A1
L164E:		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0354h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp	near ptr L17A1
L1662:		inc	dword ptr 010h[EDI]
		mov	ESI,010h[EDI]
		jmp	near ptr L1727
L166D:		sub	EDX,ESI
		push	EDX
		push	ESI
		call	near ptr ?HtmlNamedEntity@@YAHPAEH@Z
		add	ESP,8
		mov	EBX,EAX
		cmp	EAX,0FFFFFFFFh
		jne	L169A
		push	ESI
		mov	ECX,010h[EDI]
		sub	ECX,ESI
		push	ECX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0378h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EBX,020h
		add	ESP,010h
L169A:		inc	dword ptr 010h[EDI]
		jmp	near ptr L17A1
L16A2:		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L16C9
		mov	ECX,010h[EDI]
		push	0103h
		movzx	ECX,byte ptr [ECX]
		push	ECX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L1724
		jmp short	L16DC
L16C9:		mov	ECX,010h[EDI]
		movzx	ECX,byte ptr [ECX]
		mov	EAX,__pctype
		test	[ECX*2][EAX],0103h
		jne	L1724
L16DC:		lea	EDX,1[ESI]
		mov	ECX,010h[EDI]
		cmp	EDX,ECX
		je	L1714
		cmp	dword ptr ___locale_mbsize,1
		jle	L1703
		push	4
		movzx	EDX,byte ptr [ECX]
		push	EDX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L1724
		jmp short	L1714
L1703:		movzx	EDX,byte ptr [ECX]
		mov	ECX,__pctype
		test	[EDX*2][ECX],4
		jne	L1724
L1714:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0398h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
		jmp short	L17A1
L1724:		inc	dword ptr 010h[EDI]
L1727:		mov	EDX,010h[EDI]
		movzx	ECX,byte ptr [EDX]
		cmp	ECX,03Bh
		je	L166D
		jmp	near ptr L16A2
L173B:		mov	EBX,05Ch
		jmp short	L17A1
L1742:		movzx	EDX,BL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EDX],1
		je	L1792
		xor	ESI,ESI
		xor	EAX,EAX
L1752:		inc	dword ptr 010h[EDI]
		lea	EAX,-030h[EAX*8][EBX]
		mov	ECX,010h[EDI]
		movzx	EBX,byte ptr [ECX]
		inc	ESI
		cmp	ESI,3
		jge	L1771
		movzx	EDX,BL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EDX],1
		jne	L1752
L1771:		mov	EBX,EAX
		cmp	EAX,0FFh
		jbe	L17A1
		mov	018h[ESP],EAX
		push	dword ptr 018h[ESP]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[03B4h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp short	L17A1
L1792:		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[03D0h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
L17A1:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret
		nop
		nop
		nop
		nop
		nop
?wysiwygStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,ECX
		mov	EDX,4[EBX]
		push	ESI
		mov	EAX,[EBX]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EDI
		mov	EDI,01Ch[ESP]
		mov	0Ch[ESP],EAX
		mov	010h[ESP],EDX
		inc	dword ptr 010h[EBX]
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		jmp	near ptr L18CB
L17DA:		inc	dword ptr 4[EBX]
		jmp	near ptr L190D
L17E2:		mov	EDX,010h[EBX]
		cmp	byte ptr [EDX],0Ah
		je	L18CB
		inc	dword ptr 4[EBX]
		mov	ESI,0Ah
		jmp	near ptr L190D
L17FB:		mov	EDI,018h[ESP]
		lea	ECX,0Ch[ESP]
		call	near ptr ?toChars@Loc@@QAEPADXZ
		push	EAX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[03F0h]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EAX,07Ah
		mov	dword ptr 018h[EDI],offset FLAT:?freelist@Lexer@@2PAUToken@@A[041Ch]
		mov	dword ptr 01Ch[EDI],0
		mov	byte ptr 020h[EDI],0
		add	ESP,0Ch
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	8
L1837:		cmp	ESI,EDI
		jne	L190D
		mov	EDI,018h[ESP]
		mov	ECX,?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		mov	01Ch[EDI],ECX
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	0
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		call	near ptr ?malloc@Mem@@QAEPAXI@Z
		mov	018h[EDI],EAX
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		push	EAX
		call	near ptr _memcpy
		mov	ECX,EBX
		push	EDI
		call	near ptr ?stringPostfix@Lexer@@QAEXPAUToken@@@Z
		add	ESP,0Ch
		mov	EAX,07Ah
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	8
L1896:		test	ESI,080h
		je	L190D
		dec	dword ptr 010h[EBX]
		mov	ECX,EBX
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	ESI,EAX
		inc	dword ptr 010h[EBX]
		cmp	ESI,02029h
		je	L18BD
		cmp	ESI,02028h
		jne	L18C0
L18BD:		inc	dword ptr 4[EBX]
L18C0:		push	ESI
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeUTF8@OutBuffer@@QAEXI@Z
L18CB:		mov	EDX,010h[EBX]
		movzx	ESI,byte ptr [EDX]
		mov	EAX,ESI
		inc	dword ptr 010h[EBX]
		cmp	ESI,0Ah
		je	L17DA
		cmp	EAX,0Dh
		je	L17E2
		test	EAX,EAX
		je	L17FB
		cmp	EAX,01Ah
		je	L17FB
		cmp	EAX,022h
		je	L1837
		cmp	EAX,060h
		je	L1837
		jmp short	L1896
L190D:		push	ESI
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		jmp short	L18CB
		nop
		nop
		nop
		nop
		nop
		nop
?hexStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@@Z:
		sub	ESP,0Ch
		mov	EDX,4[ECX]
		push	EBX
		mov	EBX,ECX
		mov	EAX,[EBX]
		push	EBP
		xor	EBP,EBP
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	ESI
		push	EDI
		mov	010h[ESP],EAX
		mov	014h[ESP],EDX
		inc	dword ptr 010h[EBX]
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		jmp	near ptr L1AB7
L194A:		mov	EDX,010h[EBX]
		cmp	byte ptr [EDX],0Ah
		je	L1AB7
L1956:		inc	dword ptr 4[EBX]
		jmp	near ptr L1AB7
L195E:		mov	EBP,020h[ESP]
		lea	ECX,010h[ESP]
		call	near ptr ?toChars@Loc@@QAEPADXZ
		push	EAX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[03F0h]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EAX,07Ah
		mov	dword ptr 018h[EBP],offset FLAT:?freelist@Lexer@@2PAUToken@@A[041Ch]
		mov	dword ptr 01Ch[EBP],0
		mov	byte ptr 020h[EBP],0
		add	ESP,0Ch
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret	4
L199B:		test	EBP,1
		je	L19BD
		push	EBP
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0420h]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EDI
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		add	ESP,0Ch
L19BD:		mov	EBP,020h[ESP]
		mov	ESI,?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		mov	01Ch[EBP],ESI
		push	0
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		call	near ptr ?malloc@Mem@@QAEPAXI@Z
		mov	018h[EBP],EAX
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		push	EAX
		call	near ptr _memcpy
		mov	ECX,EBX
		push	EBP
		call	near ptr ?stringPostfix@Lexer@@QAEXPAUToken@@@Z
		add	ESP,0Ch
		mov	EAX,07Ah
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret	4
L1A15:		cmp	ESI,030h
		jb	L1A24
		cmp	ESI,039h
		ja	L1A24
		add	ESI,0FFFFFFD0h
		jmp short	L1A9A
L1A24:		cmp	ESI,061h
		jb	L1A33
		cmp	ESI,066h
		ja	L1A33
		add	ESI,0FFFFFFA9h
		jmp short	L1A9A
L1A33:		cmp	ESI,041h
		jb	L1A42
		cmp	ESI,046h
		ja	L1A42
		add	ESI,0FFFFFFC9h
		jmp short	L1A9A
L1A42:		test	ESI,080h
		je	L1A8B
		mov	018h[ESP],EDI
		mov	ECX,EBX
		dec	dword ptr 010h[EBX]
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EDI,EAX
		inc	dword ptr 010h[EBX]
		cmp	EDI,02029h
		je	L1A6D
		cmp	EDI,02028h
		jne	L1A76
L1A6D:		inc	dword ptr 4[EBX]
		mov	EDI,018h[ESP]
		jmp short	L1A9A
L1A76:		push	EDI
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0450h]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
		mov	EDI,018h[ESP]
		jmp short	L1A9A
L1A8B:		push	ESI
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[046Ch]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
L1A9A:		test	EBP,1
		je	L1AB4
		shl	EDI,4
		or	EDI,ESI
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EDI
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		jmp short	L1AB6
L1AB4:		mov	EDI,ESI
L1AB6:		inc	EBP
L1AB7:		mov	EDX,010h[EBX]
		movzx	ESI,byte ptr [EDX]
		mov	EAX,ESI
		inc	dword ptr 010h[EBX]
		cmp	ESI,020h
		je	L1AB7
		cmp	EAX,9
		je	L1AB7
		cmp	EAX,0Bh
		je	L1AB7
		cmp	EAX,0Ch
		je	L1AB7
		cmp	EAX,0Dh
		je	L194A
		cmp	EAX,0Ah
		je	L1956
		test	EAX,EAX
		je	L195E
		cmp	EAX,01Ah
		je	L195E
		cmp	EAX,022h
		je	L199B
		jmp	near ptr L1A15
?escapeStringConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z:
		push	ECX
		push	ECX
		push	EBX
		mov	EBX,ECX
		mov	EDX,4[EBX]
		push	ESI
		mov	EAX,[EBX]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EDI
		mov	EDI,018h[ESP]
		mov	0Ch[ESP],EAX
		mov	010h[ESP],EDX
		inc	dword ptr 010h[EBX]
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		jmp	near ptr L1C56
L1B31:		mov	EDX,010h[EBX]
		movzx	ECX,byte ptr [EDX]
		cmp	ECX,075h
		je	L1B48
		cmp	ECX,055h
		je	L1B48
		cmp	ECX,026h
		je	L1B48
		jmp short	L1B5F
L1B48:		mov	ECX,EBX
		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	EAX
		call	near ptr ?writeUTF8@OutBuffer@@QAEXI@Z
		jmp	near ptr L1C56
L1B5F:		mov	ECX,EBX
		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		mov	ESI,EAX
		jmp	near ptr L1C9B
L1B6D:		inc	dword ptr 4[EBX]
		jmp	near ptr L1C9B
L1B75:		mov	EDX,010h[EBX]
		cmp	byte ptr [EDX],0Ah
		je	L1C56
		inc	dword ptr 4[EBX]
		mov	ESI,0Ah
		jmp	near ptr L1C9B
L1B8E:		push	0
		mov	EDX,?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		mov	01Ch[EDI],EDX
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		call	near ptr ?malloc@Mem@@QAEPAXI@Z
		mov	018h[EDI],EAX
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h]
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		push	EAX
		call	near ptr _memcpy
		mov	ECX,EBX
		push	EDI
		call	near ptr ?stringPostfix@Lexer@@QAEXPAUToken@@@Z
		add	ESP,0Ch
		mov	EAX,07Ah
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	8
L1BE1:		dec	dword ptr 010h[EBX]
		lea	ECX,0Ch[ESP]
		call	near ptr ?toChars@Loc@@QAEPADXZ
		push	EAX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[03F0h]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EAX,07Ah
		mov	dword ptr 018h[EDI],offset FLAT:?freelist@Lexer@@2PAUToken@@A[041Ch]
		mov	dword ptr 01Ch[EDI],0
		mov	byte ptr 020h[EDI],0
		add	ESP,0Ch
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,8
		ret	8
L1C1C:		test	ESI,080h
		je	L1C9B
		dec	dword ptr 010h[EBX]
		mov	ECX,EBX
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	ESI,EAX
		cmp	EAX,02028h
		je	L1C40
		cmp	ESI,02029h
		jne	L1C48
L1C40:		inc	dword ptr 4[EBX]
		mov	ESI,0Ah
L1C48:		inc	dword ptr 010h[EBX]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	ESI
		call	near ptr ?writeUTF8@OutBuffer@@QAEXI@Z
L1C56:		mov	EDX,010h[EBX]
		movzx	ESI,byte ptr [EDX]
		mov	EAX,ESI
		inc	dword ptr 010h[EBX]
		cmp	ESI,05Ch
		je	L1B31
		cmp	EAX,0Ah
		je	L1B6D
		cmp	EAX,0Dh
		je	L1B75
		cmp	EAX,022h
		je	L1B8E
		test	EAX,EAX
		je	L1BE1
		cmp	EAX,01Ah
		je	L1BE1
		jmp	near ptr L1C1C
L1C9B:		push	ESI
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		jmp short	L1C56
?charConstant@Lexer@@QAE?AW4TOK@@PAUToken@@H@Z:
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	EDI
		mov	EDI,076h
		inc	dword ptr 010h[EBX]
		mov	EDX,010h[EBX]
		movzx	ESI,byte ptr [EDX]
		inc	dword ptr 010h[EBX]
		mov	EDX,010h[EBX]
		mov	EAX,ESI
		cmp	ESI,05Ch
		je	L1CF2
		cmp	EAX,0Ah
		je	L1D41
		cmp	EAX,0Dh
		je	L1DA5
		test	EAX,EAX
		je	L1DA5
		cmp	EAX,01Ah
		je	L1DA5
		cmp	EAX,027h
		je	L1DA5
		jmp short	L1D46
L1CF2:		mov	ESI,010h[ESP]
		movzx	EAX,byte ptr [EDX]
		cmp	EAX,075h
		je	L1D0A
		cmp	EAX,055h
		je	L1D1E
		cmp	EAX,026h
		je	L1D1E
		jmp short	L1D32
L1D0A:		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		xor	EDX,EDX
		mov	EDI,077h
		mov	018h[ESI],EAX
		mov	01Ch[ESI],EDX
		jmp short	L1D9D
L1D1E:		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		xor	ECX,ECX
		mov	EDI,078h
		mov	018h[ESI],EAX
		mov	01Ch[ESI],ECX
		jmp short	L1D9D
L1D32:		call	near ptr ?escapeSequence@Lexer@@QAEIXZ
		xor	ECX,ECX
		mov	018h[ESI],EAX
		mov	01Ch[ESI],ECX
		jmp short	L1D9D
L1D41:		inc	dword ptr 4[EBX]
		jmp short	L1DA5
L1D46:		test	ESI,080h
		je	L1D8F
		dec	dword ptr 010h[EBX]
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	ESI,EAX
		inc	dword ptr 010h[EBX]
		cmp	ESI,02028h
		je	L1D41
		cmp	ESI,02029h
		je	L1D41
		cmp	ESI,0D800h
		jb	L1D83
		cmp	ESI,0E000h
		jb	L1D8A
		cmp	ESI,0FFFEh
		jae	L1D8A
L1D83:		mov	EDI,077h
		jmp short	L1D8F
L1D8A:		mov	EDI,078h
L1D8F:		mov	ECX,010h[ESP]
		mov	EAX,ESI
		xor	EDX,EDX
		mov	018h[ECX],EAX
		mov	01Ch[ECX],EDX
L1D9D:		mov	EDX,010h[EBX]
		cmp	byte ptr [EDX],027h
		je	L1DBB
L1DA5:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0484h]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		ret	8
L1DBB:		inc	dword ptr 010h[EBX]
		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		ret	8
?stringPostfix@Lexer@@QAEXPAUToken@@@Z:
		push	EBX
		mov	EBX,ECX
		mov	EDX,010h[ECX]
		push	ESI
		push	EDI
		movzx	EAX,byte ptr [EDX]
		cmp	EAX,063h
		je	L1DE2
		cmp	EAX,077h
		je	L1DE2
		cmp	EAX,064h
		je	L1DE2
		jmp short	L1DF3
L1DE2:		mov	ESI,010h[EBX]
		mov	EDI,010h[ESP]
		mov	AL,[ESI]
		mov	020h[EDI],AL
		inc	dword ptr 010h[EBX]
		jmp short	L1DFB
L1DF3:		mov	EBX,010h[ESP]
		mov	byte ptr 020h[EBX],0
L1DFB:		pop	EDI
		pop	ESI
		pop	EBX
		ret	4
?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z:
		sub	ESP,014h
		push	EBX
		push	EBP
		mov	EBP,1
		push	ESI
		xor	ESI,ESI
		push	EDI
		mov	EDI,ECX
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		mov	EDX,010h[EDI]
		mov	014h[ESP],EDX
L1E22:		mov	ECX,010h[EDI]
		movzx	EBX,byte ptr [ECX]
		cmp	ESI,0Ah
		ja	L20D0
		jmp	dword ptr ?freelist@Lexer@@2PAUToken@@A[056Ch][ESI*4]
		cmp	EBX,030h
		jne	L1E47
		mov	ESI,1
		jmp	near ptr L20E4
L1E47:		mov	ESI,2
		jmp	near ptr L20E4
		and	EBP,0FFFFFFFEh
		mov	EAX,EBX
		cmp	EBX,058h
		je	L1EC4
		cmp	EAX,078h
		je	L1EC4
		cmp	EAX,02Eh
		je	L1ECE
		cmp	EAX,069h
		je	L1F73
		cmp	EAX,066h
		je	L1F73
		cmp	EAX,046h
		je	L1F73
		cmp	EAX,042h
		je	L1EE0
		cmp	EAX,062h
		je	L1EE0
		cmp	EAX,030h
		je	L1EEA
		cmp	EAX,031h
		je	L1EEA
		cmp	EAX,032h
		je	L1EEA
		cmp	EAX,033h
		je	L1EEA
		cmp	EAX,034h
		je	L1EEA
		cmp	EAX,035h
		je	L1EEA
		cmp	EAX,036h
		je	L1EEA
		cmp	EAX,037h
		je	L1EEA
		cmp	EAX,05Fh
		je	L1EF4
		cmp	EAX,04Ch
		je	L1F01
		jmp	near ptr L20F7
L1EC4:		mov	ESI,7
		jmp	near ptr L20E4
L1ECE:		mov	ECX,010h[EDI]
		cmp	byte ptr 1[ECX],02Eh
		je	L20F7
		jmp	near ptr L1F73
L1EE0:		mov	ESI,8
		jmp	near ptr L20E4
L1EEA:		mov	ESI,3
		jmp	near ptr L20E4
L1EF4:		inc	dword ptr 010h[EDI]
		mov	ESI,3
		jmp	near ptr L1E22
L1F01:		mov	EDX,010h[EDI]
		cmp	byte ptr 1[EDX],069h
		je	L1F73
		jmp	near ptr L20F7
		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L1F31
		push	4
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L20E4
		jmp short	L1F43
L1F31:		mov	ECX,__pctype
		test	[EBX*2][ECX],4
		jne	L20E4
L1F43:		cmp	EBX,05Fh
		je	L2079
		cmp	EBX,02Eh
		jne	L1F5A
		mov	EDX,010h[EDI]
		cmp	byte ptr 1[EDX],02Eh
		jne	L1F73
L1F5A:		cmp	EBX,069h
		je	L1F73
		cmp	EBX,066h
		je	L1F73
		cmp	EBX,046h
		je	L1F73
		cmp	EBX,065h
		je	L1F73
		cmp	EBX,045h
		jne	L1F8F
L1F73:		mov	EBX,014h[ESP]
		mov	ECX,EDI
		mov	010h[EDI],EBX
		push	dword ptr 028h[ESP]
		call	near ptr ?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
L1F8F:		cmp	EBX,04Ch
		jne	L20F7
		mov	ECX,010h[EDI]
		cmp	byte ptr 1[ECX],069h
		je	L1F73
		jmp	near ptr L20F7
		movzx	EDX,BL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EDX],2
		jne	L1FF5
		cmp	EBX,05Fh
		je	L2079
		cmp	EBX,02Eh
		jne	L1FC9
		mov	ECX,010h[EDI]
		cmp	byte ptr 1[ECX],02Eh
		jne	L1F73
L1FC9:		cmp	EBX,050h
		je	L1F73
		cmp	EBX,070h
		je	L1F73
		cmp	EBX,069h
		je	L1F73
		cmp	ESI,7
		jne	L20F7
		push	EBX
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04A4h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
		jmp	near ptr L20F7
L1FF5:		mov	ESI,5
		jmp	near ptr L20E4
		movzx	EDX,BL
		test	byte ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[048h][EDX],1
		jne	L20E4
		cmp	EBX,05Fh
		je	L2079
		cmp	EBX,02Eh
		jne	L2026
		mov	ECX,010h[EDI]
		cmp	byte ptr 1[ECX],02Eh
		jne	L1F73
L2026:		cmp	EBX,069h
		je	L1F73
		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L2051
		push	4
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		je	L20F7
		jmp short	L2063
L2051:		mov	ECX,__pctype
		test	[EBX*2][ECX],4
		je	L20F7
L2063:		mov	ESI,4
		jmp short	L20E4
		cmp	EBX,030h
		je	L209B
		cmp	EBX,031h
		je	L209B
		cmp	EBX,05Fh
		jne	L2081
L2079:		inc	dword ptr 010h[EDI]
		jmp	near ptr L1E22
L2081:		cmp	ESI,8
		jne	L20F7
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04C4h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	ESI,0Ah
		add	ESP,8
		jmp short	L20E4
L209B:		mov	ESI,6
		jmp short	L20E4
		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L20C0
		push	4
		push	EBX
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L20E4
		jmp short	L20F7
L20C0:		mov	ECX,__pctype
		test	[EBX*2][ECX],4
		jne	L20E4
		jmp short	L20F7
L20D0:		push	0896h
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04DCh]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04E4h]
		call	near ptr __assert
L20E4:		push	EBX
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		inc	dword ptr 010h[EDI]
		jmp	near ptr L1E22
L20F7:		push	0
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		cmp	ESI,4
		jne	L2116
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04E8h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L2116:		cmp	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[08h],2
		jne	L2144
		cmp	ESI,2
		je	L2129
		cmp	ESI,1
		jne	L2144
L2129:		mov	ESI,?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		movzx	EBX,byte ptr [ESI]
		add	EBX,0FFFFFFD0h
		mov	01Ch[ESP],EBX
		mov	EDX,EBX
		sar	EDX,01Fh
		mov	020h[ESP],EDX
		jmp short	L21C2
L2144:		xor	EAX,EAX
		push	EAX
		sub	ESP,4
		call	near ptr __errno
		add	ESP,4
		mov	EDX,EAX
		pop	EAX
		push	0
		push	0
		mov	[EDX],EAX
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		call	near ptr _strtoull
		mov	028h[ESP],EAX
		mov	02Ch[ESP],EDX
		add	ESP,0Ch
		call	near ptr __errno
		cmp	dword ptr [EAX],022h
		jne	L21C2
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0500h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
		jmp short	L21C2
L218B:		mov	EBX,2
		jmp short	L21A5
L2192:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0514h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L21A0:		mov	EBX,4
L21A5:		inc	dword ptr 010h[EDI]
		movzx	EDX,BL
		test	EBP,EDX
		je	L21BD
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0540h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L21BD:		movzx	ECX,BL
		or	EBP,ECX
L21C2:		mov	ECX,010h[EDI]
		movzx	EAX,byte ptr [ECX]
		cmp	EAX,055h
		je	L218B
		cmp	EAX,075h
		je	L218B
		cmp	EAX,06Ch
		je	L2192
		cmp	EAX,04Ch
		je	L21A0
		mov	EBX,EBP
		cmp	EBP,7
		ja	L22BD
		jmp	dword ptr ?freelist@Lexer@@2PAUToken@@A[0598h][EBX*4]
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		xor	EAX,EAX
		and	EDX,080000000h
		or	EDX,EAX
		jne	L22B2
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		xor	EAX,EAX
		or	EDX,EAX
		jne	L22AB
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		and	EAX,080000000h
		xor	EDX,EDX
		or	EDX,EAX
		jne	L2267
		jmp short	L2252
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		xor	EAX,EAX
		and	EDX,080000000h
		or	EDX,EAX
		jne	L2282
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		and	EAX,080000000h
		or	EDX,EAX
		jne	L22AB
L2252:		mov	EBP,06Ch
		jmp short	L22D5
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		xor	EAX,EAX
		or	EDX,EAX
		jne	L22B2
L2267:		mov	EBP,06Dh
		jmp short	L22D5
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		xor	EAX,EAX
		and	EDX,080000000h
		or	EDX,EAX
		je	L22AB
L2282:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0554h]
		push	EDI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		mov	EBP,06Fh
		add	ESP,8
		jmp short	L22D5
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		xor	EAX,EAX
		and	EDX,080000000h
		or	EDX,EAX
		jne	L22B2
L22AB:		mov	EBP,06Eh
		jmp short	L22D5
L22B2:		mov	EBP,018h[ESP]
		mov	EBP,06Fh
		jmp short	L22D5
L22BD:		mov	EBP,018h[ESP]
		push	0934h
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04DCh]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04E4h]
		call	near ptr __assert
L22D5:		mov	ECX,028h[ESP]
		mov	EAX,01Ch[ESP]
		mov	EDX,020h[ESP]
		mov	018h[ECX],EAX
		mov	EAX,EBP
		mov	01Ch[ECX],EDX
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret	4
?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z:
		push	ECX
		push	EBX
		push	EBP
		mov	EBP,ECX
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	ESI
		push	EDI
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		xor	EDI,EDI
		xor	EBX,EBX
L2308:		mov	EDX,010h[EBP]
		movzx	ESI,byte ptr [EDX]
		inc	dword ptr 010h[EBP]
		jmp	near ptr L23C9
		cmp	ESI,030h
		jne	L2325
		mov	EDI,9
		jmp	near ptr L2459
L2325:		cmp	ESI,02Eh
		jne	L2334
		mov	EDI,3
		jmp	near ptr L2459
L2334:		mov	EDI,1
		jmp	near ptr L2459
		mov	EDI,1
		cmp	ESI,058h
		je	L234D
		cmp	ESI,078h
		jne	L2354
L234D:		inc	BL
		jmp	near ptr L2459
L2354:		mov	EDX,1
		cmp	___locale_mbsize,EDX
		jle	L2376
		push	4
		push	ESI
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L2459
		jmp short	L2388
L2376:		mov	ECX,__pctype
		test	[ESI*2][ECX],4
		jne	L2459
L2388:		test	BL,BL
		je	L23BF
		cmp	dword ptr ___locale_mbsize,1
		jle	L23AD
		push	080h
		push	ESI
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L2459
		jmp short	L23BF
L23AD:		mov	EDX,__pctype
		test	[ESI*2][EDX],080h
		jne	L2459
L23BF:		cmp	ESI,05Fh
		je	L2308
		inc	EDI
L23C9:		cmp	EDI,9
		ja	L2459
		jmp	dword ptr ?freelist@Lexer@@2PAUToken@@A[0638h][EDI*4]
		cmp	ESI,02Eh
		je	L2458
		cmp	ESI,045h
		je	L23F6
		cmp	ESI,065h
		je	L23F6
		test	BL,BL
		je	L23FF
		cmp	ESI,050h
		je	L23F6
		cmp	ESI,070h
		jne	L23FF
L23F6:		mov	EDI,5
		xor	EBX,EBX
		jmp short	L2459
L23FF:		test	BL,BL
		je	L2469
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[05B8h]
		push	EBP
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
		jmp short	L2469
		inc	EDI
		cmp	ESI,02Dh
		je	L2459
		cmp	ESI,02Bh
		je	L2459
		mov	ECX,1
		cmp	___locale_mbsize,ECX
		jle	L243C
		push	4
		push	ESI
		call	near ptr __isctype
		add	ESP,8
		test	EAX,EAX
		jne	L2458
		jmp short	L244A
L243C:		mov	EDX,__pctype
		test	[ESI*2][EDX],4
		jne	L2458
L244A:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[05D8h]
		push	EBP
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L2458:		inc	EDI
L2459:		push	ESI
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		jmp	near ptr L2308
L2469:		dec	dword ptr 010h[EBP]
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		push	0
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ESI,___locale_decpoint
		push	0
		mov	dword ptr ___locale_decpoint,offset FLAT:?freelist@Lexer@@2PAUToken@@A[05ECh]
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		call	near ptr _strtold
		mov	EAX,020h[ESP]
		fstp	tbyte ptr 018h[EAX]
		call	near ptr __errno
		mov	dword ptr [EAX],0
		add	ESP,8
		mov	EBX,010h[EBP]
		movzx	EAX,byte ptr [EBX]
		cmp	EAX,046h
		je	L24C6
		cmp	EAX,066h
		je	L24C6
		cmp	EAX,06Ch
		je	L24FB
		cmp	EAX,04Ch
		je	L2512
		jmp short	L24E2
L24C6:		push	0
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		call	near ptr _strtof
		fstp	ST
		mov	EBX,070h
		inc	dword ptr 010h[EBP]
		add	ESP,8
		jmp short	L251A
L24E2:		push	0
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		call	near ptr _strtod
		fstp	ST
		mov	EBX,071h
		add	ESP,8
		jmp short	L251A
L24FB:		cmp	byte ptr ?global@@3UGlobal@@A[055h],0
		jne	L2512
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0514h]
		push	EBP
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L2512:		inc	dword ptr 010h[EBP]
		mov	EBX,072h
L251A:		mov	EDX,010h[EBP]
		mov	CL,[EDX]
		cmp	CL,069h
		je	L2529
		cmp	CL,049h
		jne	L256C
L2529:		cmp	byte ptr ?global@@3UGlobal@@A[055h],0
		jne	L2545
		cmp	CL,049h
		jne	L2545
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[05F0h]
		push	EBP
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L2545:		inc	dword ptr 010h[EBP]
		cmp	EBX,070h
		je	L2559
		cmp	EBX,071h
		je	L2560
		cmp	EBX,072h
		je	L2567
		jmp short	L256C
L2559:		mov	EBX,073h
		jmp short	L256C
L2560:		mov	EBX,074h
		jmp short	L256C
L2567:		mov	EBX,075h
L256C:		mov	___locale_decpoint,ESI
		call	near ptr __errno
		cmp	dword ptr [EAX],022h
		jne	L258A
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[061Ch]
		push	EBP
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,8
L258A:		pop	EDI
		mov	EAX,EBX
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
?pragma@Lexer@@QAEXXZ:
		sub	ESP,078h
		push	EBX
		mov	EBX,ECX
		mov	EAX,[EBX]
		push	ESI
		mov	EDX,4[EBX]
		xor	ESI,ESI
		push	EDI
		mov	040h[ESP],EDX
		lea	EDX,0Ch[ESP]
		mov	03Ch[ESP],EAX
		push	EDX
		call	near ptr ?scan@Lexer@@QAEXPAUToken@@@Z
		cmp	dword ptr 014h[ESP],079h
		jne	L2769
		mov	ECX,024h[ESP]
		cmp	ECX,?line@Id@@2PAUIdentifier@@A
		jne	L2769
		lea	EDX,0Ch[ESP]
		mov	ECX,EBX
		push	EDX
		call	near ptr ?scan@Lexer@@QAEXPAUToken@@@Z
		mov	EDX,014h[ESP]
		cmp	EDX,06Ch
		je	L25EE
		cmp	EDX,06Eh
		jne	L2769
L25EE:		mov	EAX,024h[ESP]
		mov	EDX,028h[ESP]
		add	EAX,0FFFFFFFFh
		adc	EDX,0FFFFFFFFh
		mov	034h[ESP],EAX
L2600:		mov	ECX,010h[EBX]
		movzx	EAX,byte ptr [ECX]
		test	EAX,EAX
		je	L263C
		cmp	EAX,01Ah
		je	L263C
		cmp	EAX,0Ah
		je	L263C
		cmp	EAX,0Dh
		je	L2652
		cmp	EAX,020h
		je	L2662
		cmp	EAX,9
		je	L2662
		cmp	EAX,0Bh
		je	L2662
		cmp	EAX,0Ch
		je	L2662
		cmp	EAX,05Fh
		je	L2667
		cmp	EAX,022h
		je	L26B2
		jmp	near ptr L2740
L263C:		mov	EDX,034h[ESP]
		test	ESI,ESI
		mov	4[EBX],EDX
		je	L277F
		mov	[EBX],ESI
		jmp	near ptr L277F
L2652:		inc	dword ptr 010h[EBX]
		mov	EDX,010h[EBX]
		cmp	byte ptr [EDX],0Ah
		je	L2600
		dec	dword ptr 010h[EBX]
		jmp short	L263C
L2662:		inc	dword ptr 010h[EBX]
		jmp short	L2600
L2667:		cmp	dword ptr 040h[EBX],0
		je	L2600
		push	8
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0660h]
		push	dword ptr 010h[EBX]
		call	near ptr _memcmp
		add	ESP,0Ch
		test	EAX,EAX
		jne	L2600
		add	dword ptr 010h[EBX],8
		mov	EDX,03Ch[ESP]
		test	EDX,EDX
		jne	L26A0
		mov	ECX,040h[EBX]
		mov	ECX,4[ECX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		mov	EDX,EAX
L26A0:		mov	ECX,offset FLAT:?mem@@3UMem@@A
		push	EDX
		call	near ptr ?strdup@Mem@@QAEPADPBD@Z
		mov	ESI,EAX
		jmp	near ptr L2600
L26B2:		test	ESI,ESI
		jne	L2769
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?reset@OutBuffer@@QAEXXZ
		inc	dword ptr 010h[EBX]
		jmp short	L271E
L26C9:		push	0
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		push	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[04h]
		call	near ptr ?strdup@Mem@@QAEPADPBD@Z
		mov	ESI,EAX
		inc	dword ptr 010h[EBX]
		jmp	near ptr L2600
L26EF:		test	ESI,080h
		je	L2710
		mov	ECX,EBX
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EDI,EAX
		cmp	EAX,02029h
		je	L2769
		cmp	EDI,02028h
		je	L2769
L2710:		push	ESI
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		inc	dword ptr 010h[EBX]
L271E:		mov	EDX,010h[EBX]
		movzx	ESI,byte ptr [EDX]
		mov	EAX,ESI
		cmp	ESI,0Ah
		je	L2769
		cmp	EAX,0Dh
		je	L2769
		test	EAX,EAX
		je	L2769
		cmp	EAX,01Ah
		je	L2769
		cmp	EAX,022h
		je	L26C9
		jmp short	L26EF
L2740:		mov	ECX,010h[EBX]
		test	byte ptr [ECX],080h
		je	L2769
		mov	ECX,EBX
		call	near ptr ?decodeUTF@Lexer@@QAEIXZ
		mov	EDI,EAX
		cmp	EAX,02029h
		je	L263C
		cmp	EDI,02028h
		je	L263C
L2769:		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[066Ch]
		push	dword ptr 044h[ESP]
		push	dword ptr 044h[ESP]
		push	EBX
		call	near ptr ?error@Lexer@@QAAXULoc@@PBDZZ
		add	ESP,010h
L277F:		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,078h
		ret
?decodeUTF@Lexer@@QAEIXZ:
		sub	ESP,010h
		push	EBX
		mov	EBX,010h[ECX]
		push	ESI
		mov	ESI,ECX
		push	EDI
		test	byte ptr [EBX],080h
		jne	L27AA
		push	0A78h
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04DCh]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0694h]
		call	near ptr __assert
L27AA:		mov	EDX,1
		cmp	byte ptr 1[EBX],0
		je	L27C1
L27B5:		inc	EDX
		cmp	EDX,6
		jae	L27C1
		cmp	[EBX][EDX],0
		jne	L27B5
L27C1:		mov	014h[ESP],EDX
		lea	ECX,010h[ESP]
		mov	dword ptr 018h[ESP],0
		push	ECX
		lea	EDX,01Ch[ESP]
		push	EDX
		push	dword ptr 01Ch[ESP]
		push	EBX
		call	near ptr ?utf_decodeChar@@YAPBDPAEIPAI1@Z
		mov	ECX,028h[ESP]
		dec	ECX
		add	010h[ESI],ECX
		mov	EDI,EAX
		add	ESP,010h
		test	EDI,EDI
		je	L2801
		push	EDI
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06A0h]
		push	ESI
		call	near ptr ?error@Lexer@@QAAXPBDZZ
		add	ESP,0Ch
L2801:		mov	EAX,010h[ESP]
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,010h
		ret
		nop
		nop
		nop
		nop
?getDocComment@Lexer@@QAEXPAUToken@@I@Z:
		sub	ESP,020h
		mov	EDX,024h[ESP]
		push	EBX
		push	ESI
		push	EDI
		mov	028h[ESP],ECX
		mov	EDX,4[EDX]
		mov	AL,2[EDX]
		lea	EBX,3[EDX]
		mov	ESI,010h[ECX]
		cmp	AL,02Ah
		je	L2832
		cmp	AL,02Bh
		jne	L2835
L2832:		add	ESI,0FFFFFFFEh
L2835:		cmp	EBX,ESI
		jae	L2842
L2839:		cmp	[EBX],AL
		jne	L2842
		inc	EBX
		cmp	EBX,ESI
		jb	L2839
L2842:		cmp	AL,02Fh
		je	L2854
		cmp	EBX,ESI
		jae	L2854
L284A:		cmp	-1[ESI],AL
		jne	L2854
		dec	ESI
		cmp	EBX,ESI
		jb	L284A
L2854:		mov	010h[ESP],AL
		lea	ECX,014h[ESP]
		call	near ptr ??0OutBuffer@@QAE@XZ
		xor	EDI,EDI
		cmp	EBX,ESI
		jae	L29A3
L286B:		mov	AL,[EBX]
		mov	024h[ESP],AL
		and	EAX,0FFh
		cmp	EAX,02Ah
		je	L28A2
		cmp	EAX,02Bh
		je	L28A2
		cmp	EAX,020h
		je	L298B
		cmp	EAX,9
		je	L298B
		cmp	EAX,0Dh
		je	L2908
		cmp	EAX,0Ah
		je	L2948
		jmp short	L2914
L28A2:		test	EDI,EDI
		je	L298B
		mov	DL,024h[ESP]
		cmp	DL,010h[ESP]
		jne	L298B
		xor	EDI,EDI
		cmp	01Ch[ESP],EDI
		je	L299A
		mov	ECX,018h[ESP]
		mov	EDX,01Ch[ESP]
		mov	CL,-1[EDX][ECX]
		cmp	CL,020h
		je	L28DE
		cmp	CL,9
		jne	L299A
L28DE:		dec	dword ptr 01Ch[ESP]
		cmp	dword ptr 01Ch[ESP],0
		je	L299A
		mov	EDX,018h[ESP]
		mov	ECX,01Ch[ESP]
		mov	DL,-1[ECX][EDX]
		cmp	DL,020h
		je	L28DE
		cmp	DL,9
		je	L28DE
		jmp	near ptr L299A
L2908:		cmp	byte ptr 1[EBX],0Ah
		je	L299A
		jmp short	L2943
L2914:		mov	AL,010h[ESP]
		cmp	byte ptr 024h[ESP],0E2h
		jne	L293B
		cmp	byte ptr 1[EBX],080h
		jne	L293B
		mov	CL,2[EBX]
		cmp	CL,0A8h
		je	L2932
		cmp	CL,0A9h
		jne	L293B
L2932:		mov	010h[ESP],AL
		add	EBX,2
		jmp short	L2943
L293B:		mov	010h[ESP],AL
		xor	EDI,EDI
		jmp short	L298B
L2943:		mov	byte ptr 024h[ESP],0Ah
L2948:		cmp	dword ptr 01Ch[ESP],0
		mov	EDI,1
		je	L298B
		mov	EDX,018h[ESP]
		mov	ECX,01Ch[ESP]
		mov	DL,-1[ECX][EDX]
		cmp	DL,020h
		je	L296A
		cmp	DL,9
		jne	L298B
L296A:		dec	dword ptr 01Ch[ESP]
		cmp	dword ptr 01Ch[ESP],0
		je	L298B
		mov	ECX,018h[ESP]
		mov	EDX,01Ch[ESP]
		mov	CL,-1[EDX][ECX]
		cmp	CL,020h
		je	L296A
		cmp	CL,9
		je	L296A
L298B:		movzx	EDX,byte ptr 024h[ESP]
		push	EDX
		lea	ECX,018h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L299A:		inc	EBX
		cmp	EBX,ESI
		jb	L286B
L29A3:		cmp	dword ptr 01Ch[ESP],0
		je	L29B9
		mov	EAX,018h[ESP]
		mov	EBX,01Ch[ESP]
		cmp	byte ptr -1[EBX][EAX],0Ah
		je	L29C4
L29B9:		push	0Ah
		lea	ECX,018h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
L29C4:		push	0
		lea	ECX,018h[ESP]
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		cmp	dword ptr 034h[ESP],0
		je	L29E9
		mov	EDX,028h[ESP]
		cmp	dword ptr 048h[EDX],0
		je	L29E9
		mov	EBX,030h[ESP]
		add	EBX,010h
		jmp short	L29F0
L29E9:		mov	EBX,030h[ESP]
		add	EBX,0Ch
L29F0:		cmp	dword ptr [EBX],0
		je	L2A07
		push	dword ptr 018h[ESP]
		push	dword ptr [EBX]
		call	near ptr ?combineComments@Lexer@@SAPAEPAE0@Z
		mov	[EBX],EAX
		add	ESP,8
		jmp short	L2A12
L2A07:		lea	ECX,014h[ESP]
		call	near ptr ?extractData@OutBuffer@@QAEPAXXZ
		mov	[EBX],EAX
L2A12:		lea	ECX,014h[ESP]
		call	near ptr ??1OutBuffer@@UAE@XZ
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,020h
		ret	8
?combineComments@Lexer@@SAPAEPAE0@Z:
		push	EAX
		push	EBX
		push	EBP
		mov	EBP,014h[ESP]
		push	ESI
		mov	ESI,EBP
		push	EDI
		mov	EDI,018h[ESP]
		test	EDI,EDI
		je	L2A9C
		mov	ESI,EDI
		test	EBP,EBP
		je	L2A9C
		push	EDI
		call	near ptr _strlen
		add	ESP,4
		mov	EBX,EAX
		push	EAX
		push	EDI
		push	EBP
		call	near ptr _strlen
		add	ESP,4
		lea	ECX,2[EAX][EBX]
		mov	018h[ESP],EAX
		push	ECX
		mov	ECX,offset FLAT:?mem@@3UMem@@A
		call	near ptr ?malloc@Mem@@QAEPAXI@Z
		mov	ESI,EAX
		push	EAX
		call	near ptr _memcpy
		add	ESP,0Ch
		test	EBX,EBX
		je	L2A81
		cmp	byte ptr -1[EBX][EDI],0Ah
		je	L2A81
		mov	[EBX][ESI],0Ah
		inc	EBX
L2A81:		push	dword ptr 010h[ESP]
		lea	EDX,[EBX][ESI]
		push	EBP
		push	EDX
		call	near ptr _memcpy
		mov	ECX,01Ch[ESP]
		add	ECX,EBX
		mov	[ESI][ECX],0
		add	ESP,0Ch
L2A9C:		pop	EDI
		mov	EAX,ESI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
?idPool@Lexer@@SAPAUIdentifier@@PBD@Z:
		push	EBX
		push	ESI
		push	EDI
		push	dword ptr 010h[ESP]
		call	near ptr _strlen
		add	ESP,4
		mov	ECX,offset FLAT:?stringtable@Lexer@@2UStringTable@@A
		push	EAX
		push	dword ptr 014h[ESP]
		call	near ptr ?update@StringTable@@QAEPAUStringValue@@PBDI@Z
		mov	EDI,[EAX]
		mov	ESI,EAX
		test	EDI,EDI
		jne	L2AED
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2AE9
		lea	EDX,8[ESI]
		push	079h
		mov	ECX,EBX
		push	EDX
		call	near ptr ??0Identifier@@QAE@PBDH@Z
		mov	EBX,EAX
L2AE9:		mov	EDI,EBX
		mov	[ESI],EBX
L2AED:		mov	EAX,EDI
		pop	EDI
		pop	ESI
		pop	EBX
		ret
?uniqueId@Lexer@@SAPAUIdentifier@@PBDH@Z:
		sub	ESP,024h
		push	dword ptr 028h[ESP]
		call	near ptr _strlen
		add	ESP,4
		add	EAX,0Dh
		cmp	EAX,020h
		jbe	L2B1E
		push	0B3Bh
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[04DCh]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06A4h]
		call	near ptr __assert
L2B1E:		push	dword ptr 02Ch[ESP]
		push	dword ptr 02Ch[ESP]
		push	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06D4h]
		lea	EAX,010h[ESP]
		push	EAX
		call	near ptr _sprintf
		add	ESP,010h
		lea	ECX,4[ESP]
		push	ECX
		call	near ptr ?idPool@Lexer@@SAPAUIdentifier@@PBD@Z
		add	ESP,028h
		ret
?uniqueId@Lexer@@SAPAUIdentifier@@PBD@Z:
		push	EAX
		inc	dword ptr ?stringbuffer@Lexer@@2UOutBuffer@@A[044h]
		mov	EAX,?stringbuffer@Lexer@@2UOutBuffer@@A[044h]
		push	EAX
		push	dword ptr 0Ch[ESP]
		call	near ptr ?uniqueId@Lexer@@SAPAUIdentifier@@PBDH@Z
		add	ESP,8
		pop	ECX
		ret
?isKeyword@Token@@QAEHXZ:
		push	EBX
		mov	EBX,ECX
		xor	EDX,EDX
L2B66:		mov	EAX,?freelist@Lexer@@2PAUToken@@A[095Ch][EDX*8]
		cmp	EAX,8[EBX]
		jne	L2B79
		pop	EBX
		mov	EAX,1
		ret
L2B79:		inc	EDX
		cmp	EDX,062h
		jb	L2B66
		pop	EBX
		xor	EAX,EAX
		ret
?initKeywords@Lexer@@SAXXZ:
		sub	ESP,0Ch
		mov	EAX,062h
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		cmp	byte ptr ?global@@3UGlobal@@A[065h],1
		jne	L2B9D
		mov	EAX,060h
L2B9D:		mov	014h[ESP],EAX
		call	near ptr L0
		xor	EBX,EBX
		cmp	014h[ESP],EBX
		je	L2C0C
L2BAE:		mov	ECX,?freelist@Lexer@@2PAUToken@@A[0958h][EBX*8]
		mov	EBP,?freelist@Lexer@@2PAUToken@@A[095Ch][EBX*8]
		mov	018h[ESP],ECX
		push	ECX
		call	near ptr _strlen
		add	ESP,4
		mov	ECX,offset FLAT:?stringtable@Lexer@@2UStringTable@@A
		push	EAX
		push	dword ptr 01Ch[ESP]
		call	near ptr ?insert@StringTable@@QAEPAUStringValue@@PBDI@Z
		mov	EDI,EAX
		push	010h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L2BF8
		lea	EDX,8[EDI]
		push	EBP
		mov	ECX,ESI
		push	EDX
		call	near ptr ??0Identifier@@QAE@PBDH@Z
		mov	ESI,EAX
L2BF8:		mov	EDX,018h[ESP]
		inc	EBX
		mov	[EDI],ESI
		mov	?tochars@Token@@2QAPBDA[EBP*4],EDX
		cmp	EBX,014h[ESP]
		jb	L2BAE
L2C0C:		mov	dword ptr ?tochars@Token@@2QAPBDA[02Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C68h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[014h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C6Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[018h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C70h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[04h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C74h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[08h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C78h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C7Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[010h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C80h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[024h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C84h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[01Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C88h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0198h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C8Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0190h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[05ECh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0164h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C90h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0170h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C94h]
		mov	EAX,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C98h]
		mov	EBX,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CB8h]
		mov	ESI,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CF8h]
		mov	?tochars@Token@@2QAPBDA[0174h],EAX
		mov	?tochars@Token@@2QAPBDA[0188h],EAX
		mov	dword ptr ?tochars@Token@@2QAPBDA[0C8h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0C9Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0CCh],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CA0h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0D0h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CA4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0D4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CA8h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0D8h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CACh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0DCh],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CB0h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0E4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CB4h]
		mov	?tochars@Token@@2QAPBDA[0F0h],EBX
		mov	dword ptr ?tochars@Token@@2QAPBDA[0F4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CBCh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0110h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CC4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0F8h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CC8h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0FCh],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CCCh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0100h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CD0h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0104h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CD4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0108h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CD8h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[010Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CDCh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0178h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CE0h]
		mov	?tochars@Token@@2QAPBDA[0F0h],EBX
		mov	dword ptr ?tochars@Token@@2QAPBDA[0114h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CE4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0118h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CE8h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0124h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CECh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0134h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CF0h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0138h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CF4h]
		mov	?tochars@Token@@2QAPBDA[0144h],ESI
		mov	dword ptr ?tochars@Token@@2QAPBDA[0148h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0CFCh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[014Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D00h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[07Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D04h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[028h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D08h]
		mov	ECX,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D0Ch]
		mov	EDX,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D34h]
		mov	EAX,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D38h]
		mov	?tochars@Token@@2QAPBDA[015Ch],ECX
		mov	EBX,offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D7Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[01A0h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D10h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0160h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D14h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[01A4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D18h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[044h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D1Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0E8h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D20h]
		mov	?tochars@Token@@2QAPBDA[04Ch],ECX
		mov	?tochars@Token@@2QAPBDA[060h],ESI
		mov	dword ptr ?tochars@Token@@2QAPBDA[017Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D24h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[08Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D28h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[030h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D2Ch]
		mov	?tochars@Token@@2QAPBDA[0180h],EDX
		mov	?tochars@Token@@2QAPBDA[0184h],EAX
		mov	?tochars@Token@@2QAPBDA[01A8h],EDX
		mov	?tochars@Token@@2QAPBDA[01ACh],EAX
		mov	dword ptr ?tochars@Token@@2QAPBDA[050h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D3Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[019Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D44h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[020h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D48h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0ACh],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D4Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[068h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D50h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[013Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D54h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0140h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D58h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0150h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D5Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0154h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D60h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0158h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D64h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[011Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D68h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0120h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D6Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0128h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D70h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0168h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D78h]
		mov	?tochars@Token@@2QAPBDA[016Ch],EBX
		mov	dword ptr ?tochars@Token@@2QAPBDA[0130h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D80h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[012Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D84h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[048h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D88h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0E0h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D90h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0E4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D94h]
		mov	?tochars@Token@@2QAPBDA[016Ch],EBX
		mov	dword ptr ?tochars@Token@@2QAPBDA[01E4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0D98h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[01FCh],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DA4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[074h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DACh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[070h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DB4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[06Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DBCh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[078h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DC4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[064h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DCCh]
		mov	dword ptr ?tochars@Token@@2QAPBDA[080h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DD4h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0BCh],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DE0h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0C0h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0DF0h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0C4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E04h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[01E8h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E14h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0A4h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E1Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[01F8h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E24h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[098h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E2Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[094h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E38h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[033Ch],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E40h]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0344h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E4Ch]
		mov	dword ptr ?tochars@Token@@2QAPBDA[0340h],offset FLAT:?freelist@Lexer@@2PAUToken@@A[0E5Ch]
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,0Ch
		ret
		nop
___SD?%lexer_c2095706190_:
		push	EAX
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ??1OutBuffer@@UAE@XZ
		mov	ECX,offset FLAT:?stringtable@Lexer@@2UStringTable@@A
		call	near ptr ??1StringTable@@UAE@XZ
		pop	EAX
		ret
___SI?%lexer_c2095706190_:
		push	EAX
		mov	ECX,offset FLAT:?stringtable@Lexer@@2UStringTable@@A
		push	025h
		call	near ptr ??0StringTable@@QAE@I@Z
		mov	ECX,offset FLAT:?stringbuffer@Lexer@@2UOutBuffer@@A
		call	near ptr ??0OutBuffer@@QAE@XZ
		push	offset FLAT:___SD?%lexer_c2095706190_
		call	near ptr __fatexit
		add	ESP,4
		pop	EAX
		ret
_TEXT	ends
_DATA	segment
D0	db	025h,064h,000h,000h
D4	db	025h,075h,055h,000h
D8	db	025h,06ah,064h,04ch,000h,000h,000h,000h
D10	db	025h,06ah,075h,055h,04ch,000h,000h,000h
D18	db	025h,04ch,067h,066h,000h,000h,000h,000h
D20	db	025h,04ch,067h,000h
D24	db	025h,04ch,067h,04ch
	db	000h,000h,000h,000h
D2C	db	025h,04ch,067h,066h
	db	069h,000h,000h,000h
D34	db	025h,04ch,067h,069h
	db	000h,000h,000h,000h
D3C	db	025h,04ch,067h,04ch
	db	069h,000h,000h,000h
D44	db	05ch,078h,025h,030h
	db	032h,078h,000h,000h
D4C	db	05ch,075h,025h,030h
	db	034h,078h,000h,000h
D54	db	05ch,055h,025h,030h
	db	038h,078h,000h,000h
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[023h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[03Dh]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[057h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[074h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[091h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0B1h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0D1h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0F1h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0111h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0131h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[03Dh]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[03Dh]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[03Dh]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0151h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[02A2h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
	dd	offset FLAT:?toChars@Token@@QAEPBDXZ[0296h]
D128	db	054h,04fh,04bh,025h,064h,000h,000h,000h
?freelist@Lexer@@2PAUToken@@A:
	db	000h,000h,000h,000h,025h,073h,03ah,020h
	db	000h,000h,000h,000h,00ah,000h,000h,000h
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[017h]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[037h]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[01Bh]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[01Bh]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[04Eh]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[051h]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[01Bh]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[01Bh]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[058h]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[01Bh]
	dd	offset FLAT:?peekPastParen@Lexer@@QAEPAUToken@@PAU2@@Z[05Ch]
	db	063h,068h,061h,072h
	db	020h,030h,078h,025h,030h,034h,078h,020h
	db	06eh,06fh,074h,020h,061h,06ch,06ch,06fh
	db	077h,065h,064h,020h,069h,06eh,020h,069h
	db	064h,065h,06eh,074h,069h,066h,069h,065h
	db	072h,000h,000h,000h,06ch,065h,078h,065h
	db	072h,02eh,063h,000h,070h,000h,000h,000h
	db	025h,02eh,036h,073h,020h,025h,02eh,034h
	db	073h,000h,000h,000h,025h,02eh,038h,073h
	db	000h,000h,000h,000h,025h,02eh,032h,034h
	db	073h,000h,000h,000h,044h,069h,067h,069h
	db	074h,061h,06ch,020h,04dh,061h,072h,073h
	db	020h,044h,000h,000h,075h,06eh,074h,065h
	db	072h,06dh,069h,06eh,061h,074h,065h,064h
	db	020h,02fh,02ah,020h,02ah,02fh,020h,063h
	db	06fh,06dh,06dh,065h,06eh,074h,000h,000h
	db	075h,06eh,074h,065h,072h,06dh,069h,06eh
	db	061h,074h,065h,064h,020h,02fh,02bh,020h
	db	02bh,02fh,020h,063h,06fh,06dh,06dh,065h
	db	06eh,074h,000h,000h,075h,06eh,073h,075h
	db	070h,070h,06fh,072h,074h,065h,064h,020h
	db	063h,068h,061h,072h,020h,027h,025h,063h
	db	027h,000h,000h,000h,075h,06eh,073h,075h
	db	070h,070h,06fh,072h,074h,065h,064h,020h
	db	063h,068h,061h,072h,020h,030h,078h,025h
	db	030h,032h,078h,000h
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[021h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0D05h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[05F8h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0D05h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0D05h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[032h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[021h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0D05h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[09C7h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C6h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C4Ch]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0BC6h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C00h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[07D9h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[05Eh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0AFEh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B12h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0BDAh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[088Dh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B8Ah]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0851h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0752h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[03D2h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[049h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0BB2h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B9Eh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[08C9h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0A92h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0947h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B76h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C58h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B26h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0DDh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B3Ah]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0C26h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[085h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[075h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0A1h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0180h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B4Eh]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0815h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0B62h]
	dd	offset FLAT:?scan@Lexer@@QAEXPAUToken@@@Z[0AD8h]
	db	065h,073h,063h,061h,070h,065h,020h,068h
	db	065h,078h,020h,073h,065h,071h,075h,065h
	db	06eh,063h,065h,020h,068h,061h,073h,020h
	db	025h,064h,020h,068h,065h,078h,020h,064h
	db	069h,067h,069h,074h,073h,020h,069h,06eh
	db	073h,074h,065h,061h,064h,020h,06fh,066h
	db	020h,025h,064h,000h,069h,06eh,076h,061h
	db	06ch,069h,064h,020h,055h,054h,046h,020h
	db	063h,068h,061h,072h,061h,063h,074h,065h
	db	072h,020h,05ch,055h,025h,030h,038h,078h
	db	000h,000h,000h,000h,075h,06eh,064h,065h
	db	066h,069h,06eh,065h,064h,020h,065h,073h
	db	063h,061h,070h,065h,020h,068h,065h,078h
	db	020h,073h,065h,071h,075h,065h,06eh,063h
	db	065h,020h,05ch,025h,063h,00ah,000h,000h
	db	075h,06eh,06eh,061h,06dh,065h,064h,020h
	db	063h,068h,061h,072h,061h,063h,074h,065h
	db	072h,020h,065h,06eh,074h,069h,074h,079h
	db	020h,026h,025h,02eh,02ah,073h,03bh,000h
	db	075h,06eh,074h,065h,072h,06dh,069h,06eh
	db	061h,074h,065h,064h,020h,06eh,061h,06dh
	db	065h,064h,020h,065h,06eh,074h,069h,074h
	db	079h,000h,000h,000h,030h,025h,030h,033h
	db	06fh,020h,069h,073h,020h,06ch,061h,072h
	db	067h,065h,072h,020h,074h,068h,061h,06eh
	db	020h,061h,020h,062h,079h,074h,065h,000h
	db	075h,06eh,064h,065h,066h,069h,06eh,065h
	db	064h,020h,065h,073h,063h,061h,070h,065h
	db	020h,073h,065h,071h,075h,065h,06eh,063h
	db	065h,020h,05ch,025h,063h,00ah,000h,000h
	db	075h,06eh,074h,065h,072h,06dh,069h,06eh
	db	061h,074h,065h,064h,020h,073h,074h,072h
	db	069h,06eh,067h,020h,063h,06fh,06eh,073h
	db	074h,061h,06eh,074h,020h,073h,074h,061h
	db	072h,074h,069h,06eh,067h,020h,061h,074h
	db	020h,025h,073h,000h,000h,000h,000h,000h
	db	06fh,064h,064h,020h,06eh,075h,06dh,062h
	db	065h,072h,020h,028h,025h,064h,029h,020h
	db	06fh,066h,020h,068h,065h,078h,020h,063h
	db	068h,061h,072h,061h,063h,074h,065h,072h
	db	073h,020h,069h,06eh,020h,068h,065h,078h
	db	020h,073h,074h,072h,069h,06eh,067h,000h
	db	06eh,06fh,06eh,02dh,068h,065h,078h,020h
	db	063h,068h,061h,072h,061h,063h,074h,065h
	db	072h,020h,05ch,075h,025h,030h,034h,078h
	db	000h,000h,000h,000h,06eh,06fh,06eh,02dh
	db	068h,065h,078h,020h,063h,068h,061h,072h
	db	061h,063h,074h,065h,072h,020h,027h,025h
	db	063h,027h,000h,000h,075h,06eh,074h,065h
	db	072h,06dh,069h,06eh,061h,074h,065h,064h
	db	020h,063h,068h,061h,072h,061h,063h,074h
	db	065h,072h,020h,063h,06fh,06eh,073h,074h
	db	061h,06eh,074h,000h,048h,065h,078h,020h
	db	064h,069h,067h,069h,074h,020h,065h,078h
	db	070h,065h,063h,074h,065h,064h,02ch,020h
	db	06eh,06fh,074h,020h,027h,025h,063h,027h
	db	000h,000h,000h,000h,062h,069h,06eh,061h
	db	072h,079h,020h,064h,069h,067h,069h,074h
	db	020h,065h,078h,070h,065h,063h,074h,065h
	db	064h,000h,000h,000h,06ch,065h,078h,065h
	db	072h,02eh,063h,000h,030h,000h,000h,000h
	db	04fh,063h,074h,061h,06ch,020h,064h,069h
	db	067h,069h,074h,020h,065h,078h,070h,065h
	db	063h,074h,065h,064h,000h,000h,000h,000h
	db	069h,06eh,074h,065h,067h,065h,072h,020h
	db	06fh,076h,065h,072h,066h,06ch,06fh,077h
	db	000h,000h,000h,000h,027h,06ch,027h,020h
	db	073h,075h,066h,066h,069h,078h,020h,069h
	db	073h,020h,064h,065h,070h,072h,065h,063h
	db	061h,074h,065h,064h,02ch,020h,075h,073h
	db	065h,020h,027h,04ch,027h,020h,069h,06eh
	db	073h,074h,065h,061h,064h,000h,000h,000h
	db	075h,06eh,072h,065h,063h,06fh,067h,06eh
	db	069h,07ah,065h,064h,020h,074h,06fh,06bh
	db	065h,06eh,000h,000h,073h,069h,067h,06eh
	db	065h,064h,020h,069h,06eh,074h,065h,067h
	db	065h,072h,020h,06fh,076h,065h,072h,066h
	db	06ch,06fh,077h,000h
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[037h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[050h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[010Eh]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[01FEh]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[01FEh]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[01A5h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0269h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[01A5h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0269h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[02CFh]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[02A1h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[03EDh]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[042Ch]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0458h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0458h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0496h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[046Dh]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[04B1h]
	dd	offset FLAT:?number@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[04B1h]
	db	062h,069h,06eh,061h,072h,079h,02dh,065h
	db	078h,070h,06fh,06eh,065h,06eh,074h,02dh
	db	070h,061h,072h,074h,020h,072h,065h,071h
	db	075h,069h,072h,065h,064h,000h,000h,000h
	db	065h,078h,070h,06fh,06eh,065h,06eh,074h
	db	020h,065h,078h,070h,065h,063h,074h,065h
	db	064h,000h,000h,000h,02eh,000h,000h,000h
	db	027h,049h,027h,020h,073h,075h,066h,066h
	db	069h,078h,020h,069h,073h,020h,064h,065h
	db	070h,072h,065h,063h,061h,074h,065h,064h
	db	02ch,020h,075h,073h,065h,020h,027h,069h
	db	027h,020h,069h,06eh,073h,074h,065h,061h
	db	064h,000h,000h,000h,06eh,075h,06dh,062h
	db	065h,072h,020h,069h,073h,020h,06eh,06fh
	db	074h,020h,072h,065h,070h,072h,065h,073h
	db	065h,06eh,074h,061h,062h,06ch,065h,000h
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[023h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[061h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0E6h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[061h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0EBh]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0120h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[012Bh]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[061h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[0176h]
	dd	offset FLAT:?inreal@Lexer@@QAE?AW4TOK@@PAUToken@@@Z[04Bh]
	db	05fh,05fh,046h,049h,04ch,045h,05fh,05fh
	db	000h,000h,000h,000h,023h,06ch,069h,06eh
	db	065h,020h,069h,06eh,074h,065h,067h,065h
	db	072h,020h,05bh,022h,066h,069h,06ch,065h
	db	073h,070h,065h,063h,022h,05dh,05ch,06eh
	db	020h,065h,078h,070h,065h,063h,074h,065h
	db	064h,000h,000h,000h,063h,020h,026h,020h
	db	030h,078h,038h,030h,000h,000h,000h,000h
	db	025h,073h,000h,000h,073h,06ch,065h,06eh
	db	020h,02bh,020h,073h,069h,07ah,065h,06fh
	db	066h,028h,06eh,075h,06dh,029h,020h,02ah
	db	020h,033h,020h,02bh,020h,031h,020h,03ch
	db	03dh,020h,073h,069h,07ah,065h,06fh,066h
	db	028h,062h,075h,066h,066h,065h,072h,029h
	db	000h,000h,000h,000h,025h,073h,025h,064h
	db	000h,074h,068h,069h,073h,000h,073h,075h
	db	070h,065h,072h,000h,061h,073h,073h,065h
	db	072h,074h,000h,06eh,075h,06ch,06ch,000h
	db	074h,072h,075h,065h,000h,066h,061h,06ch
	db	073h,065h,000h,063h,061h,073h,074h,000h
	db	06eh,065h,077h,000h,064h,065h,06ch,065h
	db	074h,065h,000h,074h,068h,072h,06fh,077h
	db	000h,06dh,06fh,064h,075h,06ch,065h,000h
	db	070h,072h,061h,067h,06dh,061h,000h,074h
	db	079h,070h,065h,06fh,066h,000h,074h,079h
	db	070h,065h,069h,064h,000h,074h,065h,06dh
	db	070h,06ch,061h,074h,065h,000h,076h,06fh
	db	069h,064h,000h,062h,079h,074h,065h,000h
	db	075h,062h,079h,074h,065h,000h,073h,068h
	db	06fh,072h,074h,000h,075h,073h,068h,06fh
	db	072h,074h,000h,069h,06eh,074h,000h,075h
	db	069h,06eh,074h,000h,06ch,06fh,06eh,067h
	db	000h,075h,06ch,06fh,06eh,067h,000h,063h
	db	065h,06eh,074h,000h,075h,063h,065h,06eh
	db	074h,000h,066h,06ch,06fh,061h,074h,000h
	db	064h,06fh,075h,062h,06ch,065h,000h,072h
	db	065h,061h,06ch,000h,062h,06fh,06fh,06ch
	db	000h,063h,068h,061h,072h,000h,077h,063h
	db	068h,061h,072h,000h,064h,063h,068h,061h
	db	072h,000h,069h,066h,06ch,06fh,061h,074h
	db	000h,069h,064h,06fh,075h,062h,06ch,065h
	db	000h,069h,072h,065h,061h,06ch,000h,063h
	db	066h,06ch,06fh,061h,074h,000h,063h,064h
	db	06fh,075h,062h,06ch,065h,000h,063h,072h
	db	065h,061h,06ch,000h,064h,065h,06ch,065h
	db	067h,061h,074h,065h,000h,066h,075h,06eh
	db	063h,074h,069h,06fh,06eh,000h,069h,073h
	db	000h,069h,066h,000h,065h,06ch,073h,065h
	db	000h,077h,068h,069h,06ch,065h,000h,066h
	db	06fh,072h,000h,064h,06fh,000h,073h,077h
	db	069h,074h,063h,068h,000h,063h,061h,073h
	db	065h,000h,064h,065h,066h,061h,075h,06ch
	db	074h,000h,062h,072h,065h,061h,06bh,000h
	db	063h,06fh,06eh,074h,069h,06eh,075h,065h
	db	000h,073h,079h,06eh,063h,068h,072h,06fh
	db	06eh,069h,07ah,065h,064h,000h,072h,065h
	db	074h,075h,072h,06eh,000h,067h,06fh,074h
	db	06fh,000h,074h,072h,079h,000h,063h,061h
	db	074h,063h,068h,000h,066h,069h,06eh,061h
	db	06ch,06ch,079h,000h,077h,069h,074h,068h
	db	000h,061h,073h,06dh,000h,066h,06fh,072h
	db	065h,061h,063h,068h,000h,066h,06fh,072h
	db	065h,061h,063h,068h,05fh,072h,065h,076h
	db	065h,072h,073h,065h,000h,073h,063h,06fh
	db	070h,065h,000h,073h,074h,072h,075h,063h
	db	074h,000h,063h,06ch,061h,073h,073h,000h
	db	069h,06eh,074h,065h,072h,066h,061h,063h
	db	065h,000h,075h,06eh,069h,06fh,06eh,000h
	db	065h,06eh,075h,06dh,000h,069h,06dh,070h
	db	06fh,072h,074h,000h,06dh,069h,078h,069h
	db	06eh,000h,073h,074h,061h,074h,069h,063h
	db	000h,066h,069h,06eh,061h,06ch,000h,063h
	db	06fh,06eh,073h,074h,000h,074h,079h,070h
	db	065h,064h,065h,066h,000h,061h,06ch,069h
	db	061h,073h,000h,06fh,076h,065h,072h,072h
	db	069h,064h,065h,000h,061h,062h,073h,074h
	db	072h,061h,063h,074h,000h,076h,06fh,06ch
	db	061h,074h,069h,06ch,065h,000h,064h,065h
	db	062h,075h,067h,000h,064h,065h,070h,072h
	db	065h,063h,061h,074h,065h,064h,000h,069h
	db	06eh,000h,06fh,075h,074h,000h,069h,06eh
	db	06fh,075h,074h,000h,06ch,061h,07ah,079h
	db	000h,061h,075h,074h,06fh,000h,061h,06ch
	db	069h,067h,06eh,000h,065h,078h,074h,065h
	db	072h,06eh,000h,070h,072h,069h,076h,061h
	db	074h,065h,000h,070h,061h,063h,06bh,061h
	db	067h,065h,000h,070h,072h,06fh,074h,065h
	db	063h,074h,065h,064h,000h,070h,075h,062h
	db	06ch,069h,063h,000h,065h,078h,070h,06fh
	db	072h,074h,000h,062h,06fh,064h,079h,000h
	db	069h,06eh,076h,061h,072h,069h,061h,06eh
	db	074h,000h,075h,06eh,069h,074h,074h,065h
	db	073h,074h,000h,076h,065h,072h,073h,069h
	db	06fh,06eh,000h,072h,065h,066h,000h,06dh
	db	061h,063h,072h,06fh,000h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06D9h]
	db	07bh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06DEh]
	db	07ch,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06E4h]
	db	00eh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06EBh]
	db	00dh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06F0h]
	db	00fh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06F5h]
	db	010h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[06FBh]
	db	00ch,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0700h]
	db	016h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0704h]
	db	017h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[070Bh]
	db	015h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0711h]
	db	022h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0718h]
	db	028h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[071Fh]
	db	027h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0726h]
	db	02ah,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[072Dh]
	db	024h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0736h]
	db	080h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[073Bh]
	db	081h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0740h]
	db	082h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0746h]
	db	083h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[074Ch]
	db	084h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0753h]
	db	085h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0757h]
	db	086h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[075Ch]
	db	087h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0761h]
	db	088h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0767h]
	db	097h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[076Ch]
	db	098h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0772h]
	db	089h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0778h]
	db	08ah,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[077Fh]
	db	08bh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0784h]
	db	096h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0789h]
	db	092h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[078Eh]
	db	093h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0794h]
	db	094h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[079Ah]
	db	08ch,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07A1h]
	db	08dh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07A9h]
	db	08eh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07AFh]
	db	08fh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07B6h]
	db	090h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07BEh]
	db	091h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07C4h]
	db	0a2h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07CDh]
	db	0a3h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07D6h]
	db	03bh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07D9h]
	db	0bah,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07DCh]
	db	0bbh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07E1h]
	db	0bch,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07E7h]
	db	0bdh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07EBh]
	db	0beh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07EEh]
	db	0bfh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07F5h]
	db	0c0h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[07FAh]
	db	0c1h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0802h]
	db	0c2h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0808h]
	db	0c3h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0811h]
	db	0c5h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[081Eh]
	db	0c6h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0825h]
	db	0c7h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[082Ah]
	db	0c8h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[082Eh]
	db	0c9h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0834h]
	db	0cah,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[083Ch]
	db	0c4h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0841h]
	db	0cbh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0845h]
	db	0cch,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[084Dh]
	db	0cdh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[085Dh]
	db	0ceh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0863h]
	db	099h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[086Ah]
	db	09ah,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0870h]
	db	09bh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[087Ah]
	db	09ch,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0880h]
	db	09dh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0885h]
	db	09eh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[088Ch]
	db	0a4h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0892h]
	db	0abh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0899h]
	db	0ach,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[089Fh]
	db	0adh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08A5h]
	db	09fh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08ADh]
	db	0a0h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08B3h]
	db	0a1h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08BCh]
	db	0aeh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08C5h]
	db	0afh,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08CEh]
	db	0b0h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08D4h]
	db	0b1h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08DFh]
	db	0b2h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08E2h]
	db	0b3h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08E6h]
	db	0b4h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08ECh]
	db	0b5h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08F1h]
	db	0b6h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08F6h]
	db	0a5h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[08FCh]
	db	0a6h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0903h]
	db	0a7h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[090Bh]
	db	0b7h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0913h]
	db	0a8h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[091Dh]
	db	0a9h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0924h]
	db	0aah,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[092Bh]
	db	0d2h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0930h]
	db	0d3h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[093Ah]
	db	0d4h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[0943h]
	db	021h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[094Bh]
	db	0d5h,000h,000h,000h
	dd	offset FLAT:?freelist@Lexer@@2PAUToken@@A[094Fh]
	db	0d6h,000h,000h,000h
	db	045h,04fh,046h,000h,07bh,000h,000h,000h
	db	07dh,000h,000h,000h,028h,000h,000h,000h
	db	029h,000h,000h,000h,05bh,000h,000h,000h
	db	05dh,000h,000h,000h,03bh,000h,000h,000h
	db	03ah,000h,000h,000h,02ch,000h,000h,000h
	db	05eh,000h,000h,000h,05eh,03dh,000h,000h
	db	03dh,000h,000h,000h,03ch,000h,000h,000h
	db	03eh,000h,000h,000h,03ch,03dh,000h,000h
	db	03eh,03dh,000h,000h,03dh,03dh,000h,000h
	db	021h,03dh,000h,000h,021h,069h,073h,000h
	db	021h,021h,000h,000h,021h,03ch,03eh,03dh
	db	000h,000h,000h,000h,021h,03ch,03eh,000h
	db	03ch,03eh,000h,000h,03ch,03eh,03dh,000h
	db	021h,03eh,000h,000h,021h,03eh,03dh,000h
	db	021h,03ch,000h,000h,021h,03ch,03dh,000h
	db	021h,000h,000h,000h,03ch,03ch,000h,000h
	db	03eh,03eh,000h,000h,03eh,03eh,03eh,000h
	db	02bh,000h,000h,000h,02dh,000h,000h,000h
	db	02ah,000h,000h,000h,02fh,000h,000h,000h
	db	025h,000h,000h,000h,02eh,02eh,000h,000h
	db	02eh,02eh,02eh,000h,026h,000h,000h,000h
	db	026h,026h,000h,000h,07ch,000h,000h,000h
	db	07ch,07ch,000h,000h,05bh,05dh,000h,000h
	db	05bh,069h,05dh,000h,07eh,000h,000h,000h
	db	024h,000h,000h,000h,063h,061h,073h,074h
	db	000h,000h,000h,000h,02bh,02bh,000h,000h
	db	02dh,02dh,000h,000h,074h,079h,070h,065h
	db	000h,000h,000h,000h,03fh,000h,000h,000h
	db	02dh,000h,000h,000h,02bh,000h,000h,000h
	db	076h,061h,072h,000h,02bh,03dh,000h,000h
	db	02dh,03dh,000h,000h,02ah,03dh,000h,000h
	db	02fh,03dh,000h,000h,025h,03dh,000h,000h
	db	03ch,03ch,03dh,000h,03eh,03eh,03dh,000h
	db	03eh,03eh,03eh,03dh,000h,000h,000h,000h
	db	026h,03dh,000h,000h,07ch,03dh,000h,000h
	db	07eh,03dh,000h,000h,07eh,000h,000h,000h
	db	063h,061h,06ch,06ch,000h,000h,000h,000h
	db	069h,073h,000h,000h,021h,069h,073h,000h
	db	069h,064h,065h,06eh,074h,069h,066h,069h
	db	065h,072h,000h,000h,065h,072h,072h,06fh
	db	072h,000h,000h,000h,064h,06fh,074h,065h
	db	078h,070h,000h,000h,064h,06fh,074h,074h
	db	069h,000h,000h,000h,064h,06fh,074h,076h
	db	061h,072h,000h,000h,064h,06fh,074h,074h
	db	079h,070h,065h,000h,073h,079h,06dh,06fh
	db	066h,066h,000h,000h,061h,072h,072h,061h
	db	079h,06ch,065h,06eh,067h,074h,068h,000h
	db	061h,072h,072h,061h,079h,06ch,069h,074h
	db	065h,072h,061h,06ch,000h,000h,000h,000h
	db	061h,073h,073h,06fh,063h,061h,072h,072h
	db	061h,079h,06ch,069h,074h,065h,072h,061h
	db	06ch,000h,000h,000h,073h,074h,072h,075h
	db	063h,074h,06ch,069h,074h,065h,072h,061h
	db	06ch,000h,000h,000h,073h,074h,072h,069h
	db	06eh,067h,000h,000h,073h,079h,06dh,062h
	db	06fh,06ch,000h,000h,074h,075h,070h,06ch
	db	065h,000h,000h,000h,064h,065h,063h,06ch
	db	061h,072h,061h,074h,069h,06fh,06eh,000h
	db	064h,06fh,074h,074h,064h,000h,000h,000h
	db	073h,063h,06fh,070h,065h,028h,065h,078h
	db	069h,074h,029h,000h,073h,063h,06fh,070h
	db	065h,028h,073h,075h,063h,063h,065h,073h
	db	073h,029h,000h,000h,073h,063h,06fh,070h
	db	065h,028h,066h,061h,069h,06ch,075h,072h
	db	065h,029h,000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
XIFCB	segment
XIFCB	ends
XIFU	segment
	dd	offset FLAT:___SI?%lexer_c2095706190_
XIFU	ends
XIFL	segment
XIFL	ends
XIFM	segment
XIFM	ends
XIFCE	segment
XIFCE	ends
XOFB	segment
XOFB	ends
XOF	segment
XOF	ends
XOFE	segment
XOFE	ends
	end
