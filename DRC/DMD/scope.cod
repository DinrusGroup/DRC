_TEXT	segment dword use32 public 'CODE'	;size is 1702
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 235
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 0
_BSS	ends
FLAT	group	

	public	?freelist@Scope@@2PAU1@A
	public	??2Scope@@SAPAXI@Z
	public	??0Scope@@QAE@XZ
	public	??0Scope@@QAE@PAU0@@Z
	public	?createGlobal@Scope@@SAPAU1@PAUModule@@@Z
	public	?push@Scope@@QAEPAU1@XZ
	public	?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
	public	?pop@Scope@@QAEPAU1@XZ
	public	?mergeCallSuper@Scope@@QAEXULoc@@I@Z
	public	?search@Scope@@QAEPAUDsymbol@@ULoc@@PAUIdentifier@@PAPAU2@@Z
	public	?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z
	public	?getClassScope@Scope@@QAEPAUClassDeclaration@@XZ
	public	?getStructClassScope@Scope@@QAEPAUAggregateDeclaration@@XZ
includelib SNN.lib
	extrn	?speller@@YAPAXPBDP6APAXPAX0@Z10@Z
	extrn	?idchars@@3QBDB
	extrn	?global@@3UGlobal@@A
	extrn	?clearCache@Module@@SAXXZ
	extrn	__assert
	extrn	?lookup@StringTable@@QAEPAUStringValue@@PBDI@Z
	extrn	?stringtable@Lexer@@2UStringTable@@A
	extrn	_strlen
	extrn	??0DsymbolTable@@QAE@XZ
	extrn	??2@YAPAXI@Z
	extrn	?warning@@YAXULoc@@PBDZZ
	extrn	?length@Id@@2PAUIdentifier@@A
	extrn	?empty@Id@@2PAUIdentifier@@A
	extrn	?error@@YAXULoc@@PBDZZ
	extrn	??0ScopeDsymbol@@QAE@XZ

	public	?setNoFree@Scope@@QAEXXZ
	public	?scope_search_fp@@YAPAXPAXPBD@Z
	public	?search_correct@Scope@@QAEPAUDsymbol@@PAUIdentifier@@@Z
_TEXT	segment
	assume	CS:_TEXT
??2Scope@@SAPAXI@Z:
		push	EAX
		cmp	dword ptr ?freelist@Scope@@2PAU1@A,0
		je	L42
		mov	EAX,?freelist@Scope@@2PAU1@A
		mov	ECX,?freelist@Scope@@2PAU1@A
		mov	EDX,[EAX]
		mov	?freelist@Scope@@2PAU1@A,EDX
		test	dword ptr 078h[ECX],4
		jne	L37
		push	025h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[0Ch]
		call	near ptr __assert
L37:		mov	EAX,ECX
		and	dword ptr 078h[ECX],0FFFFFFFBh
		pop	ECX
		ret
L42:		push	dword ptr 8[ESP]
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		pop	ECX
		ret
??0Scope@@QAE@XZ:
		push	EBX
		mov	EDX,ECX
		xor	EAX,EAX
		mov	4[EDX],EAX
		mov	8[EDX],EAX
		mov	0Ch[EDX],EAX
		mov	[EDX],EAX
		mov	014h[EDX],EAX
		mov	01Ch[EDX],EAX
		mov	020h[EDX],EAX
		mov	024h[EDX],EAX
		mov	028h[EDX],EAX
		mov	02Ch[EDX],EAX
		mov	030h[EDX],EAX
		mov	EBX,?global@@3UGlobal@@A[038h]
		mov	010h[EDX],EAX
		mov	018h[EDX],EAX
		mov	068h[EDX],EAX
		mov	070h[EDX],EAX
		mov	074h[EDX],EAX
		mov	034h[EDX],EAX
		mov	038h[EDX],EAX
		mov	03Ch[EDX],EAX
		mov	040h[EDX],EAX
		mov	044h[EDX],EAX
		mov	050h[EDX],EAX
		mov	054h[EDX],EAX
		mov	048h[EDX],EAX
		mov	04Ch[EDX],EAX
		mov	058h[EDX],EAX
		mov	078h[EDX],EAX
		mov	07Ch[EDX],EAX
		mov	080h[EDX],EAX
		mov	084h[EDX],EAX
		mov	088h[EDX],EAX
		mov	EAX,ECX
		mov	05Ch[EDX],EBX
		mov	dword ptr 060h[EDX],1
		mov	dword ptr 064h[EDX],5
		pop	EBX
		ret
??0Scope@@QAE@PAU0@@Z:
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	ESI,0Ch[ESP]
		push	EDI
		test	dword ptr 078h[ESI],4
		je	LF8
		push	059h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[024h]
		call	near ptr __assert
LF8:		mov	EDX,4[ESI]
		mov	4[EBX],EDX
		mov	EDX,010h[ESI]
		mov	010h[EBX],EDX
		mov	EDX,014h[ESI]
		mov	014h[EBX],EDX
		xor	EDX,EDX
		cmp	EBX,ESI
		mov	8[EBX],EDX
		mov	0Ch[EBX],EDX
		mov	EAX,01Ch[ESI]
		mov	01Ch[EBX],EAX
		mov	EDI,020h[ESI]
		mov	020h[EBX],EDI
		mov	EAX,024h[ESI]
		mov	024h[EBX],EAX
		mov	EDI,028h[ESI]
		mov	028h[EBX],EDI
		mov	EAX,02Ch[ESI]
		mov	02Ch[EBX],EAX
		mov	EDI,030h[ESI]
		mov	030h[EBX],EDI
		mov	EAX,05Ch[ESI]
		mov	05Ch[EBX],EAX
		mov	[EBX],ESI
		mov	018h[EBX],EDX
		mov	EDI,060h[ESI]
		mov	060h[EBX],EDI
		mov	EAX,064h[ESI]
		mov	064h[EBX],EAX
		mov	EDI,068h[ESI]
		mov	068h[EBX],EDI
		mov	ECX,074h[ESI]
		mov	EAX,070h[ESI]
		mov	070h[EBX],EAX
		mov	074h[EBX],ECX
		mov	034h[EBX],EDX
		mov	ECX,038h[ESI]
		mov	038h[EBX],ECX
		mov	ECX,03Ch[ESI]
		mov	03Ch[EBX],ECX
		mov	040h[EBX],EDX
		mov	ECX,044h[ESI]
		mov	044h[EBX],ECX
		mov	ECX,050h[ESI]
		mov	050h[EBX],ECX
		mov	ECX,054h[ESI]
		mov	054h[EBX],ECX
		mov	ECX,048h[ESI]
		mov	048h[EBX],ECX
		mov	ECX,04Ch[ESI]
		mov	04Ch[EBX],ECX
		mov	ECX,058h[ESI]
		mov	058h[EBX],ECX
		mov	078h[EBX],EDX
		mov	07Ch[EBX],EDX
		mov	080h[EBX],EDX
		mov	084h[EBX],EDX
		mov	EDX,088h[ESI]
		mov	088h[EBX],EDX
		jne	L1CB
		push	084h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[044h]
		call	near ptr __assert
L1CB:		mov	EAX,EBX
		pop	EDI
		pop	ESI
		pop	EBX
		ret	4
?createGlobal@Scope@@SAPAU1@PAUModule@@@Z:
		push	EAX
		push	EBX
		push	EBP
		push	ESI
		push	EDI
		mov	EDI,018h[ESP]
		push	090h
		call	near ptr ??2Scope@@SAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	L1F8
		mov	ECX,ESI
		call	near ptr ??0Scope@@QAE@XZ
		mov	ESI,EAX
L1F8:		mov	4[ESI],EDI
		push	038h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBP,EAX
		test	EAX,EAX
		je	L214
		mov	ECX,EBP
		call	near ptr ??0ScopeDsymbol@@QAE@XZ
		mov	EBP,EAX
L214:		mov	8[ESI],EBP
		push	8
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		test	EAX,EAX
		mov	010h[ESP],EAX
		je	L234
		mov	ECX,EAX
		call	near ptr ??0DsymbolTable@@QAE@XZ
		mov	010h[ESP],EAX
L234:		mov	ECX,8[ESI]
		mov	EDX,010h[ESP]
		mov	02Ch[ECX],EDX
		mov	EBX,EDI
		cmp	dword ptr 0Ch[EDI],0
		je	L24F
L246:		mov	EBX,0Ch[EBX]
		cmp	dword ptr 0Ch[EBX],0
		jne	L246
L24F:		push	1
		mov	EDX,[EBX]
		mov	ECX,EBX
		push	dword ptr 8[ESI]
		push	0
		call	dword ptr 030h[EDX]
		mov	ECX,ESI
		mov	dword ptr 0Ch[EBX],0
		push	EDI
		call	near ptr ?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z
		mov	EBP,EAX
		mov	014h[EAX],EDI
		mov	EAX,EBP
		pop	EDI
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?push@Scope@@QAEPAU1@XZ:
		push	ECX
		push	ECX
		push	EBX
		push	090h
		call	near ptr ??2Scope@@SAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L2A3
		mov	ECX,EBX
		push	dword ptr 8[ESP]
		call	near ptr ??0Scope@@QAE@PAU0@@Z
		mov	EBX,EAX
L2A3:		cmp	8[ESP],EBX
		jne	L2BD
		push	0A1h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[058h]
		call	near ptr __assert
L2BD:		mov	EAX,EBX
		pop	EBX
		add	ESP,8
		ret
?push@Scope@@QAEPAU1@PAUScopeDsymbol@@@Z:
		push	ECX
		mov	EAX,8[ESP]
		push	EAX
		sub	ESP,4
		call	near ptr ?push@Scope@@QAEPAU1@XZ
		add	ESP,4
		mov	ECX,EAX
		pop	EAX
		mov	8[ECX],EAX
		mov	EAX,ECX
		pop	ECX
		ret	4
?pop@Scope@@QAEPAU1@XZ:
		push	ECX
		mov	EAX,[ECX]
		test	EAX,EAX
		push	EBX
		mov	EBX,ECX
		push	ESI
		mov	8[ESP],EAX
		je	L2F6
		mov	EDX,058h[EBX]
		or	058h[EAX],EDX
L2F6:		cmp	dword ptr 040h[EBX],0
		jne	L311
		mov	ESI,?freelist@Scope@@2PAU1@A
		mov	[EBX],ESI
		mov	?freelist@Scope@@2PAU1@A,EBX
		or	dword ptr 078h[EBX],4
L311:		mov	EAX,8[ESP]
		pop	ESI
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?mergeCallSuper@Scope@@QAEXULoc@@I@Z:
		push	ECX
		push	EBX
		mov	EBX,014h[ESP]
		push	ESI
		mov	ESI,ECX
		cmp	058h[ESI],EBX
		je	L395
		mov	EDX,EBX
		and	EDX,050h
		or	058h[ESI],EDX
		mov	EDX,058h[ESI]
		test	EBX,020h
		jne	L395
		test	EDX,020h
		je	L35C
		mov	EDX,058h[ESI]
		and	EDX,050h
		or	EDX,EBX
		mov	058h[ESI],EDX
		jmp short	L395
L35C:		test	BL,3
		jne	L365
		xor	EDX,EDX
		jmp short	L36A
L365:		mov	EDX,1
L36A:		test	byte ptr 058h[ESI],3
		jne	L374
		xor	EAX,EAX
		jmp short	L379
L374:		mov	EAX,1
L379:		cmp	EDX,EAX
		je	L392
		push	offset FLAT:?freelist@Scope@@2PAU1@A[064h]
		push	dword ptr 018h[ESP]
		push	dword ptr 018h[ESP]
		call	near ptr ?error@@YAXULoc@@PBDZZ
		add	ESP,0Ch
L392:		or	058h[ESI],EBX
L395:		pop	ESI
		pop	EBX
		pop	EAX
		ret	0Ch
		nop
		nop
		nop
		nop
		nop
?search@Scope@@QAEPAUDsymbol@@ULoc@@PAUIdentifier@@PAPAU2@@Z:
		push	EBX
		mov	EAX,ECX
		push	ESI
		push	EDI
		mov	EDI,018h[ESP]
		cmp	EDI,?empty@Id@@2PAUIdentifier@@A
		jne	L3F9
		mov	EBX,ECX
		test	ECX,ECX
		je	L4B4
L3BB:		cmp	[EBX],EBX
		jne	L3D3
		push	0E6h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[080h]
		call	near ptr __assert
L3D3:		mov	EAX,8[EBX]
		test	EAX,EAX
		je	L3EE
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 0CCh[EDX]
		mov	ESI,EAX
		test	EAX,EAX
		jne	L492
L3EE:		mov	EBX,[EBX]
		test	EBX,EBX
		jne	L3BB
		jmp	near ptr L4B4
L3F9:		mov	EBX,ECX
		test	ECX,ECX
		je	L4B4
L403:		cmp	[EBX],EBX
		jne	L41B
		push	0F8h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[080h]
		call	near ptr __assert
L41B:		mov	ECX,8[EBX]
		test	ECX,ECX
		je	L4AA
		push	0
		mov	EDX,[ECX]
		push	EDI
		push	dword ptr 01Ch[ESP]
		push	dword ptr 01Ch[ESP]
		call	dword ptr 050h[EDX]
		mov	ESI,EAX
		test	EAX,EAX
		je	L4AA
		cmp	byte ptr ?global@@3UGlobal@@A[061h],0
		jne	L44E
		cmp	byte ptr ?global@@3UGlobal@@A[065h],1
		jle	L492
L44E:		cmp	EDI,?length@Id@@2PAUIdentifier@@A
		jne	L492
		mov	ECX,8[EBX]
		mov	EDX,[ECX]
		call	dword ptr 0140h[EDX]
		test	EAX,EAX
		je	L492
		mov	ECX,[EBX]
		test	ECX,ECX
		je	L492
		push	0
		push	EDI
		push	dword ptr 01Ch[ESP]
		push	dword ptr 01Ch[ESP]
		call	near ptr ?search@Scope@@QAEPAUDsymbol@@ULoc@@PAUIdentifier@@PAPAU2@@Z
		test	EAX,EAX
		je	L492
		push	offset FLAT:?freelist@Scope@@2PAU1@A[094h]
		push	dword ptr 020h[ESI]
		push	dword ptr 01Ch[ESI]
		call	near ptr ?warning@@YAXULoc@@PBDZZ
		add	ESP,0Ch
L492:		cmp	dword ptr 01Ch[ESP],0
		je	L4A2
		mov	EDX,01Ch[ESP]
		mov	ECX,8[EBX]
		mov	[EDX],ECX
L4A2:		pop	EDI
		mov	EAX,ESI
		pop	ESI
		pop	EBX
		ret	010h
L4AA:		mov	EBX,[EBX]
		test	EBX,EBX
		jne	L403
L4B4:		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBX
		ret	010h
		nop
		nop
		nop
		nop
?insert@Scope@@QAEPAUDsymbol@@PAU2@@Z:
		sub	ESP,0Ch
		mov	EDX,ECX
		test	ECX,ECX
		push	EBX
		push	ESI
		je	L526
L4CB:		cmp	dword ptr 8[EDX],0
		je	L520
		mov	0Ch[ESP],EDX
		mov	ECX,0Ch[ESP]
		mov	EDX,8[ECX]
		cmp	dword ptr 02Ch[EDX],0
		jne	L505
		push	8
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	EBX,EAX
		test	EAX,EAX
		je	L4FB
		mov	ECX,EBX
		call	near ptr ??0DsymbolTable@@QAE@XZ
		mov	EBX,EAX
L4FB:		mov	ESI,0Ch[ESP]
		mov	EAX,8[ESI]
		mov	02Ch[EAX],EBX
L505:		push	dword ptr 018h[ESP]
		mov	EBX,010h[ESP]
		mov	ECX,8[EBX]
		mov	EDX,[ECX]
		call	dword ptr 015Ch[EDX]
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret	4
L520:		mov	EDX,[EDX]
		test	EDX,EDX
		jne	L4CB
L526:		push	0122h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[0CCh]
		call	near ptr __assert
		xor	EAX,EAX
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret	4
?getClassScope@Scope@@QAEPAUClassDeclaration@@XZ:
		push	ECX
		test	ECX,ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		je	L570
L54D:		mov	EAX,8[EBX]
		test	EAX,EAX
		je	L56A
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 0128h[EDX]
		mov	ESI,EAX
		test	EAX,EAX
		je	L56A
		mov	EAX,ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret
L56A:		mov	EBX,[EBX]
		test	EBX,EBX
		jne	L54D
L570:		pop	ESI
		xor	EAX,EAX
		pop	EBX
		pop	ECX
		ret
?getStructClassScope@Scope@@QAEPAUAggregateDeclaration@@XZ:
		push	ECX
		test	ECX,ECX
		push	EBX
		mov	EBX,ECX
		push	ESI
		je	L5B3
L57F:		mov	EAX,8[EBX]
		test	EAX,EAX
		je	L5AD
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 0128h[EDX]
		mov	ESI,EAX
		test	EAX,EAX
		jne	L5A7
		mov	ECX,8[EBX]
		mov	EDX,[ECX]
		call	dword ptr 012Ch[EDX]
		mov	ESI,EAX
		test	EAX,EAX
		je	L5AD
L5A7:		mov	EAX,ESI
		pop	ESI
		pop	EBX
		pop	ECX
		ret
L5AD:		mov	EBX,[EBX]
		test	EBX,EBX
		jne	L57F
L5B3:		pop	ESI
		xor	EAX,EAX
		pop	EBX
		pop	ECX
		ret
		nop
		nop
		nop
		nop
		nop
		nop
		nop
?setNoFree@Scope@@QAEXXZ:
		push	EBX
		mov	EBX,ECX
		mov	EDX,ECX
		test	ECX,ECX
		je	L5F3
L5C9:		mov	dword ptr 040h[EDX],1
		test	dword ptr 078h[EBX],4
		je	L5ED
		push	0165h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[0D0h]
		call	near ptr __assert
L5ED:		mov	EDX,[EDX]
		test	EDX,EDX
		jne	L5C9
L5F3:		pop	EBX
		ret
?scope_search_fp@@YAPAXPAXPBD@Z:
		sub	ESP,010h
		push	EBX
		push	dword ptr 01Ch[ESP]
		call	near ptr _strlen
		add	ESP,4
		test	EAX,EAX
		je	L620
		push	EAX
		mov	ECX,offset FLAT:?stringtable@Lexer@@2UStringTable@@A
		push	dword ptr 020h[ESP]
		call	near ptr ?lookup@StringTable@@QAEPAUStringValue@@PBDI@Z
		test	EAX,EAX
		mov	4[ESP],EAX
		jne	L627
L620:		pop	EBX
		add	ESP,010h
		xor	EAX,EAX
		ret
L627:		mov	EDX,4[ESP]
		mov	EBX,[EDX]
		test	EBX,EBX
		jne	L645
		push	0181h
		push	offset FLAT:?freelist@Scope@@2PAU1@A[4]
		push	offset FLAT:?freelist@Scope@@2PAU1@A[0E8h]
		call	near ptr __assert
L645:		call	near ptr ?clearCache@Module@@SAXXZ
		push	0
		mov	ECX,01Ch[ESP]
		push	EBX
		mov	dword ptr 018h[ESP],0
		mov	dword ptr 014h[ESP],0
		mov	EDX,018h[ESP]
		mov	EAX,014h[ESP]
		push	EDX
		push	EAX
		call	near ptr ?search@Scope@@QAEPAUDsymbol@@ULoc@@PAUIdentifier@@PAPAU2@@Z
		pop	EBX
		add	ESP,010h
		ret
?search_correct@Scope@@QAEPAUDsymbol@@PAUIdentifier@@@Z:
		push	ECX
		cmp	dword ptr ?global@@3UGlobal@@A[0100h],0
		je	L685
		pop	ECX
		xor	EAX,EAX
		ret	4
L685:		push	offset FLAT:?idchars@@3QBDB
		push	ECX
		push	offset FLAT:?scope_search_fp@@YAPAXPAXPBD@Z
		mov	ECX,014h[ESP]
		mov	EAX,[ECX]
		call	dword ptr 014h[EAX]
		push	EAX
		call	near ptr ?speller@@YAPAXPBDP6APAXPAX0@Z10@Z
		add	ESP,010h
		pop	ECX
		ret	4
_TEXT	ends
_DATA	segment
?freelist@Scope@@2PAU1@A:
	db	000h,000h,000h,000h,073h,063h,06fh,070h
	db	065h,02eh,063h,000h,073h,02dh,03eh,066h
	db	06ch,061h,067h,073h,020h,026h,020h,053h
	db	043h,04fh,050h,045h,066h,072h,065h,065h
	db	000h,000h,000h,000h,021h,028h,065h,06eh
	db	063h,06ch,06fh,073h,069h,06eh,067h,02dh
	db	03eh,066h,06ch,061h,067h,073h,020h,026h
	db	020h,053h,043h,04fh,050h,045h,066h,072h
	db	065h,065h,029h,000h,074h,068h,069h,073h
	db	020h,021h,03dh,020h,065h,06eh,063h,06ch
	db	06fh,073h,069h,06eh,067h,000h,000h,000h
	db	074h,068h,069h,073h,020h,021h,03dh,020h
	db	073h,000h,000h,000h,06fh,06eh,065h,020h
	db	070h,061h,074h,068h,020h,073h,06bh,069h
	db	070h,073h,020h,063h,06fh,06eh,073h,074h
	db	072h,075h,063h,074h,06fh,072h,000h,000h
	db	073h,063h,020h,021h,03dh,020h,073h,063h
	db	02dh,03eh,065h,06eh,063h,06ch,06fh,073h
	db	069h,06eh,067h,000h,061h,072h,072h,061h
	db	079h,020h,027h,06ch,065h,06eh,067h,074h
	db	068h,027h,020h,068h,069h,064h,065h,073h
	db	020h,06fh,074h,068h,065h,072h,020h,027h
	db	06ch,065h,06eh,067h,074h,068h,027h,020h
	db	06eh,061h,06dh,065h,020h,069h,06eh,020h
	db	06fh,075h,074h,065h,072h,020h,073h,063h
	db	06fh,070h,065h,000h,030h,000h,000h,000h
	db	021h,028h,066h,06ch,061h,067h,073h,020h
	db	026h,020h,053h,043h,04fh,050h,045h,066h
	db	072h,065h,065h,029h,000h,000h,000h,000h
	db	069h,064h,000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
	end
