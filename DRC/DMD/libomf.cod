_TEXT	segment dword use32 public 'CODE'	;size is 5259
_TEXT	ends
_DATA	segment dword use32 public 'DATA'	;size is 693
_DATA	ends
CONST	segment dword use32 public 'CONST'	;size is 0
CONST	ends
_BSS	segment dword use32 public 'BSS'	;size is 0
_BSS	ends
FLAT	group	

	public	??0Library@@QAE@XZ
	public	?setFilename@Library@@QAEXPAD0@Z
	public	?write@Library@@QAEXXZ
	public	?addLibrary@Library@@QAEXPAXI@Z
	extrn	??_7FileName@@6B@

	public	?addSymbol@Library@@AAEXPAUObjModule@@PADH@Z
	public	?scanObjModule@Library@@AAEXPAUObjModule@@@Z
	extrn	??_GFileName@@UAEPAXI@Z

	public	?addObject@Library@@QAEXPBDPAXI@Z
	public	_NameCompare
	public	?numDictPages@Library@@AAEGI@Z
	public	?FillDict@Library@@AAEHPAEG@Z
includelib SNN.lib
	extrn	_memcpy
	extrn	_memset
	extrn	_free
	extrn	?write@OutBuffer@@QAEXPBXI@Z
	extrn	__assert
	extrn	_malloc
	extrn	_realloc
	extrn	?fill0@OutBuffer@@QAEXI@Z
	extrn	?writeword@OutBuffer@@QAEXI@Z
	extrn	?writeByte@OutBuffer@@QAEXI@Z
	extrn	_strlen
	extrn	_qsort
	extrn	__rotl
	extrn	__rotr
	extrn	_strcmp
	extrn	??3@YAXPAX@Z
	extrn	??1String@@UAE@XZ
	extrn	?push@Array@@QAEXPAX@Z
	extrn	?ext@FileName@@SAPADPBD@Z
	extrn	_strdup
	extrn	?name@FileName@@SAPADPBD@Z
	extrn	??2@YAPAXI@Z
	extrn	?error@@YAXPBDZZ
	extrn	_memcmp
	extrn	??1File@@UAE@XZ
	extrn	?readv@File@@QAEXXZ
	extrn	??0File@@QAE@PAUFileName@@@Z
	extrn	??0FileName@@QAE@PADH@Z
	extrn	?dyncast@Object@@UAEHXZ
	extrn	?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	extrn	?toDchars@Object@@UAEPADXZ
	extrn	?toChars@String@@UAEPADXZ
	extrn	?print@String@@UAEXXZ
	extrn	?compare@FileName@@UAEHPAUObject@@@Z
	extrn	?hashCode@FileName@@UAEIXZ
	extrn	?equals@FileName@@UAEHPAUObject@@@Z
	extrn	??1Array@@UAE@XZ
	extrn	??0Array@@QAE@XZ
	extrn	?lookup@StringTable@@QAEPAUStringValue@@PBDI@Z
	extrn	?insert@StringTable@@QAEPAUStringValue@@PBDI@Z
	extrn	??1OutBuffer@@UAE@XZ
	extrn	?writev@File@@QAEXXZ
	extrn	?ensurePathExists@FileName@@SAXPBD@Z
	extrn	?path@FileName@@SAPADPBD@Z
	extrn	?extractData@OutBuffer@@QAEPAXXZ
	extrn	??0OutBuffer@@QAE@XZ
	extrn	_printf
	extrn	?global@@3UGlobal@@A
	extrn	?defaultExt@FileName@@SAPAU1@PBD0@Z
	extrn	?combine@FileName@@SAPADPBD0@Z
	extrn	?absolute@FileName@@SAHPBD@Z
	extrn	?forceExt@FileName@@SAPAU1@PBD0@Z
	extrn	??0StringTable@@QAE@I@Z

	public	?WriteLibToBuffer@Library@@AAEXPAUOutBuffer@@@Z
??_7FileName@@6B@	COMDAT flags=x0 attr=x10 align=x0 
??_GFileName@@UAEPAXI@Z	COMDAT flags=x0 attr=x10 align=x0 

_TEXT	segment
	assume	CS:_TEXT
??0Library@@QAE@XZ:
		push	EBX
		mov	EBX,ECX
		lea	ECX,4[ECX]
		call	near ptr ??0Array@@QAE@XZ
		lea	ECX,018h[EBX]
		call	near ptr ??0Array@@QAE@XZ
		lea	ECX,02Ch[EBX]
		push	025h
		call	near ptr ??0StringTable@@QAE@I@Z
		mov	EAX,EBX
		mov	dword ptr [EBX],0
		pop	EBX
		ret
?setFilename@Library@@QAEXPAD0@Z:
		sub	ESP,0Ch
		mov	EDX,014h[ESP]
		test	EDX,EDX
		push	EBX
		mov	EBX,EDX
		push	ESI
		mov	010h[ESP],ECX
		je	L3F
		cmp	byte ptr [EDX],0
		jne	L6C
L3F:		mov	EDX,?global@@3UGlobal@@A[0DCh]
		mov	EDX,8[EDX]
		push	dword ptr [EDX]
		call	near ptr ?name@FileName@@SAPADPBD@Z
		mov	ESI,EAX
		push	dword ptr ?global@@3UGlobal@@A[0Ch]
		push	ESI
		call	near ptr ?forceExt@FileName@@SAPAU1@PBD0@Z
		add	ESP,8
		mov	EDX,[EAX]
		mov	ECX,EAX
		call	dword ptr 014h[EDX]
		mov	EBX,EAX
		add	ESP,4
L6C:		push	EBX
		call	near ptr ?absolute@FileName@@SAHPBD@Z
		add	ESP,4
		test	EAX,EAX
		jne	L88
		push	EBX
		push	dword ptr 01Ch[ESP]
		call	near ptr ?combine@FileName@@SAPADPBD0@Z
		mov	EBX,EAX
		add	ESP,8
L88:		push	dword ptr ?global@@3UGlobal@@A[0Ch]
		push	EBX
		call	near ptr ?defaultExt@FileName@@SAPAU1@PBD0@Z
		mov	014h[ESP],EAX
		push	018h
		call	near ptr ??2@YAPAXI@Z
		add	ESP,4
		mov	ESI,EAX
		test	EAX,EAX
		je	LB5
		mov	ECX,ESI
		push	dword ptr 014h[ESP]
		call	near ptr ??0File@@QAE@PAUFileName@@@Z
		mov	ESI,EAX
LB5:		mov	EDX,018h[ESP]
		mov	[EDX],ESI
		add	ESP,8
		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret	8
?write@Library@@QAEXXZ:
		sub	ESP,010h
		push	EBX
		mov	EBX,ECX
		push	ESI
		push	EDI
		cmp	byte ptr ?global@@3UGlobal@@A[048h],0
		je	LEF
		mov	EAX,[EBX]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		push	offset FLAT:_DATA
		call	near ptr _printf
		add	ESP,8
LEF:		lea	ECX,0Ch[ESP]
		call	near ptr ??0OutBuffer@@QAE@XZ
		lea	ESI,0Ch[ESP]
		mov	ECX,EBX
		push	ESI
		call	near ptr ?WriteLibToBuffer@Library@@AAEXPAUOutBuffer@@@Z
		mov	EDI,[EBX]
		mov	EAX,014h[ESP]
		mov	EDX,010h[ESP]
		mov	ECX,ESI
		mov	8[EDI],EDX
		mov	0Ch[EDI],EAX
		call	near ptr ?extractData@OutBuffer@@QAEPAXXZ
		mov	EAX,[EBX]
		mov	ECX,014h[EAX]
		mov	EDX,[ECX]
		call	dword ptr 014h[EDX]
		push	EAX
		call	near ptr ?path@FileName@@SAPADPBD@Z
		add	ESP,4
		push	EAX
		call	near ptr ?ensurePathExists@FileName@@SAXPBD@Z
		mov	ECX,[EBX]
		call	near ptr ?writev@File@@QAEXXZ
		mov	ECX,ESI
		call	near ptr ??1OutBuffer@@UAE@XZ
		add	ESP,4
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,010h
		ret
		nop
		nop
		nop
		nop
?addLibrary@Library@@QAEXPAXI@Z:
		push	ECX
		push	dword ptr 0Ch[ESP]
		push	dword ptr 0Ch[ESP]
		push	0
		call	near ptr ?addObject@Library@@QAEXPBDPAXI@Z
		pop	EAX
		ret	8
L164:		push	EAX
		mov	ECX,8[ESP]
		push	EBX
		mov	EBX,[ECX]
		push	ESI
		movzx	ESI,byte ptr [EBX]
		inc	EBX
		cmp	ESI,0FFh
		jne	L1AA
		cmp	byte ptr [EBX],0
		jne	L1AA
		movzx	ESI,byte ptr 1[EBX]
		movzx	EDX,byte ptr 2[EBX]
		shl	EDX,8
		or	ESI,EDX
		add	EBX,3
		cmp	ESI,01D4h
		jbe	L1AA
		push	0A0h
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[01Ch]
		call	near ptr __assert
L1AA:		push	ESI
		push	EBX
		push	dword ptr 01Ch[ESP]
		call	near ptr _memcpy
		mov	ECX,020h[ESP]
		lea	EDX,[ESI][EBX]
		mov	[ESI][ECX],0
		mov	ECX,01Ch[ESP]
		mov	[ECX],EDX
		add	ESP,0Ch
		pop	ESI
		pop	EBX
		pop	EAX
		ret
		nop
		nop
		nop
L1D0:		push	EBX
		mov	EAX,8[ESP]
		mov	EDX,[EAX]
		push	ESI
		mov	BL,[EDX]
		inc	EDX
		push	EDI
		test	BL,080h
		je	L1F6
		mov	CL,BL
		mov	EDI,EDX
		inc	EDX
		and	ECX,07Fh
		shl	ECX,8
		movzx	ESI,byte ptr [EDI]
		add	ECX,ESI
		jmp short	L1F9
L1F6:		movzx	ECX,BL
L1F9:		mov	[EAX],EDX
		mov	EAX,ECX
		pop	EDI
		pop	ESI
		pop	EBX
		ret
?addSymbol@Library@@AAEXPAUObjModule@@PADH@Z:
		sub	ESP,0Ch
		push	EBX
		mov	EBX,018h[ESP]
		push	ESI
		mov	010h[ESP],ECX
		push	EBX
		call	near ptr _strlen
		add	ESP,4
		mov	ECX,010h[ESP]
		push	EAX
		add	ECX,02Ch
		push	EBX
		mov	010h[ESP],ECX
		call	near ptr ?insert@StringTable@@QAEPAUStringValue@@PBDI@Z
		mov	ESI,EAX
		test	EAX,EAX
		jne	L289
		cmp	dword ptr 020h[ESP],0
		jne	L2BB
		push	EBX
		call	near ptr _strlen
		add	ESP,4
		mov	ECX,8[ESP]
		push	EAX
		push	EBX
		call	near ptr ?lookup@StringTable@@QAEPAUStringValue@@PBDI@Z
		mov	ESI,EAX
		test	EAX,EAX
		jne	L268
		push	0BBh
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[02Ch]
		call	near ptr __assert
L268:		mov	EDX,[ESI]
		mov	ECX,4[EDX]
		push	dword ptr [EDX]
		push	dword ptr 0Ch[ECX]
		mov	EDX,020h[ESP]
		push	EBX
		push	dword ptr 0Ch[EDX]
		push	offset FLAT:_DATA[030h]
		call	near ptr ?error@@YAXPBDZZ
		add	ESP,014h
		jmp short	L2BB
L289:		mov	0Ch[ESP],ESI
		push	8
		call	near ptr ??2@YAPAXI@Z
		mov	ESI,EAX
		push	EBX
		call	near ptr _strdup
		mov	ECX,020h[ESP]
		mov	EDX,014h[ESP]
		mov	[ESI],EAX
		mov	4[ESI],ECX
		mov	ECX,018h[ESP]
		add	ECX,018h
		push	ESI
		mov	[EDX],ESI
		call	near ptr ?push@Array@@QAEXPAX@Z
		add	ESP,8
L2BB:		pop	ESI
		pop	EBX
		add	ESP,0Ch
		ret	0Ch
?scanObjModule@Library@@AAEXPAUObjModule@@@Z:
		sub	ESP,0208h
		push	EBX
		push	ESI
		push	EDI
		mov	EDI,ECX
		mov	ESI,0218h[ESP]
		lea	ECX,01ECh[ESP]
		call	near ptr ??0Array@@QAE@XZ
		push	0
		lea	ECX,01F0h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		test	ESI,ESI
		jne	L307
		push	0DAh
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[068h]
		call	near ptr __assert
L307:		mov	EDX,[ESI]
		mov	ECX,4[ESI]
		mov	dword ptr 010h[ESP],0
		lea	ECX,[ECX][EDX]
		mov	0200h[ESP],ECX
		mov	0204h[ESP],EDX
		jmp	near ptr L646
L32A:		mov	ECX,0204h[ESP]
		inc	ECX
		cmp	ECX,EBX
		jae	L63F
L33A:		lea	EDX,014h[ESP]
		push	EDX
		lea	ECX,0208h[ESP]
		push	ECX
		call	near ptr L164
		lea	EDX,01Ch[ESP]
		push	EDX
		call	near ptr _strdup
		add	ESP,4
		push	EAX
		lea	ECX,01F8h[ESP]
		call	near ptr ?push@Array@@QAEXPAX@Z
		add	ESP,8
		mov	EDX,0204h[ESP]
		inc	EDX
		cmp	EDX,EBX
		jb	L33A
		jmp	near ptr L63F
L37A:		cmp	dword ptr 010h[ESP],0
		je	L389
		mov	byte ptr 0208h[ESP],091h
L389:		lea	EDX,0204h[ESP]
		push	EDX
		call	near ptr L1D0
		add	ESP,4
		and	EAX,0FFFFh
		push	EAX
		sub	ESP,4
		lea	ECX,020Ch[ESP]
		push	ECX
		call	near ptr L1D0
		mov	EDX,EAX
		add	ESP,4
		add	ESP,4
		and	EDX,0FFFFh
		pop	EAX
		or	EAX,EDX
		jne	L3CA
		add	dword ptr 0204h[ESP],2
L3CA:		mov	ECX,0204h[ESP]
		inc	ECX
		cmp	ECX,EBX
		jae	L63F
L3DA:		lea	EDX,014h[ESP]
		push	EDX
		lea	ECX,0208h[ESP]
		push	ECX
		call	near ptr L164
		mov	EDX,2
		cmp	byte ptr 0210h[ESP],090h
		je	L400
		mov	EDX,4
L400:		lea	ECX,020Ch[ESP]
		add	020Ch[ESP],EDX
		push	ECX
		call	near ptr L1D0
		mov	ECX,EDI
		push	0
		lea	EDX,024h[ESP]
		push	EDX
		push	ESI
		call	near ptr ?addSymbol@Library@@AAEXPAUObjModule@@PADH@Z
		add	ESP,0Ch
		mov	EDX,0204h[ESP]
		inc	EDX
		cmp	EDX,EBX
		jb	L3DA
		jmp	near ptr L63F
L437:		cmp	dword ptr 010h[ESP],0
		je	L446
		mov	byte ptr 0208h[ESP],0C3h
L446:		mov	ECX,0204h[ESP]
		inc	ECX
		xor	EAX,EAX
		mov	0204h[ESP],ECX
		dec	ECX
		test	byte ptr [ECX],5
		jne	L63F
		mov	ECX,0204h[ESP]
		mov	DL,[ECX]
		inc	dword ptr 0204h[ESP]
		test	DL,0F0h
		je	L47B
		mov	EAX,1
L47B:		inc	dword ptr 0204h[ESP]
		add	dword ptr 0204h[ESP],2
		cmp	byte ptr 0208h[ESP],0C3h
		jne	L49C
		add	dword ptr 0204h[ESP],2
L49C:		mov	0210h[ESP],DL
		lea	EDX,0204h[ESP]
		mov	020Ch[ESP],EAX
		push	EDX
		call	near ptr L1D0
		add	ESP,4
		test	byte ptr 0210h[ESP],0Fh
		jne	L4E1
		lea	ECX,0204h[ESP]
		push	ECX
		call	near ptr L1D0
		lea	EDX,0208h[ESP]
		push	EDX
		call	near ptr L1D0
		add	ESP,8
L4E1:		lea	ECX,0204h[ESP]
		push	ECX
		call	near ptr L1D0
		add	ESP,4
		test	AX,AX
		and	EAX,0FFFFh
		je	L504
		cmp	EAX,01F0h[ESP]
		jb	L529
L504:		push	offset FLAT:_DATA[06Ch]
		call	near ptr ?error@@YAXPBDZZ
		lea	ECX,01F0h[ESP]
		call	near ptr ??1Array@@UAE@XZ
		add	ESP,4
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0208h
		ret	4
L529:		push	dword ptr 020Ch[ESP]
		mov	EDX,01F8h[ESP]
		mov	ECX,EDI
		push	[EAX*4][EDX]
		push	ESI
		call	near ptr ?addSymbol@Library@@AAEXPAUObjModule@@PADH@Z
		jmp	near ptr L63F
L547:		mov	EDX,0204h[ESP]
		inc	EDX
		cmp	EDX,EBX
		jae	L63F
L557:		lea	ECX,014h[ESP]
		push	ECX
		lea	EDX,0208h[ESP]
		push	EDX
		call	near ptr L164
		push	0
		lea	ECX,020h[ESP]
		push	ECX
		mov	ECX,EDI
		push	ESI
		call	near ptr ?addSymbol@Library@@AAEXPAUObjModule@@PADH@Z
		lea	EDX,01Ch[ESP]
		push	EDX
		lea	ECX,0210h[ESP]
		push	ECX
		call	near ptr L164
		add	ESP,010h
		mov	EDX,0204h[ESP]
		inc	EDX
		cmp	EDX,EBX
		jb	L557
		jmp	near ptr L63F
L59E:		mov	020Ah[ESP],DX
		cmp	word ptr 020Ah[ESP],7
		jne	L5DD
		xor	EDX,EDX
L5B3:		mov	ECX,0204h[ESP]
		inc	ECX
		mov	0204h[ESP],ECX
		dec	ECX
		mov	CL,[ECX]
		cmp	CL,FLAT:_DATA[05Ch][EDX]
		jne	L5DD
		inc	EDX
		cmp	EDX,7
		jb	L5B3
		mov	dword ptr 010h[ESP],1
		jmp short	L63F
L5DD:		cmp	word ptr 020Ah[ESP],7
		jb	L63F
		inc	dword ptr 0204h[ESP]
		mov	EDX,1
L5F4:		mov	ECX,0204h[ESP]
		inc	ECX
		mov	0204h[ESP],ECX
		dec	ECX
		mov	CL,[ECX]
		cmp	CL,FLAT:_DATA[064h][EDX]
		jne	L63F
		inc	EDX
		cmp	EDX,3
		jb	L5F4
		inc	dword ptr 0204h[ESP]
		lea	EDX,014h[ESP]
		push	EDX
		lea	ECX,0208h[ESP]
		push	ECX
		call	near ptr L164
		mov	ECX,EDI
		push	0
		lea	EDX,020h[ESP]
		push	EDX
		push	ESI
		call	near ptr ?addSymbol@Library@@AAEXPAUObjModule@@PADH@Z
		add	ESP,8
L63F:		mov	0204h[ESP],EBX
L646:		mov	ECX,0204h[ESP]
		cmp	ECX,0200h[ESP]
		jb	L66A
		push	0E1h
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[07Ch]
		call	near ptr __assert
L66A:		mov	CL,[ECX]
		inc	dword ptr 0204h[ESP]
		mov	EAX,0204h[ESP]
		mov	0208h[ESP],CL
		mov	DX,[EAX]
		add	dword ptr 0204h[ESP],2
		mov	EBX,EDX
		and	EBX,0FFFFh
		dec	EDX
		add	EBX,0204h[ESP]
		movzx	EAX,CL
		cmp	EAX,096h
		je	L32A
		cmp	EAX,0CAh
		je	L32A
		cmp	EAX,090h
		je	L37A
		cmp	EAX,091h
		je	L389
		cmp	EAX,0C2h
		je	L437
		cmp	EAX,0C3h
		je	L446
		cmp	EAX,0C6h
		je	L547
		cmp	EAX,08Ah
		je	L70A
		cmp	EAX,08Bh
		je	L70A
		cmp	EAX,088h
		je	L59E
		jmp	near ptr L63F
L70A:		mov	EBX,1
		cmp	01F0h[ESP],EBX
		jbe	L734
L718:		mov	EAX,01F4h[ESP]
		push	[EBX*4][EAX]
		call	near ptr _free
		add	ESP,4
		inc	EBX
		cmp	EBX,01F0h[ESP]
		jb	L718
L734:		lea	ECX,01ECh[ESP]
		call	near ptr ??1Array@@UAE@XZ
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0208h
		ret	4
		nop
		nop
		nop
		nop
?addObject@Library@@QAEXPBDPAXI@Z:
		sub	ESP,0218h
		push	EBX
		push	ESI
		push	EDI
		mov	0220h[ESP],ECX
		cmp	dword ptr 022Ch[ESP],0
		jne	L7E9
		cmp	dword ptr 0228h[ESP],0
		jne	L788
		push	016Eh
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[088h]
		call	near ptr __assert
L788:		push	0
		push	dword ptr 022Ch[ESP]
		lea	ECX,018h[ESP]
		call	near ptr ??0FileName@@QAE@PADH@Z
		lea	EAX,010h[ESP]
		push	EAX
		lea	ECX,020h[ESP]
		call	near ptr ??0File@@QAE@PAUFileName@@@Z
		lea	ECX,01Ch[ESP]
		call	near ptr ?readv@File@@QAEXXZ
		mov	EDX,024h[ESP]
		mov	EBX,028h[ESP]
		mov	022Ch[ESP],EDX
		lea	ECX,01Ch[ESP]
		mov	0230h[ESP],EBX
		mov	dword ptr 020h[ESP],1
		call	near ptr ??1File@@UAE@XZ
		lea	ECX,010h[ESP]
		mov	dword ptr 010h[ESP],offset FLAT:??_7FileName@@6B@
		call	near ptr ??1String@@UAE@XZ
L7E9:		mov	dword ptr 03Ch[ESP],0
		mov	EAX,022Ch[ESP]
		mov	038h[ESP],EAX
		cmp	dword ptr 0230h[ESP],0Ah
		jae	L813
L806:		push	offset FLAT:_DATA[094h]
		call	near ptr ?error@@YAXPBDZZ
		add	ESP,4
L813:		mov	EDX,022Ch[ESP]
		mov	BL,[EDX]
		mov	ECX,022Ch[ESP]
		cmp	BL,0F0h
		jne	L872
		mov	ESI,1
		mov	EDI,022Ch[ESP]
		mov	BX,1[EDI]
		mov	03Ch[ESP],ESI
		mov	EDX,3[ECX]
		and	EBX,0FFFFh
		add	EBX,3
		mov	EAX,EBX
		add	EAX,038h[ESP]
		mov	022Ch[ESP],EAX
		cmp	EDX,0230h[ESP]
		ja	L806
		cmp	EBX,0230h[ESP]
		ja	L806
		sub	EDX,EBX
		mov	0230h[ESP],EDX
		jmp short	L8A9
L872:		cmp	BL,021h
		jne	L8A4
		push	8
		push	offset FLAT:_DATA[0ACh]
		push	EDX
		call	near ptr _memcmp
		add	ESP,0Ch
		test	EAX,EAX
		jne	L8A4
		push	offset FLAT:_DATA[0B8h]
		call	near ptr ?error@@YAXPBDZZ
		add	ESP,4
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0218h
		ret	0Ch
L8A4:		mov	EBX,010h
L8A9:		mov	034h[ESP],EBX
		mov	ECX,022Ch[ESP]
		xor	EBX,EBX
		mov	dword ptr 040h[ESP],1
		mov	EDX,0230h[ESP]
		lea	EDI,[EDX][ECX]
		mov	044h[ESP],ECX
		cmp	EDI,ECX
		jbe	LA43
L8D4:		mov	ECX,044h[ESP]
		lea	EDX,3[ECX]
		cmp	EDX,EDI
		jae	L806
		mov	SI,1[ECX]
		mov	DL,[ECX]
		and	ESI,0FFFFh
		lea	ESI,3[ESI][ECX]
		cmp	ESI,EDI
		ja	L806
		movzx	EAX,DL
		cmp	EAX,082h
		je	L927
		cmp	EAX,080h
		je	L927
		cmp	EAX,08Ah
		je	LA03
		cmp	EAX,08Bh
		je	LA03
		jmp	near ptr LA37
L927:		test	EBX,EBX
		jne	LA37
		push	010h
		call	near ptr ??2@YAPAXI@Z
		mov	EBX,EAX
		lea	ECX,04Ch[ESP]
		mov	byte ptr 0Ah[EAX],0
		mov	EDX,048h[ESP]
		mov	[EBX],EDX
		add	dword ptr 048h[ESP],3
		push	ECX
		lea	EDX,04Ch[ESP]
		push	EDX
		call	near ptr L164
		add	ESP,0Ch
		cmp	dword ptr 040h[ESP],0
		je	L99F
		cmp	dword ptr 0228h[ESP],0
		je	L99F
		cmp	dword ptr 03Ch[ESP],0
		jne	L99F
		push	dword ptr 0228h[ESP]
		call	near ptr ?name@FileName@@SAPADPBD@Z
		add	ESP,4
		push	EAX
		call	near ptr _strdup
		mov	0Ch[EBX],EAX
		add	ESP,4
		push	EAX
		call	near ptr ?ext@FileName@@SAPADPBD@Z
		add	ESP,4
		test	EAX,EAX
		je	L9CD
		mov	byte ptr -1[EAX],0
		jmp short	L9CD
L99F:		lea	ECX,048h[ESP]
		push	ECX
		call	near ptr ?name@FileName@@SAPADPBD@Z
		add	ESP,4
		push	EAX
		call	near ptr _strdup
		mov	0Ch[EBX],EAX
		add	ESP,4
		push	EAX
		call	near ptr ?ext@FileName@@SAPADPBD@Z
		add	ESP,4
		test	EAX,EAX
		je	L9C9
		mov	byte ptr -1[EAX],0
L9C9:		or	byte ptr 0Ah[EBX],2
L9CD:		push	offset FLAT:_DATA[0D8h]
		lea	EDX,04Ch[ESP]
		push	EDX
		call	near ptr _strcmp
		add	ESP,8
		test	EAX,EAX
		jne	L9E9
		or	byte ptr 0Ah[EBX],1
		mov	[EBX],ESI
L9E9:		push	EBX
		mov	ECX,0224h[ESP]
		add	ECX,4
		call	near ptr ?push@Array@@QAEXPAX@Z
		mov	dword ptr 040h[ESP],0
		jmp short	LA37
LA03:		test	EBX,EBX
		je	LA20
		mov	EAX,[EBX]
		xor	EDX,EDX
		mov	ECX,ESI
		sub	EAX,038h[ESP]
		div	dword ptr 034h[ESP]
		sub	ECX,[EBX]
		mov	8[EBX],AX
		mov	4[EBX],ECX
		xor	EBX,EBX
LA20:		mov	EDX,034h[ESP]
		lea	ESI,-1[ESI][EDX]
		lea	ECX,-1[EDX]
		sub	ESI,038h[ESP]
		not	ECX
		and	ESI,ECX
		add	ESI,038h[ESP]
LA37:		mov	044h[ESP],ESI
		cmp	ESI,EDI
		jb	L8D4
LA43:		test	EBX,EBX
		jne	L806
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0218h
		ret	0Ch
_NameCompare:
		push	EBX
		mov	EAX,0Ch[ESP]
		mov	ECX,[EAX]
		push	dword ptr [ECX]
		mov	EDX,0Ch[ESP]
		mov	EBX,[EDX]
		push	dword ptr [EBX]
		call	near ptr _strcmp
		add	ESP,8
		pop	EBX
		ret
?numDictPages@Library@@AAEGI@Z:
		push	ECX
		push	EBX
		mov	EBX,ECX
		push	EBP
		push	ESI
		xor	ESI,ESI
		push	EDI
		xor	EDI,EDI
		cmp	01Ch[EBX],ESI
		je	LAA3
LA82:		mov	ECX,020h[EBX]
		mov	EBP,[ESI*4][ECX]
		push	dword ptr 0[EBP]
		call	near ptr _strlen
		add	EAX,4
		and	EAX,0FFFFFFFEh
		add	EDI,EAX
		inc	ESI
		add	ESP,4
		cmp	01Ch[EBX],ESI
		ja	LA82
LAA3:		xor	ESI,ESI
		cmp	8[EBX],ESI
		je	LAD9
LAAA:		mov	EDX,0Ch[EBX]
		mov	ECX,[ESI*4][EDX]
		push	dword ptr 0Ch[ECX]
		call	near ptr _strlen
		add	ESP,4
		mov	EBP,EAX
		cmp	EAX,0FFh
		jbe	LAC8
		add	EBP,2
LAC8:		lea	EDX,5[EBP]
		and	EDX,0FFFFFFFEh
		add	EDI,EDX
		inc	ESI
		cmp	8[EBX],ESI
		ja	LAAA
LAD9:		mov	EAX,01Ch[EBX]
		mov	ECX,8[EBX]
		lea	EAX,022h[EAX][ECX]
		mov	ECX,023h
		xor	EDX,EDX
		div	ECX
		mov	ECX,01DAh
		xor	EDX,EDX
		mov	010h[ESP],AX
		push	EAX
		lea	EAX,01D9h[EDI]
		sub	EAX,01Ch[ESP]
		sub	EAX,01Ch[ESP]
		sub	ECX,01Ch[ESP]
		div	ECX
		mov	EDX,EAX
		pop	EAX
		cmp	AX,DX
		jbe	LB1C
		mov	BP,010h[ESP]
		jmp short	LB1E
LB1C:		mov	EBP,EDX
LB1E:		xor	ESI,ESI
		cmp	FLAT:_DATA[0DCh],ESI
		jne	LB72
LB28:		mov	ECX,EBP
		and	ECX,0FFFFh
		inc	ECX
		or	ECX,1
		mov	ESI,ECX
		mov	EBX,3
		shr	ESI,1
		cmp	ESI,EBX
		jbe	LB6E
LB44:		mov	EAX,ECX
		xor	EDX,EDX
		div	EBX
		imul	EAX,EBX
		cmp	EAX,ECX
		je	LB5E
		mov	EDI,ECX
		add	EBX,2
		shr	EDI,1
		cmp	EDI,EBX
		ja	LB44
		jmp short	LB6E
LB5E:		add	ECX,2
		mov	EDX,ECX
		mov	EBX,3
		shr	EDX,1
		cmp	EDX,EBX
		ja	LB44
LB6E:		mov	EBP,ECX
		jmp short	LB9A
LB72:		mov	ECX,EBP
		and	ECX,0FFFFh
LB7A:		cmp	FLAT:_DATA[0DCh][ESI*4],ECX
		jbe	LB8D
		mov	BP,FLAT:_DATA[0DCh][ESI*4]
		jmp short	LB9A
LB8D:		inc	ESI
		cmp	dword ptr FLAT:_DATA[0DCh][ESI*4],0
		jne	LB7A
		jmp short	LB28
LB9A:		pop	EDI
		mov	EAX,EBP
		pop	ESI
		pop	EBP
		pop	EBX
		pop	ECX
		ret	4
LBA4:		sub	ESP,014h
		mov	ECX,020h[ESP]
		mov	EDX,024h[ESP]
		push	EBX
		lea	EBX,[EDX][ECX]
		xor	ECX,ECX
		push	EBP
		mov	EDX,02Ch[ESP]
		mov	EBP,ECX
		push	ESI
		mov	ESI,02Ch[ESP]
		push	EDI
		mov	EDI,ECX
		mov	014h[ESP],CX
		mov	016h[ESP],CX
		mov	01Ch[ESP],EDX
		mov	ECX,01Ch[ESP]
		dec	ECX
		mov	01Ch[ESP],ECX
		inc	ECX
		je	LC83
LBE2:		push	2
		mov	DX,018h[ESP]
		and	EDX,0FFFFh
		push	EDX
		call	near ptr __rotl
		mov	CL,[ESI]
		or	CL,020h
		mov	EDX,EBP
		and	EDX,0FFFFh
		and	ECX,0FFh
		xor	EAX,ECX
		mov	01Ch[ESP],AX
		push	2
		push	EDX
		call	near ptr __rotr
		mov	ECX,ESI
		mov	DL,[ECX]
		push	2
		or	DL,020h
		mov	ECX,EDI
		and	ECX,0FFFFh
		inc	ESI
		push	ECX
		and	EDX,0FFh
		xor	EAX,EDX
		mov	EBP,EAX
		call	near ptr __rotr
		mov	DL,[EBX]
		or	DL,020h
		and	EDX,0FFh
		push	2
		xor	EAX,EDX
		mov	CX,032h[ESP]
		mov	EDI,EAX
		and	ECX,0FFFFh
		push	ECX
		call	near ptr __rotl
		mov	EDX,EBX
		mov	CL,[EDX]
		or	CL,020h
		dec	EBX
		and	ECX,0FFh
		xor	EAX,ECX
		mov	036h[ESP],AX
		add	ESP,020h
		mov	EDX,01Ch[ESP]
		dec	EDX
		mov	01Ch[ESP],EDX
		inc	EDX
		jne	LBE2
LC83:		mov	AX,014h[ESP]
		mov	CX,02Ch[ESP]
		mov	BX,016h[ESP]
		and	EAX,0FFFFh
		and	ECX,0FFFFh
		cdq
		idiv	ECX
		mov	EAX,EBX
		and	EAX,0FFFFh
		mov	014h[ESP],DX
		cdq
		idiv	ECX
		test	DX,DX
		mov	EBX,EDX
		jne	LCB7
		inc	EBX
LCB7:		mov	EAX,EDI
		and	EAX,0FFFFh
		mov	ECX,025h
		cdq
		idiv	ECX
		mov	EAX,EBP
		mov	EDI,EDX
		and	EAX,0FFFFh
		cdq
		idiv	ECX
		test	DX,DX
		mov	EBP,EDX
		jne	LCDA
		inc	EBP
LCDA:		mov	016h[ESP],BX
		mov	EDX,034h[ESP]
		lea	ECX,3[EDX]
		mov	020h[ESP],ECX
		mov	SI,014h[ESP]
		mov	EBX,EDI
		cmp	EDX,0FFh
		jbe	LCFE
		add	dword ptr 020h[ESP],2
LCFE:		mov	018h[ESP],SI
		mov	SI,018h[ESP]
		mov	EDI,EBX
		and	ESI,0FFFFh
		shl	ESI,9
		add	ESI,028h[ESP]
LD17:		mov	EDX,EBX
		and	EDX,0FFFFh
		cmp	[ESI][EDX],0
		jne	LDB7
		movzx	ECX,byte ptr 025h[ESI]
		mov	EDI,ECX
		add	EDI,EDI
		cmp	DI,025h
		ja	LD4B
		push	029Fh
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[0268h]
		call	near ptr __assert
LD4B:		mov	EDX,EDI
		and	EDX,0FFFFh
		add	EDX,020h[ESP]
		cmp	EDX,0200h
		jbe	LD65
		mov	byte ptr 025h[ESI],0FFh
		jmp short	LDD4
LD65:		mov	ECX,EDI
		and	ECX,0FFFFh
		mov	EDX,EBX
		mov	010h[ESP],ECX
		and	EDX,0FFFFh
		sar	ECX,1
		mov	[ESI][EDX],CL
		mov	EBP,020h[ESP]
		push	EBP
		push	dword ptr 034h[ESP]
		mov	ECX,018h[ESP]
		lea	EDX,[ESI][ECX]
		push	EDX
		call	near ptr _memcpy
		lea	ECX,1[EBP]
		shr	ECX,1
		add	025h[ESI],CL
		mov	DL,025h[ESI]
		add	ESP,0Ch
		test	DL,DL
		jne	LDAA
		mov	byte ptr 025h[ESI],0FFh
LDAA:		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret
LDB7:		add	BX,BP
		mov	ECX,025h
		mov	EAX,EBX
		and	EAX,0FFFFh
		cdq
		idiv	ECX
		mov	EBX,EDX
		cmp	DX,DI
		jne	LD17
LDD4:		mov	SI,018h[ESP]
		add	SI,016h[ESP]
		cmp	SI,02Ch[ESP]
		jb	LDEA
		sub	SI,02Ch[ESP]
LDEA:		cmp	SI,014h[ESP]
		jne	LCFE
		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBP
		pop	EBX
		add	ESP,014h
		ret
		nop
?FillDict@Library@@AAEHPAEG@Z:
		sub	ESP,01E8h
		push	EBX
		push	ESI
		mov	ESI,ECX
		push	EDI
		xor	EDI,EDI
		cmp	8[ESI],EDI
		je	LEFC
LE16:		mov	ECX,0Ch[ESI]
		mov	EDX,[EDI*4][ECX]
		mov	01ECh[ESP],EDX
		push	dword ptr 0Ch[EDX]
		call	near ptr _strlen
		add	ESP,4
		mov	EBX,EAX
		cmp	AX,0FFh
		jbe	LE6F
		mov	byte ptr 010h[ESP],0FFh
		mov	ECX,EBX
		inc	CX
		mov	byte ptr 011h[ESP],0
		mov	EDX,EBX
		and	EDX,0FFFFh
		mov	012h[ESP],CX
		push	EDX
		mov	ECX,01F0h[ESP]
		push	dword ptr 0Ch[ECX]
		lea	EDX,01Ch[ESP]
		push	EDX
		call	near ptr _memcpy
		add	EBX,3
		add	ESP,0Ch
		jmp short	LE9C
LE6F:		mov	ECX,EBX
		and	ECX,0FFFFh
		inc	ECX
		mov	010h[ESP],CL
		mov	EDX,EBX
		and	EDX,0FFFFh
		push	EDX
		mov	ECX,01F0h[ESP]
		push	dword ptr 0Ch[ECX]
		lea	EDX,019h[ESP]
		push	EDX
		call	near ptr _memcpy
		add	ESP,0Ch
LE9C:		mov	ECX,EBX
		and	ECX,0FFFFh
		mov	EDX,01ECh[ESP]
		mov	byte ptr 011h[ECX][ESP],021h
		mov	DX,8[EDX]
		mov	012h[ECX][ESP],DX
		test	BX,1
		je	LEC5
		mov	byte ptr 014h[ECX][ESP],0
LEC5:		mov	ECX,EBX
		and	ECX,0FFFFh
		inc	ECX
		push	ECX
		lea	EDX,014h[ESP]
		push	EDX
		push	dword ptr 0204h[ESP]
		push	dword ptr 0204h[ESP]
		call	near ptr LBA4
		add	ESP,010h
		test	EAX,EAX
		je	LFDF
		inc	EDI
		cmp	8[ESI],EDI
		ja	LE16
LEFC:		push	offset FLAT:_NameCompare
		push	4
		push	dword ptr 01Ch[ESI]
		push	dword ptr 020h[ESI]
		call	near ptr _qsort
		xor	EDI,EDI
		add	ESP,010h
		cmp	01Ch[ESI],EDI
		je	LFF7
LF1C:		mov	ECX,020h[ESI]
		mov	EDX,[EDI*4][ECX]
		mov	01F0h[ESP],EDX
		push	dword ptr [EDX]
		call	near ptr _strlen
		add	ESP,4
		mov	EBX,EAX
		cmp	AX,0FFh
		jbe	LF6F
		mov	byte ptr 010h[ESP],0FFh
		mov	EDX,EBX
		and	EDX,0FFFFh
		mov	byte ptr 011h[ESP],0
		mov	012h[ESP],BX
		push	EDX
		mov	ECX,01F4h[ESP]
		push	dword ptr [ECX]
		lea	EDX,01Ch[ESP]
		push	EDX
		call	near ptr _memcpy
		add	EBX,3
		add	ESP,0Ch
		jmp short	LF92
LF6F:		mov	010h[ESP],BL
		mov	ECX,EBX
		and	ECX,0FFFFh
		push	ECX
		mov	EDX,01F4h[ESP]
		push	dword ptr [EDX]
		lea	ECX,019h[ESP]
		push	ECX
		call	near ptr _memcpy
		add	ESP,0Ch
LF92:		mov	ECX,01F0h[ESP]
		mov	EDX,4[ECX]
		mov	CX,8[EDX]
		mov	EDX,EBX
		and	EDX,0FFFFh
		test	BL,1
		mov	011h[EDX][ESP],CX
		jne	LFB7
		mov	byte ptr 013h[EDX][ESP],0
LFB7:		mov	ECX,EBX
		and	ECX,0FFFFh
		push	ECX
		lea	EDX,014h[ESP]
		push	EDX
		push	dword ptr 0204h[ESP]
		push	dword ptr 0204h[ESP]
		call	near ptr LBA4
		add	ESP,010h
		test	EAX,EAX
		jne	LFED
LFDF:		pop	EDI
		xor	EAX,EAX
		pop	ESI
		pop	EBX
		add	ESP,01E8h
		ret	8
LFED:		inc	EDI
		cmp	01Ch[ESI],EDI
		ja	LF1C
LFF7:		pop	EDI
		mov	EAX,1
		pop	ESI
		pop	EBX
		add	ESP,01E8h
		ret	8
?WriteLibToBuffer@Library@@AAEXPAUOutBuffer@@@Z:
		sub	ESP,0228h
		push	EBX
		xor	EBX,EBX
		push	ESI
		mov	ESI,ECX
		push	EDI
		cmp	8[ESI],EBX
		je	L102D
L101A:		mov	ECX,0Ch[ESI]
		push	[EBX*4][ECX]
		mov	ECX,ESI
		call	near ptr ?scanObjModule@Library@@AAEXPAUObjModule@@@Z
		inc	EBX
		cmp	8[ESI],EBX
		ja	L101A
L102D:		mov	dword ptr 018h[ESP],0
		mov	EDI,010h
		mov	EBX,EDI
		cmp	dword ptr 8[ESI],0
		je	L10D9
L1046:		mov	EDX,018h[ESP]
		mov	ECX,0Ch[ESI]
		mov	EDX,[EDX*4][ECX]
		mov	01Ch[ESP],EDX
		mov	EAX,EBX
		xor	EDX,EDX
		div	EDI
		cmp	EAX,0FFFFh
		jbe	L1075
		mov	dword ptr 018h[ESP],0
		add	EDI,EDI
		mov	EBX,EDI
		cmp	dword ptr 8[ESI],0
		jne	L1046
		jmp short	L10D9
L1075:		mov	ECX,01Ch[ESP]
		test	byte ptr 0Ah[ECX],1
		je	L10B8
		mov	EDX,01Ch[ESP]
		push	dword ptr 0Ch[EDX]
		call	near ptr _strlen
		add	ESP,4
		cmp	EAX,01D4h
		jbe	L10A9
		push	0334h
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[0274h]
		call	near ptr __assert
L10A9:		mov	ECX,01Ch[ESP]
		mov	EDX,4[ECX]
		lea	ECX,5[EDX][EAX]
		add	EBX,ECX
		jmp short	L10BB
L10B8:		add	EBX,4[ECX]
L10BB:		lea	EAX,-1[EDI]
		and	EAX,EBX
		je	L10C8
		mov	EDX,EDI
		sub	EDX,EAX
		add	EBX,EDX
L10C8:		inc	dword ptr 018h[ESP]
		mov	ECX,8[ESI]
		cmp	ECX,018h[ESP]
		ja	L1046
L10D9:		push	EDI
		mov	ECX,023Ch[ESP]
		call	near ptr ?fill0@OutBuffer@@QAEXI@Z
		xor	EBX,EBX
		cmp	8[ESI],EBX
		je	L125D
		lea	EDX,-1[EDI]
		mov	0Ch[ESP],EDX
L10F8:		mov	020h[ESP],EBX
		mov	ECX,020h[ESP]
		mov	EDX,0Ch[ESI]
		mov	EBX,[ECX*4][EDX]
		mov	ECX,0238h[ESP]
		mov	EAX,8[ECX]
		xor	EDX,EDX
		div	EDI
		cmp	EAX,0FFFFh
		mov	028h[ESP],EAX
		jbe	L1133
		push	0352h
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[0288h]
		call	near ptr __assert
L1133:		mov	DX,028h[ESP]
		mov	8[EBX],DX
		test	byte ptr 0Ah[EBX],1
		je	L1229
		mov	024h[ESP],EBX
		mov	ECX,024h[ESP]
		push	dword ptr 0Ch[ECX]
		call	near ptr _strlen
		xor	ECX,ECX
		mov	030h[ESP],EAX
		mov	byte ptr 034h[ESP],080h
		mov	DL,030h[ESP]
		add	DL,2
		mov	035h[ESP],DL
		cmp	EAX,0FDh
		mov	036h[ESP],CL
		mov	DL,030h[ESP]
		mov	037h[ESP],DL
		jbe	L1193
		push	035Fh
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[0298h]
		call	near ptr __assert
L1193:		mov	EDX,028h[ESP]
		push	EAX
		push	dword ptr 0Ch[EDX]
		lea	EDX,040h[ESP]
		push	EDX
		call	near ptr _memcpy
		mov	ECX,03Ch[ESP]
		lea	EDX,4[ECX]
		mov	021Ch[ESP],EDX
		lea	EBX,040h[ESP]
		mov	byte ptr 0220h[ESP],0
		add	ESP,010h
		mov	ECX,020Ch[ESP]
		dec	ECX
		mov	020Ch[ESP],ECX
		inc	ECX
		je	L11F0
L11D4:		mov	DL,[EBX]
		mov	ECX,020Ch[ESP]
		dec	ECX
		sub	0210h[ESP],DL
		inc	EBX
		mov	020Ch[ESP],ECX
		inc	ECX
		jne	L11D4
L11F0:		mov	DL,0210h[ESP]
		mov	ECX,02Ch[ESP]
		add	ECX,5
		push	ECX
		mov	[EBX],DL
		lea	EDX,034h[ESP]
		push	EDX
		mov	ECX,0240h[ESP]
		call	near ptr ?write@OutBuffer@@QAEXPBXI@Z
		mov	EDX,024h[ESP]
		push	dword ptr 4[EDX]
		push	dword ptr [EDX]
		mov	ECX,0240h[ESP]
		call	near ptr ?write@OutBuffer@@QAEXPBXI@Z
		jmp short	L1233
L1229:		push	dword ptr 4[EBX]
		push	dword ptr [EBX]
		call	near ptr ?write@OutBuffer@@QAEXPBXI@Z
L1233:		mov	EDX,0238h[ESP]
		mov	EBX,8[EDX]
		and	EBX,0Ch[ESP]
		je	L124F
		mov	ECX,EDI
		sub	ECX,EBX
		push	ECX
		mov	ECX,EDX
		call	near ptr ?fill0@OutBuffer@@QAEXI@Z
L124F:		mov	EBX,020h[ESP]
		inc	EBX
		cmp	8[ESI],EBX
		ja	L10F8
L125D:		mov	EDX,0238h[ESP]
		mov	ECX,8[EDX]
		mov	0214h[ESP],ECX
		mov	ECX,EDX
		push	0F1h
		call	near ptr ?writeByte@OutBuffer@@QAEXI@Z
		mov	EDX,0200h
		mov	CX,0214h[ESP]
		add	CX,3
		sub	EDX,ECX
		and	EDX,01FFh
		mov	0218h[ESP],DX
		and	EDX,0FFFFh
		push	EDX
		mov	ECX,023Ch[ESP]
		call	near ptr ?writeword@OutBuffer@@QAEXI@Z
		mov	DX,0218h[ESP]
		and	EDX,0FFFFh
		push	EDX
		mov	ECX,023Ch[ESP]
		call	near ptr ?fill0@OutBuffer@@QAEXI@Z
		xor	EBX,EBX
		mov	word ptr 0222h[ESP],020h
L12D5:		mov	DX,0222h[ESP]
		mov	ECX,ESI
		and	EDX,0FFFFh
		push	EDX
		call	near ptr ?numDictPages@Library@@AAEGI@Z
		test	EBX,EBX
		mov	0220h[ESP],AX
		je	L1316
		mov	DX,0220h[ESP]
		and	EDX,0FFFFh
		shl	EDX,9
		push	EDX
		push	EBX
		call	near ptr _realloc
		mov	EBX,EAX
		add	ESP,8
		jmp short	L1329
L1316:		and	EAX,0FFFFh
		shl	EAX,9
		push	EAX
		call	near ptr _malloc
		mov	EBX,EAX
		add	ESP,4
L1329:		mov	021Ch[ESP],EBX
		cmp	dword ptr 021Ch[ESP],0
		jne	L134E
		push	0394h
		push	offset FLAT:_DATA[010h]
		push	offset FLAT:_DATA[02ACh]
		call	near ptr __assert
L134E:		mov	CX,0220h[ESP]
		and	ECX,0FFFFh
		shl	ECX,9
		push	ECX
		push	0
		push	dword ptr 0224h[ESP]
		call	near ptr _memset
		add	ESP,0Ch
		cmp	word ptr 0220h[ESP],0
		je	L13A8
		mov	ECX,021Ch[ESP]
		lea	EDX,025h[ECX]
		mov	BX,0220h[ESP]
		and	EBX,0FFFFh
		shl	EBX,9
		lea	EBX,025h[EBX][ECX]
L139B:		mov	byte ptr [EDX],013h
		add	EDX,0200h
		cmp	EBX,EDX
		ja	L139B
L13A8:		push	dword ptr 0220h[ESP]
		mov	ECX,ESI
		push	dword ptr 0220h[ESP]
		call	near ptr ?FillDict@Library@@AAEHPAEG@Z
		test	EAX,EAX
		jne	L13D6
		add	word ptr 0222h[ESP],010h
		mov	EBX,021Ch[ESP]
		jmp	near ptr L12D5
L13D6:		mov	DX,0220h[ESP]
		mov	ESI,0238h[ESP]
		mov	EBX,021Ch[ESP]
		mov	ECX,ESI
		and	EDX,0FFFFh
		shl	EDX,9
		push	EDX
		push	EBX
		call	near ptr ?write@OutBuffer@@QAEXPBXI@Z
		test	EBX,EBX
		je	L140B
		push	EBX
		call	near ptr _free
		add	ESP,4
L140B:		push	010h
		push	0
		lea	EDX,022Ch[ESP]
		push	EDX
		call	near ptr _memset
		mov	EDX,0220h[ESP]
		mov	byte ptr 0230h[ESP],0F0h
		mov	CX,0224h[ESP]
		mov	byte ptr 0239h[ESP],1
		and	ECX,0FFFFh
		lea	ECX,3[ECX][EDX]
		mov	EDX,EDI
		mov	0233h[ESP],ECX
		add	DX,0FFFFFFFDh
		mov	0231h[ESP],DX
		mov	CX,022Ch[ESP]
		mov	0237h[ESP],CX
		push	010h
		lea	EDX,0234h[ESP]
		push	EDX
		push	dword ptr 4[ESI]
		call	near ptr _memcpy
		add	ESP,018h
		pop	EDI
		pop	ESI
		pop	EBX
		add	ESP,0228h
		ret	4
_TEXT	ends
_DATA	segment
D0	db	06ch,069h,062h,072h,061h,072h,079h,020h
	db	020h,020h,025h,073h,00ah,000h,000h,000h
D10	db	06ch,069h,062h,06fh,06dh,066h,02eh,063h
	db	000h,000h,000h,000h
D1C	db	06ch,065h,06eh,020h
	db	03ch,03dh,020h,04ch,049h,042h,049h,044h
	db	04dh,041h,058h,000h
D2C	db	073h,000h,000h,000h
D30	db	06dh,075h,06ch,074h,069h,070h,06ch,065h
	db	020h,064h,065h,066h,069h,06eh,069h,074h
	db	069h,06fh,06eh,020h,06fh,066h,020h,025h
	db	073h,03ah,020h,025h,073h,020h,061h,06eh
	db	064h,020h,025h,073h,03ah,020h,025h,073h
	db	000h,000h,000h,000h,080h,0aah,038h,030h
	db	033h,038h,036h,000h,000h,0a0h,001h,000h
D68	db	06fh,06dh,000h,000h
D6C	db	063h,06fh,072h,072h
	db	075h,070h,074h,020h,043h,04fh,04dh,044h
	db	041h,054h,000h,000h
D7C	db	070h,020h,03ch,020h
	db	070h,065h,06eh,064h,000h,000h,000h,000h
D88	db	06dh,06fh,064h,075h,06ch,065h,05fh,06eh
	db	061h,06dh,065h,000h
D94	db	063h,06fh,072h,072h
	db	075h,070h,074h,020h,06fh,062h,06ah,065h
	db	063h,074h,020h,06dh,06fh,064h,075h,06ch
	db	065h,000h,000h,000h
DAC	db	021h,03ch,061h,072h
	db	063h,068h,03eh,00ah,000h,000h,000h,000h
DB8	db	043h,04fh,046h,046h,020h,06ch,069h,062h
	db	072h,061h,072h,069h,065h,073h,020h,06eh
	db	06fh,074h,020h,073h,075h,070h,070h,06fh
	db	072h,074h,065h,064h,000h,000h,000h,000h
DD8	db	043h,000h,000h,000h,001h,000h,000h,000h
	db	002h,000h,000h,000h,003h,000h,000h,000h
	db	005h,000h,000h,000h,007h,000h,000h,000h
	db	00bh,000h,000h,000h,00dh,000h,000h,000h
	db	011h,000h,000h,000h,013h,000h,000h,000h
	db	017h,000h,000h,000h,01dh,000h,000h,000h
	db	01fh,000h,000h,000h,025h,000h,000h,000h
	db	029h,000h,000h,000h,02bh,000h,000h,000h
	db	02fh,000h,000h,000h,035h,000h,000h,000h
	db	03bh,000h,000h,000h,03dh,000h,000h,000h
	db	043h,000h,000h,000h,047h,000h,000h,000h
	db	049h,000h,000h,000h,04fh,000h,000h,000h
	db	053h,000h,000h,000h,059h,000h,000h,000h
	db	061h,000h,000h,000h,065h,000h,000h,000h
	db	067h,000h,000h,000h,06bh,000h,000h,000h
	db	06dh,000h,000h,000h,071h,000h,000h,000h
	db	07fh,000h,000h,000h,083h,000h,000h,000h
	db	089h,000h,000h,000h,08bh,000h,000h,000h
	db	095h,000h,000h,000h,097h,000h,000h,000h
	db	09dh,000h,000h,000h,0a3h,000h,000h,000h
	db	0a7h,000h,000h,000h,0adh,000h,000h,000h
	db	0b3h,000h,000h,000h,0b5h,000h,000h,000h
	db	0bfh,000h,000h,000h,0c1h,000h,000h,000h
	db	0c5h,000h,000h,000h,0c7h,000h,000h,000h
	db	0d3h,000h,000h,000h,0dfh,000h,000h,000h
	db	0e3h,000h,000h,000h,0e5h,000h,000h,000h
	db	0e9h,000h,000h,000h,0efh,000h,000h,000h
	db	0f1h,000h,000h,000h,0fbh,000h,000h,000h
	db	001h,001h,000h,000h,007h,001h,000h,000h
	db	00dh,001h,000h,000h,00fh,001h,000h,000h
	db	015h,001h,000h,000h,019h,001h,000h,000h
	db	01bh,001h,000h,000h,025h,001h,000h,000h
	db	033h,001h,000h,000h,037h,001h,000h,000h
	db	039h,001h,000h,000h,03dh,001h,000h,000h
	db	04bh,001h,000h,000h,051h,001h,000h,000h
	db	05bh,001h,000h,000h,05dh,001h,000h,000h
	db	061h,001h,000h,000h,067h,001h,000h,000h
	db	06fh,001h,000h,000h,075h,001h,000h,000h
	db	07bh,001h,000h,000h,07fh,001h,000h,000h
	db	085h,001h,000h,000h,08dh,001h,000h,000h
	db	091h,001h,000h,000h,099h,001h,000h,000h
	db	0a3h,001h,000h,000h,0a5h,001h,000h,000h
	db	0afh,001h,000h,000h,0b1h,001h,000h,000h
	db	0b7h,001h,000h,000h,0bbh,001h,000h,000h
	db	0c1h,001h,000h,000h,0c9h,001h,000h,000h
	db	0cdh,001h,000h,000h,0cfh,001h,000h,000h
	db	0d3h,001h,000h,000h,0dfh,001h,000h,000h
	db	0e7h,001h,000h,000h,0ebh,001h,000h,000h
	db	0f3h,001h,000h,000h,0f7h,001h,000h,000h
	db	0fdh,001h,000h,000h,000h,000h,000h,000h
D268	db	06eh,020h,03eh,020h,048h,041h,053h,048h
	db	04dh,04fh,044h,000h
D274	db	073h,069h,07ah,065h
	db	020h,03ch,03dh,020h,04ch,049h,042h,049h
	db	044h,04dh,041h,058h,000h,000h,000h,000h
D288	db	070h,061h,067h,065h,020h,03ch,03dh,020h
	db	030h,078h,046h,046h,046h,046h,000h,000h
D298	db	073h,069h,07ah,065h,020h,03ch,03dh,020h
	db	030h,078h,046h,046h,020h,02dh,020h,032h
	db	000h,000h,000h,000h
D2AC	db	062h,075h,063h,06bh
	db	065h,074h,073h,050h,000h
_DATA	ends
CONST	segment
CONST	ends
_BSS	segment
_BSS	ends
??_7FileName@@6B@	comdat
	dd	offset FLAT:??_GFileName@@UAEPAXI@Z
	dd	offset FLAT:?equals@FileName@@UAEHPAUObject@@@Z
	dd	offset FLAT:?hashCode@FileName@@UAEIXZ
	dd	offset FLAT:?compare@FileName@@UAEHPAUObject@@@Z
	dd	offset FLAT:?print@String@@UAEXXZ
	dd	offset FLAT:?toChars@String@@UAEPADXZ
	dd	offset FLAT:?toDchars@Object@@UAEPADXZ
	dd	offset FLAT:?toBuffer@Object@@UAEXPAUOutBuffer@@@Z
	dd	offset FLAT:?dyncast@Object@@UAEHXZ
??_7FileName@@6B@	ends
??_GFileName@@UAEPAXI@Z	comdat
	assume	CS:??_GFileName@@UAEPAXI@Z
L0:		push	EBX
		mov	EBX,ECX
		test	ECX,ECX
		je	L25
		mov	dword ptr [EBX],offset FLAT:??_7FileName@@6B@
		call	near ptr ??1String@@UAE@XZ
		test	dword ptr 8[ESP],1
		je	L25
		push	EBX
		call	near ptr ??3@YAXPAX@Z
		add	ESP,4
L25:		mov	EAX,EBX
		pop	EBX
		ret	4
??_GFileName@@UAEPAXI@Z	ends
	end
