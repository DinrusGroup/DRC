// Dinrus Dll Intro
import win, cidrus: устбуф;
import stdrus: дайтекпап;

	extern(C)
	{
	ткст[] ртПолучиАрги(цел аргчло, сим **аргткст);
	бул рт_вЗадержке();
	бул ртПущен();
	бул ртОстановлен();
	бул ртСтарт(ПередВходом передвхо = пусто, ОбработчикИсключения дг = пусто);
	проц ртСтоп();	
	проц  ртСоздайОбработчикСледа( Следопыт h );
	Исключение.ИнфОСледе ртСоздайКонтекстСледа( ук  ptr );
	проц  ртУстановиОбработчикСборки(ОбработчикСборки h);
	}
enum
{
	ДЛЛ_ПРИКРЕПИ_ПРОЦЕСС	 = 1 ,
    ДЛЛ_ПРИКРЕПИ_НИТЬ 			= 2 ,
    ДЛЛ_ОТКРЕПИ_НИТЬ			 = 3,
    ДЛЛ_ОТКРЕПИ_ПРОЦЕСС			 = 0,
}

const РАЗМСОВМПАМ = 4096;
 
static ук вПам = пусто;      // указатель на разделяемую память
static ук картОбъект = пусто;  // хэндл к файлмаппингу
static бцел индексНЛХ; 

extern(C) struct ДанныеОДлл
{
ткст имя;
экз указатель;
ткст путь;
}

static ДанныеОДлл м_д;

ДанныеОДлл зарегистрируйДлл()
{
	м_д.имя = "Dinrus.Base.dll";
	м_д.указатель = ДайДескрМодуляА(пусто);
	м_д.путь  = дайтекпап();
	return м_д;
}

extern (Windows)
BOOL DllMain(HINSTANCE экземп, бдол резон, ук резерв)
{
	Бул  финиц, фигнор;
	ук вДанные; 

		switch (резон)
		{
		case ДЛЛ_ПРИКРЕПИ_ПРОЦЕСС:
				if(ртОстановлен) ртСтарт(); //else эхо("Process already started");
				картОбъект = СоздайМаппингФайлаА( НЕВЕРНХЭНДЛ, пусто, ППамять.СтрЗапЧтен, 0, РАЗМСОВМПАМ, "DinrusBaseCommonMemory"); 
				if (картОбъект == пусто)
					{
					throw new Исключение("Не удалось создание маппинга");				
						//return 1;
					}
					
				финиц =(ДайПоследнююОшибку() != ПОшибка.УжеЕсть);
				
				вПам = ВидФайлаВКарту( картОбъект, ППамять.Запись, 0, 0, РАЗМСОВМПАМ);  
				if (вПам == пусто) 
					return нет; 
					
				if (финиц) 
					устбуф(вПам, '\0', РАЗМСОВМПАМ);
					
				if ((индексНЛХ = РазместиНлх()) == ПОшибка.НЛХВнеИндексов) 
					{
					throw new Исключение("Выход индекса НЛХ за пределы диапазона");				
						//return 1;
					} 
					
					устСовместнПам( cast(убайт) "Just to try it");					
			
			//break;
			case ДЛЛ_ПРИКРЕПИ_НИТЬ:
			вДанные = cast(ук) РазместиЛок(ППамять.Лук, 256); 
				if (вДанные != пусто) 
					фигнор = УстановиЗначениеНлх(индексНЛХ, вДанные); 	
		break; 
		
		case ДЛЛ_ОТКРЕПИ_НИТЬ:
		
			 вДанные = ДайЗначениеНлх(индексНЛХ); 
				if (вДанные != пусто) 
					ОсвободиЛок(cast(лук) вДанные); 	
		break; 
			
		case ДЛЛ_ОТКРЕПИ_ПРОЦЕСС:
		
		фигнор = ВидФайлаИзКарты(вПам);
		фигнор = ЗакройДескр(картОбъект);
		вДанные = ДайЗначениеНлх(индексНЛХ); 
				if (вДанные != пусто) 
					ОсвободиЛок(cast(лук) вДанные); 
	 
				 ОсвободиНлх(индексНЛХ); 
		if(ртПущен) ртСтоп();
			break;	
		
		default: 
		 
			  break; 
		 }
		
		return 0;	
	}

 
export extern (C)	проц устСовместнПам( убайт буф) 
	{ 
		убайт врем;  
		врем = cast(убайт) вПам; 
	 
			while (*буф) 
			*врем++ =~ *буф++; 
		*врем =~cast(байт) '\0'; 
	} 
	
export extern (C)	убайт получиСовместнПам() 
	{ 
		убайт врем;
		бцел сразм = 4096;
		убайт буф;
		
		 врем = cast(убайт) вПам; 
	 
		while (*врем && --сразм) 
			*буф++ =~ *врем++; 
		*буф =~cast(байт) '\0'; 
		return буф;
	}
	

export extern (C)	ДанныеОДлл данныеБазовойДлл() {зарегистрируйДлл(); return м_д;}

/*	
export extern (C)	проц передайМодИнфо( ИнфОМодуле[] минфо) 
	{ 
		ИнфОМодуле*[] врем;  
		врем = cast(ИнфОМодуле*[]) вПам; 
	 
			while (*минфо) 
			*врем++ = *минфо++; 		
	} 
	
	export extern (C)	усим получиМодИнфо() 
	{ 
		ИнфОМодуле*[] врем; 
		бцел сразм = 4096;
		усим буф;
		
		 врем = cast(усим) вПам; 
	 
		while (*врем && --сразм) 
			*буф++ = *врем++; 
		*буф = '\0'; 
		return буф;
	}
	 */
/*	 
extern (C)	проц получиСовместнПам(усим буф, бцел сразм) 
	{ 
		усим врем; 
	 
		 врем = cast(усим) вПам; 
	 
		while (*врем && --сразм) 
			*буф++ = *врем++; 
		*буф = '\0'; 
	}*/
	
